import * as grpc from '@grpc/grpc-js';
import { UntypedServiceImplementation, handleUnaryCall, handleServerStreamingCall, Client, ServiceError, ClientUnaryCall, Metadata, CallOptions, ClientReadableStream, ChannelCredentials, ClientOptions } from '@grpc/grpc-js';
export { CallOptions, Client, ClientOptions, ClientReadableStream, ClientUnaryCall, Metadata, Server, ServerCredentials, ServerWritableStream, ServiceError, sendUnaryData, status } from '@grpc/grpc-js';
import { HubResult } from '@farcaster/core';
export * from '@farcaster/core';
import _m0 from 'protobufjs/minimal';

declare enum OnChainEventType {
    EVENT_TYPE_NONE = 0,
    EVENT_TYPE_SIGNER = 1,
    EVENT_TYPE_SIGNER_MIGRATED = 2,
    EVENT_TYPE_ID_REGISTER = 3,
    EVENT_TYPE_STORAGE_RENT = 4
}
declare enum SignerEventType {
    NONE = 0,
    ADD = 1,
    REMOVE = 2,
    ADMIN_RESET = 3
}
declare enum IdRegisterEventType {
    NONE = 0,
    REGISTER = 1,
    TRANSFER = 2,
    CHANGE_RECOVERY = 3
}
interface OnChainEvent {
    type: OnChainEventType;
    chainId: number;
    blockNumber: number;
    blockHash: Uint8Array;
    blockTimestamp: number;
    transactionHash: Uint8Array;
    logIndex: number;
    fid: number;
    signerEventBody?: SignerEventBody | undefined;
    signerMigratedEventBody?: SignerMigratedEventBody | undefined;
    idRegisterEventBody?: IdRegisterEventBody | undefined;
    storageRentEventBody?: StorageRentEventBody | undefined;
    txIndex: number;
    version: number;
}
declare const OnChainEvent: {
    encode(message: OnChainEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): OnChainEvent;
    fromJSON(object: any): OnChainEvent;
    toJSON(message: OnChainEvent): unknown;
    create<I extends {
        type?: OnChainEventType;
        chainId?: number;
        blockNumber?: number;
        blockHash?: Uint8Array;
        blockTimestamp?: number;
        transactionHash?: Uint8Array;
        logIndex?: number;
        fid?: number;
        signerEventBody?: {
            key?: Uint8Array;
            keyType?: number;
            eventType?: SignerEventType;
            metadata?: Uint8Array;
            metadataType?: number;
        } | undefined;
        signerMigratedEventBody?: {
            migratedAt?: number;
        } | undefined;
        idRegisterEventBody?: {
            to?: Uint8Array;
            eventType?: IdRegisterEventType;
            from?: Uint8Array;
            recoveryAddress?: Uint8Array;
        } | undefined;
        storageRentEventBody?: {
            payer?: Uint8Array;
            units?: number;
            expiry?: number;
        } | undefined;
        txIndex?: number;
        version?: number;
    } & {
        type?: OnChainEventType;
        chainId?: number;
        blockNumber?: number;
        blockHash?: Uint8Array;
        blockTimestamp?: number;
        transactionHash?: Uint8Array;
        logIndex?: number;
        fid?: number;
        signerEventBody?: ({
            key?: Uint8Array;
            keyType?: number;
            eventType?: SignerEventType;
            metadata?: Uint8Array;
            metadataType?: number;
        } & {
            key?: Uint8Array;
            keyType?: number;
            eventType?: SignerEventType;
            metadata?: Uint8Array;
            metadataType?: number;
        } & { [K in Exclude<keyof I["signerEventBody"], keyof SignerEventBody>]: never; }) | undefined;
        signerMigratedEventBody?: ({
            migratedAt?: number;
        } & {
            migratedAt?: number;
        } & { [K_1 in Exclude<keyof I["signerMigratedEventBody"], "migratedAt">]: never; }) | undefined;
        idRegisterEventBody?: ({
            to?: Uint8Array;
            eventType?: IdRegisterEventType;
            from?: Uint8Array;
            recoveryAddress?: Uint8Array;
        } & {
            to?: Uint8Array;
            eventType?: IdRegisterEventType;
            from?: Uint8Array;
            recoveryAddress?: Uint8Array;
        } & { [K_2 in Exclude<keyof I["idRegisterEventBody"], keyof IdRegisterEventBody>]: never; }) | undefined;
        storageRentEventBody?: ({
            payer?: Uint8Array;
            units?: number;
            expiry?: number;
        } & {
            payer?: Uint8Array;
            units?: number;
            expiry?: number;
        } & { [K_3 in Exclude<keyof I["storageRentEventBody"], keyof StorageRentEventBody>]: never; }) | undefined;
        txIndex?: number;
        version?: number;
    } & { [K_4 in Exclude<keyof I, keyof OnChainEvent>]: never; }>(base?: I | undefined): OnChainEvent;
    fromPartial<I_1 extends {
        type?: OnChainEventType;
        chainId?: number;
        blockNumber?: number;
        blockHash?: Uint8Array;
        blockTimestamp?: number;
        transactionHash?: Uint8Array;
        logIndex?: number;
        fid?: number;
        signerEventBody?: {
            key?: Uint8Array;
            keyType?: number;
            eventType?: SignerEventType;
            metadata?: Uint8Array;
            metadataType?: number;
        } | undefined;
        signerMigratedEventBody?: {
            migratedAt?: number;
        } | undefined;
        idRegisterEventBody?: {
            to?: Uint8Array;
            eventType?: IdRegisterEventType;
            from?: Uint8Array;
            recoveryAddress?: Uint8Array;
        } | undefined;
        storageRentEventBody?: {
            payer?: Uint8Array;
            units?: number;
            expiry?: number;
        } | undefined;
        txIndex?: number;
        version?: number;
    } & {
        type?: OnChainEventType;
        chainId?: number;
        blockNumber?: number;
        blockHash?: Uint8Array;
        blockTimestamp?: number;
        transactionHash?: Uint8Array;
        logIndex?: number;
        fid?: number;
        signerEventBody?: ({
            key?: Uint8Array;
            keyType?: number;
            eventType?: SignerEventType;
            metadata?: Uint8Array;
            metadataType?: number;
        } & {
            key?: Uint8Array;
            keyType?: number;
            eventType?: SignerEventType;
            metadata?: Uint8Array;
            metadataType?: number;
        } & { [K_5 in Exclude<keyof I_1["signerEventBody"], keyof SignerEventBody>]: never; }) | undefined;
        signerMigratedEventBody?: ({
            migratedAt?: number;
        } & {
            migratedAt?: number;
        } & { [K_6 in Exclude<keyof I_1["signerMigratedEventBody"], "migratedAt">]: never; }) | undefined;
        idRegisterEventBody?: ({
            to?: Uint8Array;
            eventType?: IdRegisterEventType;
            from?: Uint8Array;
            recoveryAddress?: Uint8Array;
        } & {
            to?: Uint8Array;
            eventType?: IdRegisterEventType;
            from?: Uint8Array;
            recoveryAddress?: Uint8Array;
        } & { [K_7 in Exclude<keyof I_1["idRegisterEventBody"], keyof IdRegisterEventBody>]: never; }) | undefined;
        storageRentEventBody?: ({
            payer?: Uint8Array;
            units?: number;
            expiry?: number;
        } & {
            payer?: Uint8Array;
            units?: number;
            expiry?: number;
        } & { [K_8 in Exclude<keyof I_1["storageRentEventBody"], keyof StorageRentEventBody>]: never; }) | undefined;
        txIndex?: number;
        version?: number;
    } & { [K_9 in Exclude<keyof I_1, keyof OnChainEvent>]: never; }>(object: I_1): OnChainEvent;
};
interface SignerEventBody {
    key: Uint8Array;
    keyType: number;
    eventType: SignerEventType;
    metadata: Uint8Array;
    metadataType: number;
}
declare const SignerEventBody: {
    encode(message: SignerEventBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SignerEventBody;
    fromJSON(object: any): SignerEventBody;
    toJSON(message: SignerEventBody): unknown;
    create<I extends {
        key?: Uint8Array;
        keyType?: number;
        eventType?: SignerEventType;
        metadata?: Uint8Array;
        metadataType?: number;
    } & {
        key?: Uint8Array;
        keyType?: number;
        eventType?: SignerEventType;
        metadata?: Uint8Array;
        metadataType?: number;
    } & { [K in Exclude<keyof I, keyof SignerEventBody>]: never; }>(base?: I | undefined): SignerEventBody;
    fromPartial<I_1 extends {
        key?: Uint8Array;
        keyType?: number;
        eventType?: SignerEventType;
        metadata?: Uint8Array;
        metadataType?: number;
    } & {
        key?: Uint8Array;
        keyType?: number;
        eventType?: SignerEventType;
        metadata?: Uint8Array;
        metadataType?: number;
    } & { [K_1 in Exclude<keyof I_1, keyof SignerEventBody>]: never; }>(object: I_1): SignerEventBody;
};
interface SignerMigratedEventBody {
    migratedAt: number;
}
declare const SignerMigratedEventBody: {
    encode(message: SignerMigratedEventBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SignerMigratedEventBody;
    fromJSON(object: any): SignerMigratedEventBody;
    toJSON(message: SignerMigratedEventBody): unknown;
    create<I extends {
        migratedAt?: number;
    } & {
        migratedAt?: number;
    } & { [K in Exclude<keyof I, "migratedAt">]: never; }>(base?: I | undefined): SignerMigratedEventBody;
    fromPartial<I_1 extends {
        migratedAt?: number;
    } & {
        migratedAt?: number;
    } & { [K_1 in Exclude<keyof I_1, "migratedAt">]: never; }>(object: I_1): SignerMigratedEventBody;
};
interface IdRegisterEventBody {
    to: Uint8Array;
    eventType: IdRegisterEventType;
    from: Uint8Array;
    recoveryAddress: Uint8Array;
}
declare const IdRegisterEventBody: {
    encode(message: IdRegisterEventBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): IdRegisterEventBody;
    fromJSON(object: any): IdRegisterEventBody;
    toJSON(message: IdRegisterEventBody): unknown;
    create<I extends {
        to?: Uint8Array;
        eventType?: IdRegisterEventType;
        from?: Uint8Array;
        recoveryAddress?: Uint8Array;
    } & {
        to?: Uint8Array;
        eventType?: IdRegisterEventType;
        from?: Uint8Array;
        recoveryAddress?: Uint8Array;
    } & { [K in Exclude<keyof I, keyof IdRegisterEventBody>]: never; }>(base?: I | undefined): IdRegisterEventBody;
    fromPartial<I_1 extends {
        to?: Uint8Array;
        eventType?: IdRegisterEventType;
        from?: Uint8Array;
        recoveryAddress?: Uint8Array;
    } & {
        to?: Uint8Array;
        eventType?: IdRegisterEventType;
        from?: Uint8Array;
        recoveryAddress?: Uint8Array;
    } & { [K_1 in Exclude<keyof I_1, keyof IdRegisterEventBody>]: never; }>(object: I_1): IdRegisterEventBody;
};
interface StorageRentEventBody {
    payer: Uint8Array;
    units: number;
    expiry: number;
}
declare const StorageRentEventBody: {
    encode(message: StorageRentEventBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): StorageRentEventBody;
    fromJSON(object: any): StorageRentEventBody;
    toJSON(message: StorageRentEventBody): unknown;
    create<I extends {
        payer?: Uint8Array;
        units?: number;
        expiry?: number;
    } & {
        payer?: Uint8Array;
        units?: number;
        expiry?: number;
    } & { [K in Exclude<keyof I, keyof StorageRentEventBody>]: never; }>(base?: I | undefined): StorageRentEventBody;
    fromPartial<I_1 extends {
        payer?: Uint8Array;
        units?: number;
        expiry?: number;
    } & {
        payer?: Uint8Array;
        units?: number;
        expiry?: number;
    } & { [K_1 in Exclude<keyof I_1, keyof StorageRentEventBody>]: never; }>(object: I_1): StorageRentEventBody;
};

declare enum UserNameType {
    USERNAME_TYPE_NONE = 0,
    USERNAME_TYPE_FNAME = 1,
    USERNAME_TYPE_ENS_L1 = 2
}
interface UserNameProof {
    timestamp: number;
    name: Uint8Array;
    owner: Uint8Array;
    signature: Uint8Array;
    fid: number;
    type: UserNameType;
}
declare const UserNameProof: {
    encode(message: UserNameProof, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UserNameProof;
    fromJSON(object: any): UserNameProof;
    toJSON(message: UserNameProof): unknown;
    create<I extends {
        timestamp?: number;
        name?: Uint8Array;
        owner?: Uint8Array;
        signature?: Uint8Array;
        fid?: number;
        type?: UserNameType;
    } & {
        timestamp?: number;
        name?: Uint8Array;
        owner?: Uint8Array;
        signature?: Uint8Array;
        fid?: number;
        type?: UserNameType;
    } & { [K in Exclude<keyof I, keyof UserNameProof>]: never; }>(base?: I | undefined): UserNameProof;
    fromPartial<I_1 extends {
        timestamp?: number;
        name?: Uint8Array;
        owner?: Uint8Array;
        signature?: Uint8Array;
        fid?: number;
        type?: UserNameType;
    } & {
        timestamp?: number;
        name?: Uint8Array;
        owner?: Uint8Array;
        signature?: Uint8Array;
        fid?: number;
        type?: UserNameType;
    } & { [K_1 in Exclude<keyof I_1, keyof UserNameProof>]: never; }>(object: I_1): UserNameProof;
};

/** Type of hashing scheme used to produce a digest of MessageData */
declare enum HashScheme {
    NONE = 0,
    /** BLAKE3 - Default scheme for hashing MessageData */
    BLAKE3 = 1
}
/** Type of signature scheme used to sign the Message hash */
declare enum SignatureScheme {
    NONE = 0,
    /** ED25519 - Ed25519 signature (default) */
    ED25519 = 1,
    /** EIP712 - ECDSA signature using EIP-712 scheme */
    EIP712 = 2
}
/** Type of the MessageBody */
declare enum MessageType {
    NONE = 0,
    /** CAST_ADD - Add a new Cast */
    CAST_ADD = 1,
    /** CAST_REMOVE - Remove an existing Cast */
    CAST_REMOVE = 2,
    /** REACTION_ADD - Add a Reaction to a Cast */
    REACTION_ADD = 3,
    /** REACTION_REMOVE - Remove a Reaction from a Cast */
    REACTION_REMOVE = 4,
    /** LINK_ADD - Add a new Link */
    LINK_ADD = 5,
    /** LINK_REMOVE - Remove an existing Link */
    LINK_REMOVE = 6,
    /** VERIFICATION_ADD_ETH_ADDRESS - Add a Verification of an Ethereum Address */
    VERIFICATION_ADD_ETH_ADDRESS = 7,
    /** VERIFICATION_REMOVE - Remove a Verification */
    VERIFICATION_REMOVE = 8,
    /**
     * USER_DATA_ADD - Deprecated
     *  MESSAGE_TYPE_SIGNER_ADD = 9; // Add a new Ed25519 key pair that signs messages for a user
     *  MESSAGE_TYPE_SIGNER_REMOVE = 10; // Remove an Ed25519 key pair that signs messages for a user
     */
    USER_DATA_ADD = 11,
    /** USERNAME_PROOF - Add or replace a username proof */
    USERNAME_PROOF = 12,
    /** FRAME_ACTION - A Farcaster Frame action */
    FRAME_ACTION = 13,
    /** LINK_COMPACT_STATE - Link Compaction State Message */
    LINK_COMPACT_STATE = 14
}
/** Farcaster network the message is intended for */
declare enum FarcasterNetwork {
    NONE = 0,
    /** MAINNET - Public primary network */
    MAINNET = 1,
    /** TESTNET - Public test network */
    TESTNET = 2,
    /** DEVNET - Private test network */
    DEVNET = 3
}
/** Type of UserData */
declare enum UserDataType {
    NONE = 0,
    /** PFP - Profile Picture for the user */
    PFP = 1,
    /** DISPLAY - Display Name for the user */
    DISPLAY = 2,
    /** BIO - Bio for the user */
    BIO = 3,
    /** URL - URL of the user */
    URL = 5,
    /** USERNAME - Preferred Name for the user */
    USERNAME = 6
}
/** Type of Reaction */
declare enum ReactionType {
    NONE = 0,
    /** LIKE - Like the target cast */
    LIKE = 1,
    /** RECAST - Share target cast to the user's audience */
    RECAST = 2
}
/** Type of Protocol to disambiguate verification addresses */
declare enum Protocol {
    ETHEREUM = 0,
    SOLANA = 1
}
/**
 * A Message is a delta operation on the Farcaster network. The message protobuf is an envelope
 * that wraps a MessageData object and contains a hash and signature which can verify its authenticity.
 */
interface Message {
    /** Contents of the message */
    data: MessageData | undefined;
    /** Hash digest of data */
    hash: Uint8Array;
    /** Hash scheme that produced the hash digest */
    hashScheme: HashScheme;
    /** Signature of the hash digest */
    signature: Uint8Array;
    /** Signature scheme that produced the signature */
    signatureScheme: SignatureScheme;
    /** Public key or address of the key pair that produced the signature */
    signer: Uint8Array;
    /** MessageData serialized to bytes if using protobuf serialization other than ts-proto */
    dataBytes?: Uint8Array | undefined;
}
declare const Message: {
    encode(message: Message, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Message;
    fromJSON(object: any): Message;
    toJSON(message: Message): unknown;
    create<I extends {
        data?: {
            type?: MessageType;
            fid?: number;
            timestamp?: number;
            network?: FarcasterNetwork;
            castAddBody?: {
                embedsDeprecated?: string[];
                mentions?: number[];
                parentCastId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                parentUrl?: string | undefined;
                text?: string;
                mentionsPositions?: number[];
                embeds?: {
                    url?: string | undefined;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                }[];
            } | undefined;
            castRemoveBody?: {
                targetHash?: Uint8Array;
            } | undefined;
            reactionBody?: {
                type?: ReactionType;
                targetCastId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                targetUrl?: string | undefined;
            } | undefined;
            verificationAddAddressBody?: {
                address?: Uint8Array;
                claimSignature?: Uint8Array;
                blockHash?: Uint8Array;
                verificationType?: number;
                chainId?: number;
                protocol?: Protocol;
            } | undefined;
            verificationRemoveBody?: {
                address?: Uint8Array;
                protocol?: Protocol;
            } | undefined;
            userDataBody?: {
                type?: UserDataType;
                value?: string;
            } | undefined;
            linkBody?: {
                type?: string;
                displayTimestamp?: number | undefined;
                targetFid?: number | undefined;
            } | undefined;
            usernameProofBody?: {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } | undefined;
            frameActionBody?: {
                url?: Uint8Array;
                buttonIndex?: number;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                inputText?: Uint8Array;
                state?: Uint8Array;
                transactionId?: Uint8Array;
                address?: Uint8Array;
            } | undefined;
            linkCompactStateBody?: {
                type?: string;
                targetFids?: number[];
            } | undefined;
        } | undefined;
        hash?: Uint8Array;
        hashScheme?: HashScheme;
        signature?: Uint8Array;
        signatureScheme?: SignatureScheme;
        signer?: Uint8Array;
        dataBytes?: Uint8Array | undefined;
    } & {
        data?: ({
            type?: MessageType;
            fid?: number;
            timestamp?: number;
            network?: FarcasterNetwork;
            castAddBody?: {
                embedsDeprecated?: string[];
                mentions?: number[];
                parentCastId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                parentUrl?: string | undefined;
                text?: string;
                mentionsPositions?: number[];
                embeds?: {
                    url?: string | undefined;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                }[];
            } | undefined;
            castRemoveBody?: {
                targetHash?: Uint8Array;
            } | undefined;
            reactionBody?: {
                type?: ReactionType;
                targetCastId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                targetUrl?: string | undefined;
            } | undefined;
            verificationAddAddressBody?: {
                address?: Uint8Array;
                claimSignature?: Uint8Array;
                blockHash?: Uint8Array;
                verificationType?: number;
                chainId?: number;
                protocol?: Protocol;
            } | undefined;
            verificationRemoveBody?: {
                address?: Uint8Array;
                protocol?: Protocol;
            } | undefined;
            userDataBody?: {
                type?: UserDataType;
                value?: string;
            } | undefined;
            linkBody?: {
                type?: string;
                displayTimestamp?: number | undefined;
                targetFid?: number | undefined;
            } | undefined;
            usernameProofBody?: {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } | undefined;
            frameActionBody?: {
                url?: Uint8Array;
                buttonIndex?: number;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                inputText?: Uint8Array;
                state?: Uint8Array;
                transactionId?: Uint8Array;
                address?: Uint8Array;
            } | undefined;
            linkCompactStateBody?: {
                type?: string;
                targetFids?: number[];
            } | undefined;
        } & {
            type?: MessageType;
            fid?: number;
            timestamp?: number;
            network?: FarcasterNetwork;
            castAddBody?: ({
                embedsDeprecated?: string[];
                mentions?: number[];
                parentCastId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                parentUrl?: string | undefined;
                text?: string;
                mentionsPositions?: number[];
                embeds?: {
                    url?: string | undefined;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                }[];
            } & {
                embedsDeprecated?: string[] & string[] & { [K in Exclude<keyof I["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                mentions?: number[] & number[] & { [K_1 in Exclude<keyof I["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                parentCastId?: ({
                    fid?: number;
                    hash?: Uint8Array;
                } & {
                    fid?: number;
                    hash?: Uint8Array;
                } & { [K_2 in Exclude<keyof I["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                parentUrl?: string | undefined;
                text?: string;
                mentionsPositions?: number[] & number[] & { [K_3 in Exclude<keyof I["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                embeds?: {
                    url?: string | undefined;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                }[] & ({
                    url?: string | undefined;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                } & {
                    url?: string | undefined;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_4 in Exclude<keyof I["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                } & { [K_5 in Exclude<keyof I["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_6 in Exclude<keyof I["data"]["castAddBody"]["embeds"], keyof {
                    url?: string | undefined;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                }[]>]: never; };
            } & { [K_7 in Exclude<keyof I["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
            castRemoveBody?: ({
                targetHash?: Uint8Array;
            } & {
                targetHash?: Uint8Array;
            } & { [K_8 in Exclude<keyof I["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
            reactionBody?: ({
                type?: ReactionType;
                targetCastId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                targetUrl?: string | undefined;
            } & {
                type?: ReactionType;
                targetCastId?: ({
                    fid?: number;
                    hash?: Uint8Array;
                } & {
                    fid?: number;
                    hash?: Uint8Array;
                } & { [K_9 in Exclude<keyof I["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                targetUrl?: string | undefined;
            } & { [K_10 in Exclude<keyof I["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
            verificationAddAddressBody?: ({
                address?: Uint8Array;
                claimSignature?: Uint8Array;
                blockHash?: Uint8Array;
                verificationType?: number;
                chainId?: number;
                protocol?: Protocol;
            } & {
                address?: Uint8Array;
                claimSignature?: Uint8Array;
                blockHash?: Uint8Array;
                verificationType?: number;
                chainId?: number;
                protocol?: Protocol;
            } & { [K_11 in Exclude<keyof I["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
            verificationRemoveBody?: ({
                address?: Uint8Array;
                protocol?: Protocol;
            } & {
                address?: Uint8Array;
                protocol?: Protocol;
            } & { [K_12 in Exclude<keyof I["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
            userDataBody?: ({
                type?: UserDataType;
                value?: string;
            } & {
                type?: UserDataType;
                value?: string;
            } & { [K_13 in Exclude<keyof I["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
            linkBody?: ({
                type?: string;
                displayTimestamp?: number | undefined;
                targetFid?: number | undefined;
            } & {
                type?: string;
                displayTimestamp?: number | undefined;
                targetFid?: number | undefined;
            } & { [K_14 in Exclude<keyof I["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
            usernameProofBody?: ({
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } & {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } & { [K_15 in Exclude<keyof I["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
            frameActionBody?: ({
                url?: Uint8Array;
                buttonIndex?: number;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                inputText?: Uint8Array;
                state?: Uint8Array;
                transactionId?: Uint8Array;
                address?: Uint8Array;
            } & {
                url?: Uint8Array;
                buttonIndex?: number;
                castId?: ({
                    fid?: number;
                    hash?: Uint8Array;
                } & {
                    fid?: number;
                    hash?: Uint8Array;
                } & { [K_16 in Exclude<keyof I["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                inputText?: Uint8Array;
                state?: Uint8Array;
                transactionId?: Uint8Array;
                address?: Uint8Array;
            } & { [K_17 in Exclude<keyof I["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
            linkCompactStateBody?: ({
                type?: string;
                targetFids?: number[];
            } & {
                type?: string;
                targetFids?: number[] & number[] & { [K_18 in Exclude<keyof I["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
            } & { [K_19 in Exclude<keyof I["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
        } & { [K_20 in Exclude<keyof I["data"], keyof MessageData>]: never; }) | undefined;
        hash?: Uint8Array;
        hashScheme?: HashScheme;
        signature?: Uint8Array;
        signatureScheme?: SignatureScheme;
        signer?: Uint8Array;
        dataBytes?: Uint8Array | undefined;
    } & { [K_21 in Exclude<keyof I, keyof Message>]: never; }>(base?: I | undefined): Message;
    fromPartial<I_1 extends {
        data?: {
            type?: MessageType;
            fid?: number;
            timestamp?: number;
            network?: FarcasterNetwork;
            castAddBody?: {
                embedsDeprecated?: string[];
                mentions?: number[];
                parentCastId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                parentUrl?: string | undefined;
                text?: string;
                mentionsPositions?: number[];
                embeds?: {
                    url?: string | undefined;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                }[];
            } | undefined;
            castRemoveBody?: {
                targetHash?: Uint8Array;
            } | undefined;
            reactionBody?: {
                type?: ReactionType;
                targetCastId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                targetUrl?: string | undefined;
            } | undefined;
            verificationAddAddressBody?: {
                address?: Uint8Array;
                claimSignature?: Uint8Array;
                blockHash?: Uint8Array;
                verificationType?: number;
                chainId?: number;
                protocol?: Protocol;
            } | undefined;
            verificationRemoveBody?: {
                address?: Uint8Array;
                protocol?: Protocol;
            } | undefined;
            userDataBody?: {
                type?: UserDataType;
                value?: string;
            } | undefined;
            linkBody?: {
                type?: string;
                displayTimestamp?: number | undefined;
                targetFid?: number | undefined;
            } | undefined;
            usernameProofBody?: {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } | undefined;
            frameActionBody?: {
                url?: Uint8Array;
                buttonIndex?: number;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                inputText?: Uint8Array;
                state?: Uint8Array;
                transactionId?: Uint8Array;
                address?: Uint8Array;
            } | undefined;
            linkCompactStateBody?: {
                type?: string;
                targetFids?: number[];
            } | undefined;
        } | undefined;
        hash?: Uint8Array;
        hashScheme?: HashScheme;
        signature?: Uint8Array;
        signatureScheme?: SignatureScheme;
        signer?: Uint8Array;
        dataBytes?: Uint8Array | undefined;
    } & {
        data?: ({
            type?: MessageType;
            fid?: number;
            timestamp?: number;
            network?: FarcasterNetwork;
            castAddBody?: {
                embedsDeprecated?: string[];
                mentions?: number[];
                parentCastId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                parentUrl?: string | undefined;
                text?: string;
                mentionsPositions?: number[];
                embeds?: {
                    url?: string | undefined;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                }[];
            } | undefined;
            castRemoveBody?: {
                targetHash?: Uint8Array;
            } | undefined;
            reactionBody?: {
                type?: ReactionType;
                targetCastId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                targetUrl?: string | undefined;
            } | undefined;
            verificationAddAddressBody?: {
                address?: Uint8Array;
                claimSignature?: Uint8Array;
                blockHash?: Uint8Array;
                verificationType?: number;
                chainId?: number;
                protocol?: Protocol;
            } | undefined;
            verificationRemoveBody?: {
                address?: Uint8Array;
                protocol?: Protocol;
            } | undefined;
            userDataBody?: {
                type?: UserDataType;
                value?: string;
            } | undefined;
            linkBody?: {
                type?: string;
                displayTimestamp?: number | undefined;
                targetFid?: number | undefined;
            } | undefined;
            usernameProofBody?: {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } | undefined;
            frameActionBody?: {
                url?: Uint8Array;
                buttonIndex?: number;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                inputText?: Uint8Array;
                state?: Uint8Array;
                transactionId?: Uint8Array;
                address?: Uint8Array;
            } | undefined;
            linkCompactStateBody?: {
                type?: string;
                targetFids?: number[];
            } | undefined;
        } & {
            type?: MessageType;
            fid?: number;
            timestamp?: number;
            network?: FarcasterNetwork;
            castAddBody?: ({
                embedsDeprecated?: string[];
                mentions?: number[];
                parentCastId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                parentUrl?: string | undefined;
                text?: string;
                mentionsPositions?: number[];
                embeds?: {
                    url?: string | undefined;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                }[];
            } & {
                embedsDeprecated?: string[] & string[] & { [K_22 in Exclude<keyof I_1["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                mentions?: number[] & number[] & { [K_23 in Exclude<keyof I_1["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                parentCastId?: ({
                    fid?: number;
                    hash?: Uint8Array;
                } & {
                    fid?: number;
                    hash?: Uint8Array;
                } & { [K_24 in Exclude<keyof I_1["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                parentUrl?: string | undefined;
                text?: string;
                mentionsPositions?: number[] & number[] & { [K_25 in Exclude<keyof I_1["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                embeds?: {
                    url?: string | undefined;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                }[] & ({
                    url?: string | undefined;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                } & {
                    url?: string | undefined;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_26 in Exclude<keyof I_1["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                } & { [K_27 in Exclude<keyof I_1["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_28 in Exclude<keyof I_1["data"]["castAddBody"]["embeds"], keyof {
                    url?: string | undefined;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                }[]>]: never; };
            } & { [K_29 in Exclude<keyof I_1["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
            castRemoveBody?: ({
                targetHash?: Uint8Array;
            } & {
                targetHash?: Uint8Array;
            } & { [K_30 in Exclude<keyof I_1["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
            reactionBody?: ({
                type?: ReactionType;
                targetCastId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                targetUrl?: string | undefined;
            } & {
                type?: ReactionType;
                targetCastId?: ({
                    fid?: number;
                    hash?: Uint8Array;
                } & {
                    fid?: number;
                    hash?: Uint8Array;
                } & { [K_31 in Exclude<keyof I_1["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                targetUrl?: string | undefined;
            } & { [K_32 in Exclude<keyof I_1["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
            verificationAddAddressBody?: ({
                address?: Uint8Array;
                claimSignature?: Uint8Array;
                blockHash?: Uint8Array;
                verificationType?: number;
                chainId?: number;
                protocol?: Protocol;
            } & {
                address?: Uint8Array;
                claimSignature?: Uint8Array;
                blockHash?: Uint8Array;
                verificationType?: number;
                chainId?: number;
                protocol?: Protocol;
            } & { [K_33 in Exclude<keyof I_1["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
            verificationRemoveBody?: ({
                address?: Uint8Array;
                protocol?: Protocol;
            } & {
                address?: Uint8Array;
                protocol?: Protocol;
            } & { [K_34 in Exclude<keyof I_1["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
            userDataBody?: ({
                type?: UserDataType;
                value?: string;
            } & {
                type?: UserDataType;
                value?: string;
            } & { [K_35 in Exclude<keyof I_1["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
            linkBody?: ({
                type?: string;
                displayTimestamp?: number | undefined;
                targetFid?: number | undefined;
            } & {
                type?: string;
                displayTimestamp?: number | undefined;
                targetFid?: number | undefined;
            } & { [K_36 in Exclude<keyof I_1["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
            usernameProofBody?: ({
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } & {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } & { [K_37 in Exclude<keyof I_1["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
            frameActionBody?: ({
                url?: Uint8Array;
                buttonIndex?: number;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
                inputText?: Uint8Array;
                state?: Uint8Array;
                transactionId?: Uint8Array;
                address?: Uint8Array;
            } & {
                url?: Uint8Array;
                buttonIndex?: number;
                castId?: ({
                    fid?: number;
                    hash?: Uint8Array;
                } & {
                    fid?: number;
                    hash?: Uint8Array;
                } & { [K_38 in Exclude<keyof I_1["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                inputText?: Uint8Array;
                state?: Uint8Array;
                transactionId?: Uint8Array;
                address?: Uint8Array;
            } & { [K_39 in Exclude<keyof I_1["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
            linkCompactStateBody?: ({
                type?: string;
                targetFids?: number[];
            } & {
                type?: string;
                targetFids?: number[] & number[] & { [K_40 in Exclude<keyof I_1["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
            } & { [K_41 in Exclude<keyof I_1["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
        } & { [K_42 in Exclude<keyof I_1["data"], keyof MessageData>]: never; }) | undefined;
        hash?: Uint8Array;
        hashScheme?: HashScheme;
        signature?: Uint8Array;
        signatureScheme?: SignatureScheme;
        signer?: Uint8Array;
        dataBytes?: Uint8Array | undefined;
    } & { [K_43 in Exclude<keyof I_1, keyof Message>]: never; }>(object: I_1): Message;
};
/**
 * A MessageData object contains properties common to all messages and wraps a body object which
 * contains properties specific to the MessageType.
 */
interface MessageData {
    /** Type of message contained in the body */
    type: MessageType;
    /** Farcaster ID of the user producing the message */
    fid: number;
    /** Farcaster epoch timestamp in seconds */
    timestamp: number;
    /** Farcaster network the message is intended for */
    network: FarcasterNetwork;
    castAddBody?: CastAddBody | undefined;
    castRemoveBody?: CastRemoveBody | undefined;
    reactionBody?: ReactionBody | undefined;
    verificationAddAddressBody?: VerificationAddAddressBody | undefined;
    verificationRemoveBody?: VerificationRemoveBody | undefined;
    /** SignerAddBody signer_add_body = 11; // Deprecated */
    userDataBody?: UserDataBody | undefined;
    /** SignerRemoveBody signer_remove_body = 13; // Deprecated */
    linkBody?: LinkBody | undefined;
    usernameProofBody?: UserNameProof | undefined;
    frameActionBody?: FrameActionBody | undefined;
    /** Compaction messages */
    linkCompactStateBody?: LinkCompactStateBody | undefined;
}
declare const MessageData: {
    encode(message: MessageData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MessageData;
    fromJSON(object: any): MessageData;
    toJSON(message: MessageData): unknown;
    create<I extends {
        type?: MessageType;
        fid?: number;
        timestamp?: number;
        network?: FarcasterNetwork;
        castAddBody?: {
            embedsDeprecated?: string[];
            mentions?: number[];
            parentCastId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
            parentUrl?: string | undefined;
            text?: string;
            mentionsPositions?: number[];
            embeds?: {
                url?: string | undefined;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
            }[];
        } | undefined;
        castRemoveBody?: {
            targetHash?: Uint8Array;
        } | undefined;
        reactionBody?: {
            type?: ReactionType;
            targetCastId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
            targetUrl?: string | undefined;
        } | undefined;
        verificationAddAddressBody?: {
            address?: Uint8Array;
            claimSignature?: Uint8Array;
            blockHash?: Uint8Array;
            verificationType?: number;
            chainId?: number;
            protocol?: Protocol;
        } | undefined;
        verificationRemoveBody?: {
            address?: Uint8Array;
            protocol?: Protocol;
        } | undefined;
        userDataBody?: {
            type?: UserDataType;
            value?: string;
        } | undefined;
        linkBody?: {
            type?: string;
            displayTimestamp?: number | undefined;
            targetFid?: number | undefined;
        } | undefined;
        usernameProofBody?: {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } | undefined;
        frameActionBody?: {
            url?: Uint8Array;
            buttonIndex?: number;
            castId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
            inputText?: Uint8Array;
            state?: Uint8Array;
            transactionId?: Uint8Array;
            address?: Uint8Array;
        } | undefined;
        linkCompactStateBody?: {
            type?: string;
            targetFids?: number[];
        } | undefined;
    } & {
        type?: MessageType;
        fid?: number;
        timestamp?: number;
        network?: FarcasterNetwork;
        castAddBody?: ({
            embedsDeprecated?: string[];
            mentions?: number[];
            parentCastId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
            parentUrl?: string | undefined;
            text?: string;
            mentionsPositions?: number[];
            embeds?: {
                url?: string | undefined;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
            }[];
        } & {
            embedsDeprecated?: string[] & string[] & { [K in Exclude<keyof I["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
            mentions?: number[] & number[] & { [K_1 in Exclude<keyof I["castAddBody"]["mentions"], keyof number[]>]: never; };
            parentCastId?: ({
                fid?: number;
                hash?: Uint8Array;
            } & {
                fid?: number;
                hash?: Uint8Array;
            } & { [K_2 in Exclude<keyof I["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
            parentUrl?: string | undefined;
            text?: string;
            mentionsPositions?: number[] & number[] & { [K_3 in Exclude<keyof I["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
            embeds?: {
                url?: string | undefined;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
            }[] & ({
                url?: string | undefined;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
            } & {
                url?: string | undefined;
                castId?: ({
                    fid?: number;
                    hash?: Uint8Array;
                } & {
                    fid?: number;
                    hash?: Uint8Array;
                } & { [K_4 in Exclude<keyof I["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
            } & { [K_5 in Exclude<keyof I["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_6 in Exclude<keyof I["castAddBody"]["embeds"], keyof {
                url?: string | undefined;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
            }[]>]: never; };
        } & { [K_7 in Exclude<keyof I["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
        castRemoveBody?: ({
            targetHash?: Uint8Array;
        } & {
            targetHash?: Uint8Array;
        } & { [K_8 in Exclude<keyof I["castRemoveBody"], "targetHash">]: never; }) | undefined;
        reactionBody?: ({
            type?: ReactionType;
            targetCastId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
            targetUrl?: string | undefined;
        } & {
            type?: ReactionType;
            targetCastId?: ({
                fid?: number;
                hash?: Uint8Array;
            } & {
                fid?: number;
                hash?: Uint8Array;
            } & { [K_9 in Exclude<keyof I["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
            targetUrl?: string | undefined;
        } & { [K_10 in Exclude<keyof I["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
        verificationAddAddressBody?: ({
            address?: Uint8Array;
            claimSignature?: Uint8Array;
            blockHash?: Uint8Array;
            verificationType?: number;
            chainId?: number;
            protocol?: Protocol;
        } & {
            address?: Uint8Array;
            claimSignature?: Uint8Array;
            blockHash?: Uint8Array;
            verificationType?: number;
            chainId?: number;
            protocol?: Protocol;
        } & { [K_11 in Exclude<keyof I["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
        verificationRemoveBody?: ({
            address?: Uint8Array;
            protocol?: Protocol;
        } & {
            address?: Uint8Array;
            protocol?: Protocol;
        } & { [K_12 in Exclude<keyof I["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
        userDataBody?: ({
            type?: UserDataType;
            value?: string;
        } & {
            type?: UserDataType;
            value?: string;
        } & { [K_13 in Exclude<keyof I["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
        linkBody?: ({
            type?: string;
            displayTimestamp?: number | undefined;
            targetFid?: number | undefined;
        } & {
            type?: string;
            displayTimestamp?: number | undefined;
            targetFid?: number | undefined;
        } & { [K_14 in Exclude<keyof I["linkBody"], keyof LinkBody>]: never; }) | undefined;
        usernameProofBody?: ({
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & { [K_15 in Exclude<keyof I["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
        frameActionBody?: ({
            url?: Uint8Array;
            buttonIndex?: number;
            castId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
            inputText?: Uint8Array;
            state?: Uint8Array;
            transactionId?: Uint8Array;
            address?: Uint8Array;
        } & {
            url?: Uint8Array;
            buttonIndex?: number;
            castId?: ({
                fid?: number;
                hash?: Uint8Array;
            } & {
                fid?: number;
                hash?: Uint8Array;
            } & { [K_16 in Exclude<keyof I["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
            inputText?: Uint8Array;
            state?: Uint8Array;
            transactionId?: Uint8Array;
            address?: Uint8Array;
        } & { [K_17 in Exclude<keyof I["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
        linkCompactStateBody?: ({
            type?: string;
            targetFids?: number[];
        } & {
            type?: string;
            targetFids?: number[] & number[] & { [K_18 in Exclude<keyof I["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
        } & { [K_19 in Exclude<keyof I["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
    } & { [K_20 in Exclude<keyof I, keyof MessageData>]: never; }>(base?: I | undefined): MessageData;
    fromPartial<I_1 extends {
        type?: MessageType;
        fid?: number;
        timestamp?: number;
        network?: FarcasterNetwork;
        castAddBody?: {
            embedsDeprecated?: string[];
            mentions?: number[];
            parentCastId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
            parentUrl?: string | undefined;
            text?: string;
            mentionsPositions?: number[];
            embeds?: {
                url?: string | undefined;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
            }[];
        } | undefined;
        castRemoveBody?: {
            targetHash?: Uint8Array;
        } | undefined;
        reactionBody?: {
            type?: ReactionType;
            targetCastId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
            targetUrl?: string | undefined;
        } | undefined;
        verificationAddAddressBody?: {
            address?: Uint8Array;
            claimSignature?: Uint8Array;
            blockHash?: Uint8Array;
            verificationType?: number;
            chainId?: number;
            protocol?: Protocol;
        } | undefined;
        verificationRemoveBody?: {
            address?: Uint8Array;
            protocol?: Protocol;
        } | undefined;
        userDataBody?: {
            type?: UserDataType;
            value?: string;
        } | undefined;
        linkBody?: {
            type?: string;
            displayTimestamp?: number | undefined;
            targetFid?: number | undefined;
        } | undefined;
        usernameProofBody?: {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } | undefined;
        frameActionBody?: {
            url?: Uint8Array;
            buttonIndex?: number;
            castId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
            inputText?: Uint8Array;
            state?: Uint8Array;
            transactionId?: Uint8Array;
            address?: Uint8Array;
        } | undefined;
        linkCompactStateBody?: {
            type?: string;
            targetFids?: number[];
        } | undefined;
    } & {
        type?: MessageType;
        fid?: number;
        timestamp?: number;
        network?: FarcasterNetwork;
        castAddBody?: ({
            embedsDeprecated?: string[];
            mentions?: number[];
            parentCastId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
            parentUrl?: string | undefined;
            text?: string;
            mentionsPositions?: number[];
            embeds?: {
                url?: string | undefined;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
            }[];
        } & {
            embedsDeprecated?: string[] & string[] & { [K_21 in Exclude<keyof I_1["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
            mentions?: number[] & number[] & { [K_22 in Exclude<keyof I_1["castAddBody"]["mentions"], keyof number[]>]: never; };
            parentCastId?: ({
                fid?: number;
                hash?: Uint8Array;
            } & {
                fid?: number;
                hash?: Uint8Array;
            } & { [K_23 in Exclude<keyof I_1["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
            parentUrl?: string | undefined;
            text?: string;
            mentionsPositions?: number[] & number[] & { [K_24 in Exclude<keyof I_1["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
            embeds?: {
                url?: string | undefined;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
            }[] & ({
                url?: string | undefined;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
            } & {
                url?: string | undefined;
                castId?: ({
                    fid?: number;
                    hash?: Uint8Array;
                } & {
                    fid?: number;
                    hash?: Uint8Array;
                } & { [K_25 in Exclude<keyof I_1["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
            } & { [K_26 in Exclude<keyof I_1["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_27 in Exclude<keyof I_1["castAddBody"]["embeds"], keyof {
                url?: string | undefined;
                castId?: {
                    fid?: number;
                    hash?: Uint8Array;
                } | undefined;
            }[]>]: never; };
        } & { [K_28 in Exclude<keyof I_1["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
        castRemoveBody?: ({
            targetHash?: Uint8Array;
        } & {
            targetHash?: Uint8Array;
        } & { [K_29 in Exclude<keyof I_1["castRemoveBody"], "targetHash">]: never; }) | undefined;
        reactionBody?: ({
            type?: ReactionType;
            targetCastId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
            targetUrl?: string | undefined;
        } & {
            type?: ReactionType;
            targetCastId?: ({
                fid?: number;
                hash?: Uint8Array;
            } & {
                fid?: number;
                hash?: Uint8Array;
            } & { [K_30 in Exclude<keyof I_1["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
            targetUrl?: string | undefined;
        } & { [K_31 in Exclude<keyof I_1["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
        verificationAddAddressBody?: ({
            address?: Uint8Array;
            claimSignature?: Uint8Array;
            blockHash?: Uint8Array;
            verificationType?: number;
            chainId?: number;
            protocol?: Protocol;
        } & {
            address?: Uint8Array;
            claimSignature?: Uint8Array;
            blockHash?: Uint8Array;
            verificationType?: number;
            chainId?: number;
            protocol?: Protocol;
        } & { [K_32 in Exclude<keyof I_1["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
        verificationRemoveBody?: ({
            address?: Uint8Array;
            protocol?: Protocol;
        } & {
            address?: Uint8Array;
            protocol?: Protocol;
        } & { [K_33 in Exclude<keyof I_1["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
        userDataBody?: ({
            type?: UserDataType;
            value?: string;
        } & {
            type?: UserDataType;
            value?: string;
        } & { [K_34 in Exclude<keyof I_1["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
        linkBody?: ({
            type?: string;
            displayTimestamp?: number | undefined;
            targetFid?: number | undefined;
        } & {
            type?: string;
            displayTimestamp?: number | undefined;
            targetFid?: number | undefined;
        } & { [K_35 in Exclude<keyof I_1["linkBody"], keyof LinkBody>]: never; }) | undefined;
        usernameProofBody?: ({
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & { [K_36 in Exclude<keyof I_1["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
        frameActionBody?: ({
            url?: Uint8Array;
            buttonIndex?: number;
            castId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
            inputText?: Uint8Array;
            state?: Uint8Array;
            transactionId?: Uint8Array;
            address?: Uint8Array;
        } & {
            url?: Uint8Array;
            buttonIndex?: number;
            castId?: ({
                fid?: number;
                hash?: Uint8Array;
            } & {
                fid?: number;
                hash?: Uint8Array;
            } & { [K_37 in Exclude<keyof I_1["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
            inputText?: Uint8Array;
            state?: Uint8Array;
            transactionId?: Uint8Array;
            address?: Uint8Array;
        } & { [K_38 in Exclude<keyof I_1["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
        linkCompactStateBody?: ({
            type?: string;
            targetFids?: number[];
        } & {
            type?: string;
            targetFids?: number[] & number[] & { [K_39 in Exclude<keyof I_1["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
        } & { [K_40 in Exclude<keyof I_1["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
    } & { [K_41 in Exclude<keyof I_1, keyof MessageData>]: never; }>(object: I_1): MessageData;
};
/** Adds metadata about a user */
interface UserDataBody {
    /** Type of metadata */
    type: UserDataType;
    /** Value of the metadata */
    value: string;
}
declare const UserDataBody: {
    encode(message: UserDataBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UserDataBody;
    fromJSON(object: any): UserDataBody;
    toJSON(message: UserDataBody): unknown;
    create<I extends {
        type?: UserDataType;
        value?: string;
    } & {
        type?: UserDataType;
        value?: string;
    } & { [K in Exclude<keyof I, keyof UserDataBody>]: never; }>(base?: I | undefined): UserDataBody;
    fromPartial<I_1 extends {
        type?: UserDataType;
        value?: string;
    } & {
        type?: UserDataType;
        value?: string;
    } & { [K_1 in Exclude<keyof I_1, keyof UserDataBody>]: never; }>(object: I_1): UserDataBody;
};
interface Embed {
    url?: string | undefined;
    castId?: CastId | undefined;
}
declare const Embed: {
    encode(message: Embed, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Embed;
    fromJSON(object: any): Embed;
    toJSON(message: Embed): unknown;
    create<I extends {
        url?: string | undefined;
        castId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
    } & {
        url?: string | undefined;
        castId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K in Exclude<keyof I["castId"], keyof CastId>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, keyof Embed>]: never; }>(base?: I | undefined): Embed;
    fromPartial<I_1 extends {
        url?: string | undefined;
        castId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
    } & {
        url?: string | undefined;
        castId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K_2 in Exclude<keyof I_1["castId"], keyof CastId>]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I_1, keyof Embed>]: never; }>(object: I_1): Embed;
};
/** Adds a new Cast */
interface CastAddBody {
    /** URLs to be embedded in the cast */
    embedsDeprecated: string[];
    /** Fids mentioned in the cast */
    mentions: number[];
    /** Parent cast of the cast */
    parentCastId?: CastId | undefined;
    /** Parent URL */
    parentUrl?: string | undefined;
    /** Text of the cast */
    text: string;
    /** Positions of the mentions in the text */
    mentionsPositions: number[];
    /** URLs or cast ids to be embedded in the cast */
    embeds: Embed[];
}
declare const CastAddBody: {
    encode(message: CastAddBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CastAddBody;
    fromJSON(object: any): CastAddBody;
    toJSON(message: CastAddBody): unknown;
    create<I extends {
        embedsDeprecated?: string[];
        mentions?: number[];
        parentCastId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
        parentUrl?: string | undefined;
        text?: string;
        mentionsPositions?: number[];
        embeds?: {
            url?: string | undefined;
            castId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
        }[];
    } & {
        embedsDeprecated?: string[] & string[] & { [K in Exclude<keyof I["embedsDeprecated"], keyof string[]>]: never; };
        mentions?: number[] & number[] & { [K_1 in Exclude<keyof I["mentions"], keyof number[]>]: never; };
        parentCastId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K_2 in Exclude<keyof I["parentCastId"], keyof CastId>]: never; }) | undefined;
        parentUrl?: string | undefined;
        text?: string;
        mentionsPositions?: number[] & number[] & { [K_3 in Exclude<keyof I["mentionsPositions"], keyof number[]>]: never; };
        embeds?: {
            url?: string | undefined;
            castId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
        }[] & ({
            url?: string | undefined;
            castId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
        } & {
            url?: string | undefined;
            castId?: ({
                fid?: number;
                hash?: Uint8Array;
            } & {
                fid?: number;
                hash?: Uint8Array;
            } & { [K_4 in Exclude<keyof I["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
        } & { [K_5 in Exclude<keyof I["embeds"][number], keyof Embed>]: never; })[] & { [K_6 in Exclude<keyof I["embeds"], keyof {
            url?: string | undefined;
            castId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
        }[]>]: never; };
    } & { [K_7 in Exclude<keyof I, keyof CastAddBody>]: never; }>(base?: I | undefined): CastAddBody;
    fromPartial<I_1 extends {
        embedsDeprecated?: string[];
        mentions?: number[];
        parentCastId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
        parentUrl?: string | undefined;
        text?: string;
        mentionsPositions?: number[];
        embeds?: {
            url?: string | undefined;
            castId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
        }[];
    } & {
        embedsDeprecated?: string[] & string[] & { [K_8 in Exclude<keyof I_1["embedsDeprecated"], keyof string[]>]: never; };
        mentions?: number[] & number[] & { [K_9 in Exclude<keyof I_1["mentions"], keyof number[]>]: never; };
        parentCastId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K_10 in Exclude<keyof I_1["parentCastId"], keyof CastId>]: never; }) | undefined;
        parentUrl?: string | undefined;
        text?: string;
        mentionsPositions?: number[] & number[] & { [K_11 in Exclude<keyof I_1["mentionsPositions"], keyof number[]>]: never; };
        embeds?: {
            url?: string | undefined;
            castId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
        }[] & ({
            url?: string | undefined;
            castId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
        } & {
            url?: string | undefined;
            castId?: ({
                fid?: number;
                hash?: Uint8Array;
            } & {
                fid?: number;
                hash?: Uint8Array;
            } & { [K_12 in Exclude<keyof I_1["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
        } & { [K_13 in Exclude<keyof I_1["embeds"][number], keyof Embed>]: never; })[] & { [K_14 in Exclude<keyof I_1["embeds"], keyof {
            url?: string | undefined;
            castId?: {
                fid?: number;
                hash?: Uint8Array;
            } | undefined;
        }[]>]: never; };
    } & { [K_15 in Exclude<keyof I_1, keyof CastAddBody>]: never; }>(object: I_1): CastAddBody;
};
/** Removes an existing Cast */
interface CastRemoveBody {
    /** Hash of the cast to remove */
    targetHash: Uint8Array;
}
declare const CastRemoveBody: {
    encode(message: CastRemoveBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CastRemoveBody;
    fromJSON(object: any): CastRemoveBody;
    toJSON(message: CastRemoveBody): unknown;
    create<I extends {
        targetHash?: Uint8Array;
    } & {
        targetHash?: Uint8Array;
    } & { [K in Exclude<keyof I, "targetHash">]: never; }>(base?: I | undefined): CastRemoveBody;
    fromPartial<I_1 extends {
        targetHash?: Uint8Array;
    } & {
        targetHash?: Uint8Array;
    } & { [K_1 in Exclude<keyof I_1, "targetHash">]: never; }>(object: I_1): CastRemoveBody;
};
/** Identifier used to look up a Cast */
interface CastId {
    /** Fid of the user who created the cast */
    fid: number;
    /** Hash of the cast */
    hash: Uint8Array;
}
declare const CastId: {
    encode(message: CastId, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CastId;
    fromJSON(object: any): CastId;
    toJSON(message: CastId): unknown;
    create<I extends {
        fid?: number;
        hash?: Uint8Array;
    } & {
        fid?: number;
        hash?: Uint8Array;
    } & { [K in Exclude<keyof I, keyof CastId>]: never; }>(base?: I | undefined): CastId;
    fromPartial<I_1 extends {
        fid?: number;
        hash?: Uint8Array;
    } & {
        fid?: number;
        hash?: Uint8Array;
    } & { [K_1 in Exclude<keyof I_1, keyof CastId>]: never; }>(object: I_1): CastId;
};
/** Adds or removes a Reaction from a Cast */
interface ReactionBody {
    /** Type of reaction */
    type: ReactionType;
    /** CastId of the Cast to react to */
    targetCastId?: CastId | undefined;
    /** URL to react to */
    targetUrl?: string | undefined;
}
declare const ReactionBody: {
    encode(message: ReactionBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ReactionBody;
    fromJSON(object: any): ReactionBody;
    toJSON(message: ReactionBody): unknown;
    create<I extends {
        type?: ReactionType;
        targetCastId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
        targetUrl?: string | undefined;
    } & {
        type?: ReactionType;
        targetCastId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K in Exclude<keyof I["targetCastId"], keyof CastId>]: never; }) | undefined;
        targetUrl?: string | undefined;
    } & { [K_1 in Exclude<keyof I, keyof ReactionBody>]: never; }>(base?: I | undefined): ReactionBody;
    fromPartial<I_1 extends {
        type?: ReactionType;
        targetCastId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
        targetUrl?: string | undefined;
    } & {
        type?: ReactionType;
        targetCastId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K_2 in Exclude<keyof I_1["targetCastId"], keyof CastId>]: never; }) | undefined;
        targetUrl?: string | undefined;
    } & { [K_3 in Exclude<keyof I_1, keyof ReactionBody>]: never; }>(object: I_1): ReactionBody;
};
/** Adds a Verification of ownership of an Address based on Protocol */
interface VerificationAddAddressBody {
    /** Address being verified for a given Protocol */
    address: Uint8Array;
    /** Signature produced by the user's address for a given Protocol */
    claimSignature: Uint8Array;
    /** Hash of the latest Ethereum block when the signature was produced */
    blockHash: Uint8Array;
    /** Type of verification. 0 = EOA, 1 = contract */
    verificationType: number;
    /** 0 for EOA verifications, 1 or 10 for contract verifications */
    chainId: number;
    /** Protocol of the Verification */
    protocol: Protocol;
}
declare const VerificationAddAddressBody: {
    encode(message: VerificationAddAddressBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): VerificationAddAddressBody;
    fromJSON(object: any): VerificationAddAddressBody;
    toJSON(message: VerificationAddAddressBody): unknown;
    create<I extends {
        address?: Uint8Array;
        claimSignature?: Uint8Array;
        blockHash?: Uint8Array;
        verificationType?: number;
        chainId?: number;
        protocol?: Protocol;
    } & {
        address?: Uint8Array;
        claimSignature?: Uint8Array;
        blockHash?: Uint8Array;
        verificationType?: number;
        chainId?: number;
        protocol?: Protocol;
    } & { [K in Exclude<keyof I, keyof VerificationAddAddressBody>]: never; }>(base?: I | undefined): VerificationAddAddressBody;
    fromPartial<I_1 extends {
        address?: Uint8Array;
        claimSignature?: Uint8Array;
        blockHash?: Uint8Array;
        verificationType?: number;
        chainId?: number;
        protocol?: Protocol;
    } & {
        address?: Uint8Array;
        claimSignature?: Uint8Array;
        blockHash?: Uint8Array;
        verificationType?: number;
        chainId?: number;
        protocol?: Protocol;
    } & { [K_1 in Exclude<keyof I_1, keyof VerificationAddAddressBody>]: never; }>(object: I_1): VerificationAddAddressBody;
};
/** Removes a Verification of a given protocol */
interface VerificationRemoveBody {
    /** Address of the Verification to remove */
    address: Uint8Array;
    /** Protocol of the Verification to remove */
    protocol: Protocol;
}
declare const VerificationRemoveBody: {
    encode(message: VerificationRemoveBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): VerificationRemoveBody;
    fromJSON(object: any): VerificationRemoveBody;
    toJSON(message: VerificationRemoveBody): unknown;
    create<I extends {
        address?: Uint8Array;
        protocol?: Protocol;
    } & {
        address?: Uint8Array;
        protocol?: Protocol;
    } & { [K in Exclude<keyof I, keyof VerificationRemoveBody>]: never; }>(base?: I | undefined): VerificationRemoveBody;
    fromPartial<I_1 extends {
        address?: Uint8Array;
        protocol?: Protocol;
    } & {
        address?: Uint8Array;
        protocol?: Protocol;
    } & { [K_1 in Exclude<keyof I_1, keyof VerificationRemoveBody>]: never; }>(object: I_1): VerificationRemoveBody;
};
/** Adds or removes a Link */
interface LinkBody {
    /** Type of link, <= 8 characters */
    type: string;
    /** User-defined timestamp that preserves original timestamp when message.data.timestamp needs to be updated for compaction */
    displayTimestamp?: number | undefined;
    /** The fid the link relates to */
    targetFid?: number | undefined;
}
declare const LinkBody: {
    encode(message: LinkBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): LinkBody;
    fromJSON(object: any): LinkBody;
    toJSON(message: LinkBody): unknown;
    create<I extends {
        type?: string;
        displayTimestamp?: number | undefined;
        targetFid?: number | undefined;
    } & {
        type?: string;
        displayTimestamp?: number | undefined;
        targetFid?: number | undefined;
    } & { [K in Exclude<keyof I, keyof LinkBody>]: never; }>(base?: I | undefined): LinkBody;
    fromPartial<I_1 extends {
        type?: string;
        displayTimestamp?: number | undefined;
        targetFid?: number | undefined;
    } & {
        type?: string;
        displayTimestamp?: number | undefined;
        targetFid?: number | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof LinkBody>]: never; }>(object: I_1): LinkBody;
};
/** A Compaction message for the Link Store */
interface LinkCompactStateBody {
    /** Type of link, <= 8 characters */
    type: string;
    targetFids: number[];
}
declare const LinkCompactStateBody: {
    encode(message: LinkCompactStateBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): LinkCompactStateBody;
    fromJSON(object: any): LinkCompactStateBody;
    toJSON(message: LinkCompactStateBody): unknown;
    create<I extends {
        type?: string;
        targetFids?: number[];
    } & {
        type?: string;
        targetFids?: number[] & number[] & { [K in Exclude<keyof I["targetFids"], keyof number[]>]: never; };
    } & { [K_1 in Exclude<keyof I, keyof LinkCompactStateBody>]: never; }>(base?: I | undefined): LinkCompactStateBody;
    fromPartial<I_1 extends {
        type?: string;
        targetFids?: number[];
    } & {
        type?: string;
        targetFids?: number[] & number[] & { [K_2 in Exclude<keyof I_1["targetFids"], keyof number[]>]: never; };
    } & { [K_3 in Exclude<keyof I_1, keyof LinkCompactStateBody>]: never; }>(object: I_1): LinkCompactStateBody;
};
/** A Farcaster Frame action */
interface FrameActionBody {
    /** URL of the Frame triggering the action */
    url: Uint8Array;
    /** The index of the button pressed (1-4) */
    buttonIndex: number;
    /** The cast which contained the frame url */
    castId: CastId | undefined;
    /** Text input from the user, if present */
    inputText: Uint8Array;
    /** Serialized frame state value */
    state: Uint8Array;
    /** Chain-specific transaction ID for tx actions */
    transactionId: Uint8Array;
    /** Chain-specific address for tx actions */
    address: Uint8Array;
}
declare const FrameActionBody: {
    encode(message: FrameActionBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FrameActionBody;
    fromJSON(object: any): FrameActionBody;
    toJSON(message: FrameActionBody): unknown;
    create<I extends {
        url?: Uint8Array;
        buttonIndex?: number;
        castId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
        inputText?: Uint8Array;
        state?: Uint8Array;
        transactionId?: Uint8Array;
        address?: Uint8Array;
    } & {
        url?: Uint8Array;
        buttonIndex?: number;
        castId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K in Exclude<keyof I["castId"], keyof CastId>]: never; }) | undefined;
        inputText?: Uint8Array;
        state?: Uint8Array;
        transactionId?: Uint8Array;
        address?: Uint8Array;
    } & { [K_1 in Exclude<keyof I, keyof FrameActionBody>]: never; }>(base?: I | undefined): FrameActionBody;
    fromPartial<I_1 extends {
        url?: Uint8Array;
        buttonIndex?: number;
        castId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
        inputText?: Uint8Array;
        state?: Uint8Array;
        transactionId?: Uint8Array;
        address?: Uint8Array;
    } & {
        url?: Uint8Array;
        buttonIndex?: number;
        castId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K_2 in Exclude<keyof I_1["castId"], keyof CastId>]: never; }) | undefined;
        inputText?: Uint8Array;
        state?: Uint8Array;
        transactionId?: Uint8Array;
        address?: Uint8Array;
    } & { [K_3 in Exclude<keyof I_1, keyof FrameActionBody>]: never; }>(object: I_1): FrameActionBody;
};

declare enum HubEventType {
    NONE = 0,
    MERGE_MESSAGE = 1,
    PRUNE_MESSAGE = 2,
    REVOKE_MESSAGE = 3,
    /**
     * MERGE_USERNAME_PROOF - Deprecated
     *  HUB_EVENT_TYPE_MERGE_ID_REGISTRY_EVENT = 4;
     *  HUB_EVENT_TYPE_MERGE_NAME_REGISTRY_EVENT = 5;
     */
    MERGE_USERNAME_PROOF = 6,
    /**
     * MERGE_ON_CHAIN_EVENT - Deprecated
     *  HUB_EVENT_TYPE_MERGE_RENT_REGISTRY_EVENT = 7;
     *  HUB_EVENT_TYPE_MERGE_STORAGE_ADMIN_REGISTRY_EVENT = 8;
     */
    MERGE_ON_CHAIN_EVENT = 9
}
interface MergeMessageBody {
    message: Message | undefined;
    deletedMessages: Message[];
}
declare const MergeMessageBody: {
    encode(message: MergeMessageBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MergeMessageBody;
    fromJSON(object: any): MergeMessageBody;
    toJSON(message: MergeMessageBody): unknown;
    create<I extends {
        message?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } | undefined;
        deletedMessages?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        }[];
    } & {
        message?: ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K in Exclude<keyof I["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_1 in Exclude<keyof I["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_2 in Exclude<keyof I["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_3 in Exclude<keyof I["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_4 in Exclude<keyof I["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_5 in Exclude<keyof I["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_6 in Exclude<keyof I["message"]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_7 in Exclude<keyof I["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_8 in Exclude<keyof I["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_9 in Exclude<keyof I["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_10 in Exclude<keyof I["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_11 in Exclude<keyof I["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_12 in Exclude<keyof I["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_13 in Exclude<keyof I["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_14 in Exclude<keyof I["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_15 in Exclude<keyof I["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_16 in Exclude<keyof I["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_17 in Exclude<keyof I["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_18 in Exclude<keyof I["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_19 in Exclude<keyof I["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_20 in Exclude<keyof I["message"]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_21 in Exclude<keyof I["message"], keyof Message>]: never; }) | undefined;
        deletedMessages?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        }[] & ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K_22 in Exclude<keyof I["deletedMessages"][number]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_23 in Exclude<keyof I["deletedMessages"][number]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_24 in Exclude<keyof I["deletedMessages"][number]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_25 in Exclude<keyof I["deletedMessages"][number]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_26 in Exclude<keyof I["deletedMessages"][number]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_27 in Exclude<keyof I["deletedMessages"][number]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_28 in Exclude<keyof I["deletedMessages"][number]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_29 in Exclude<keyof I["deletedMessages"][number]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_30 in Exclude<keyof I["deletedMessages"][number]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_31 in Exclude<keyof I["deletedMessages"][number]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_32 in Exclude<keyof I["deletedMessages"][number]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_33 in Exclude<keyof I["deletedMessages"][number]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_34 in Exclude<keyof I["deletedMessages"][number]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_35 in Exclude<keyof I["deletedMessages"][number]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_36 in Exclude<keyof I["deletedMessages"][number]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_37 in Exclude<keyof I["deletedMessages"][number]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_38 in Exclude<keyof I["deletedMessages"][number]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_39 in Exclude<keyof I["deletedMessages"][number]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_40 in Exclude<keyof I["deletedMessages"][number]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_41 in Exclude<keyof I["deletedMessages"][number]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_42 in Exclude<keyof I["deletedMessages"][number]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_43 in Exclude<keyof I["deletedMessages"][number], keyof Message>]: never; })[] & { [K_44 in Exclude<keyof I["deletedMessages"], keyof {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        }[]>]: never; };
    } & { [K_45 in Exclude<keyof I, keyof MergeMessageBody>]: never; }>(base?: I | undefined): MergeMessageBody;
    fromPartial<I_1 extends {
        message?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } | undefined;
        deletedMessages?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        }[];
    } & {
        message?: ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K_46 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_47 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_48 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_49 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_50 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_51 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_52 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_53 in Exclude<keyof I_1["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_54 in Exclude<keyof I_1["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_55 in Exclude<keyof I_1["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_56 in Exclude<keyof I_1["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_57 in Exclude<keyof I_1["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_58 in Exclude<keyof I_1["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_59 in Exclude<keyof I_1["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_60 in Exclude<keyof I_1["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_61 in Exclude<keyof I_1["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_62 in Exclude<keyof I_1["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_63 in Exclude<keyof I_1["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_64 in Exclude<keyof I_1["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_65 in Exclude<keyof I_1["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_66 in Exclude<keyof I_1["message"]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_67 in Exclude<keyof I_1["message"], keyof Message>]: never; }) | undefined;
        deletedMessages?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        }[] & ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K_68 in Exclude<keyof I_1["deletedMessages"][number]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_69 in Exclude<keyof I_1["deletedMessages"][number]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_70 in Exclude<keyof I_1["deletedMessages"][number]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_71 in Exclude<keyof I_1["deletedMessages"][number]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_72 in Exclude<keyof I_1["deletedMessages"][number]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_73 in Exclude<keyof I_1["deletedMessages"][number]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_74 in Exclude<keyof I_1["deletedMessages"][number]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_75 in Exclude<keyof I_1["deletedMessages"][number]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_76 in Exclude<keyof I_1["deletedMessages"][number]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_77 in Exclude<keyof I_1["deletedMessages"][number]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_78 in Exclude<keyof I_1["deletedMessages"][number]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_79 in Exclude<keyof I_1["deletedMessages"][number]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_80 in Exclude<keyof I_1["deletedMessages"][number]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_81 in Exclude<keyof I_1["deletedMessages"][number]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_82 in Exclude<keyof I_1["deletedMessages"][number]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_83 in Exclude<keyof I_1["deletedMessages"][number]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_84 in Exclude<keyof I_1["deletedMessages"][number]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_85 in Exclude<keyof I_1["deletedMessages"][number]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_86 in Exclude<keyof I_1["deletedMessages"][number]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_87 in Exclude<keyof I_1["deletedMessages"][number]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_88 in Exclude<keyof I_1["deletedMessages"][number]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_89 in Exclude<keyof I_1["deletedMessages"][number], keyof Message>]: never; })[] & { [K_90 in Exclude<keyof I_1["deletedMessages"], keyof {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        }[]>]: never; };
    } & { [K_91 in Exclude<keyof I_1, keyof MergeMessageBody>]: never; }>(object: I_1): MergeMessageBody;
};
interface PruneMessageBody {
    message: Message | undefined;
}
declare const PruneMessageBody: {
    encode(message: PruneMessageBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): PruneMessageBody;
    fromJSON(object: any): PruneMessageBody;
    toJSON(message: PruneMessageBody): unknown;
    create<I extends {
        message?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } | undefined;
    } & {
        message?: ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K in Exclude<keyof I["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_1 in Exclude<keyof I["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_2 in Exclude<keyof I["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_3 in Exclude<keyof I["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_4 in Exclude<keyof I["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_5 in Exclude<keyof I["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_6 in Exclude<keyof I["message"]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_7 in Exclude<keyof I["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_8 in Exclude<keyof I["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_9 in Exclude<keyof I["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_10 in Exclude<keyof I["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_11 in Exclude<keyof I["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_12 in Exclude<keyof I["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_13 in Exclude<keyof I["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_14 in Exclude<keyof I["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_15 in Exclude<keyof I["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_16 in Exclude<keyof I["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_17 in Exclude<keyof I["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_18 in Exclude<keyof I["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_19 in Exclude<keyof I["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_20 in Exclude<keyof I["message"]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_21 in Exclude<keyof I["message"], keyof Message>]: never; }) | undefined;
    } & { [K_22 in Exclude<keyof I, "message">]: never; }>(base?: I | undefined): PruneMessageBody;
    fromPartial<I_1 extends {
        message?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } | undefined;
    } & {
        message?: ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K_23 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_24 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_25 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_26 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_27 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_28 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_29 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_30 in Exclude<keyof I_1["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_31 in Exclude<keyof I_1["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_32 in Exclude<keyof I_1["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_33 in Exclude<keyof I_1["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_34 in Exclude<keyof I_1["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_35 in Exclude<keyof I_1["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_36 in Exclude<keyof I_1["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_37 in Exclude<keyof I_1["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_38 in Exclude<keyof I_1["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_39 in Exclude<keyof I_1["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_40 in Exclude<keyof I_1["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_41 in Exclude<keyof I_1["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_42 in Exclude<keyof I_1["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_43 in Exclude<keyof I_1["message"]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_44 in Exclude<keyof I_1["message"], keyof Message>]: never; }) | undefined;
    } & { [K_45 in Exclude<keyof I_1, "message">]: never; }>(object: I_1): PruneMessageBody;
};
interface RevokeMessageBody {
    message: Message | undefined;
}
declare const RevokeMessageBody: {
    encode(message: RevokeMessageBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): RevokeMessageBody;
    fromJSON(object: any): RevokeMessageBody;
    toJSON(message: RevokeMessageBody): unknown;
    create<I extends {
        message?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } | undefined;
    } & {
        message?: ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K in Exclude<keyof I["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_1 in Exclude<keyof I["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_2 in Exclude<keyof I["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_3 in Exclude<keyof I["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_4 in Exclude<keyof I["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_5 in Exclude<keyof I["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_6 in Exclude<keyof I["message"]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_7 in Exclude<keyof I["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_8 in Exclude<keyof I["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_9 in Exclude<keyof I["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_10 in Exclude<keyof I["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_11 in Exclude<keyof I["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_12 in Exclude<keyof I["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_13 in Exclude<keyof I["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_14 in Exclude<keyof I["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_15 in Exclude<keyof I["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_16 in Exclude<keyof I["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_17 in Exclude<keyof I["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_18 in Exclude<keyof I["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_19 in Exclude<keyof I["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_20 in Exclude<keyof I["message"]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_21 in Exclude<keyof I["message"], keyof Message>]: never; }) | undefined;
    } & { [K_22 in Exclude<keyof I, "message">]: never; }>(base?: I | undefined): RevokeMessageBody;
    fromPartial<I_1 extends {
        message?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } | undefined;
    } & {
        message?: ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K_23 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_24 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_25 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_26 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_27 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_28 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_29 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_30 in Exclude<keyof I_1["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_31 in Exclude<keyof I_1["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_32 in Exclude<keyof I_1["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_33 in Exclude<keyof I_1["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_34 in Exclude<keyof I_1["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_35 in Exclude<keyof I_1["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_36 in Exclude<keyof I_1["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_37 in Exclude<keyof I_1["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_38 in Exclude<keyof I_1["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_39 in Exclude<keyof I_1["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_40 in Exclude<keyof I_1["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_41 in Exclude<keyof I_1["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_42 in Exclude<keyof I_1["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_43 in Exclude<keyof I_1["message"]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_44 in Exclude<keyof I_1["message"], keyof Message>]: never; }) | undefined;
    } & { [K_45 in Exclude<keyof I_1, "message">]: never; }>(object: I_1): RevokeMessageBody;
};
interface MergeOnChainEventBody {
    onChainEvent: OnChainEvent | undefined;
}
declare const MergeOnChainEventBody: {
    encode(message: MergeOnChainEventBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MergeOnChainEventBody;
    fromJSON(object: any): MergeOnChainEventBody;
    toJSON(message: MergeOnChainEventBody): unknown;
    create<I extends {
        onChainEvent?: {
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } | undefined;
            signerMigratedEventBody?: {
                migratedAt?: number;
            } | undefined;
            idRegisterEventBody?: {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } | undefined;
            storageRentEventBody?: {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } | undefined;
            txIndex?: number;
            version?: number;
        } | undefined;
    } & {
        onChainEvent?: ({
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } | undefined;
            signerMigratedEventBody?: {
                migratedAt?: number;
            } | undefined;
            idRegisterEventBody?: {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } | undefined;
            storageRentEventBody?: {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } | undefined;
            txIndex?: number;
            version?: number;
        } & {
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: ({
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } & {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } & { [K in Exclude<keyof I["onChainEvent"]["signerEventBody"], keyof SignerEventBody>]: never; }) | undefined;
            signerMigratedEventBody?: ({
                migratedAt?: number;
            } & {
                migratedAt?: number;
            } & { [K_1 in Exclude<keyof I["onChainEvent"]["signerMigratedEventBody"], "migratedAt">]: never; }) | undefined;
            idRegisterEventBody?: ({
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } & {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } & { [K_2 in Exclude<keyof I["onChainEvent"]["idRegisterEventBody"], keyof IdRegisterEventBody>]: never; }) | undefined;
            storageRentEventBody?: ({
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } & {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } & { [K_3 in Exclude<keyof I["onChainEvent"]["storageRentEventBody"], keyof StorageRentEventBody>]: never; }) | undefined;
            txIndex?: number;
            version?: number;
        } & { [K_4 in Exclude<keyof I["onChainEvent"], keyof OnChainEvent>]: never; }) | undefined;
    } & { [K_5 in Exclude<keyof I, "onChainEvent">]: never; }>(base?: I | undefined): MergeOnChainEventBody;
    fromPartial<I_1 extends {
        onChainEvent?: {
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } | undefined;
            signerMigratedEventBody?: {
                migratedAt?: number;
            } | undefined;
            idRegisterEventBody?: {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } | undefined;
            storageRentEventBody?: {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } | undefined;
            txIndex?: number;
            version?: number;
        } | undefined;
    } & {
        onChainEvent?: ({
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } | undefined;
            signerMigratedEventBody?: {
                migratedAt?: number;
            } | undefined;
            idRegisterEventBody?: {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } | undefined;
            storageRentEventBody?: {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } | undefined;
            txIndex?: number;
            version?: number;
        } & {
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: ({
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } & {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } & { [K_6 in Exclude<keyof I_1["onChainEvent"]["signerEventBody"], keyof SignerEventBody>]: never; }) | undefined;
            signerMigratedEventBody?: ({
                migratedAt?: number;
            } & {
                migratedAt?: number;
            } & { [K_7 in Exclude<keyof I_1["onChainEvent"]["signerMigratedEventBody"], "migratedAt">]: never; }) | undefined;
            idRegisterEventBody?: ({
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } & {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } & { [K_8 in Exclude<keyof I_1["onChainEvent"]["idRegisterEventBody"], keyof IdRegisterEventBody>]: never; }) | undefined;
            storageRentEventBody?: ({
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } & {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } & { [K_9 in Exclude<keyof I_1["onChainEvent"]["storageRentEventBody"], keyof StorageRentEventBody>]: never; }) | undefined;
            txIndex?: number;
            version?: number;
        } & { [K_10 in Exclude<keyof I_1["onChainEvent"], keyof OnChainEvent>]: never; }) | undefined;
    } & { [K_11 in Exclude<keyof I_1, "onChainEvent">]: never; }>(object: I_1): MergeOnChainEventBody;
};
interface MergeUserNameProofBody {
    usernameProof: UserNameProof | undefined;
    deletedUsernameProof: UserNameProof | undefined;
    usernameProofMessage: Message | undefined;
    deletedUsernameProofMessage: Message | undefined;
}
declare const MergeUserNameProofBody: {
    encode(message: MergeUserNameProofBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MergeUserNameProofBody;
    fromJSON(object: any): MergeUserNameProofBody;
    toJSON(message: MergeUserNameProofBody): unknown;
    create<I extends {
        usernameProof?: {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } | undefined;
        deletedUsernameProof?: {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } | undefined;
        usernameProofMessage?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } | undefined;
        deletedUsernameProofMessage?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } | undefined;
    } & {
        usernameProof?: ({
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & { [K in Exclude<keyof I["usernameProof"], keyof UserNameProof>]: never; }) | undefined;
        deletedUsernameProof?: ({
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & { [K_1 in Exclude<keyof I["deletedUsernameProof"], keyof UserNameProof>]: never; }) | undefined;
        usernameProofMessage?: ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K_2 in Exclude<keyof I["usernameProofMessage"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_3 in Exclude<keyof I["usernameProofMessage"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_4 in Exclude<keyof I["usernameProofMessage"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_5 in Exclude<keyof I["usernameProofMessage"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_6 in Exclude<keyof I["usernameProofMessage"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_7 in Exclude<keyof I["usernameProofMessage"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_8 in Exclude<keyof I["usernameProofMessage"]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_9 in Exclude<keyof I["usernameProofMessage"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_10 in Exclude<keyof I["usernameProofMessage"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_11 in Exclude<keyof I["usernameProofMessage"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_12 in Exclude<keyof I["usernameProofMessage"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_13 in Exclude<keyof I["usernameProofMessage"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_14 in Exclude<keyof I["usernameProofMessage"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_15 in Exclude<keyof I["usernameProofMessage"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_16 in Exclude<keyof I["usernameProofMessage"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_17 in Exclude<keyof I["usernameProofMessage"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_18 in Exclude<keyof I["usernameProofMessage"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_19 in Exclude<keyof I["usernameProofMessage"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_20 in Exclude<keyof I["usernameProofMessage"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_21 in Exclude<keyof I["usernameProofMessage"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_22 in Exclude<keyof I["usernameProofMessage"]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_23 in Exclude<keyof I["usernameProofMessage"], keyof Message>]: never; }) | undefined;
        deletedUsernameProofMessage?: ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K_24 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_25 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_26 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_27 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_28 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_29 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_30 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_31 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_32 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_33 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_34 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_35 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_36 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_37 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_38 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_39 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_40 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_41 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_42 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_43 in Exclude<keyof I["deletedUsernameProofMessage"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_44 in Exclude<keyof I["deletedUsernameProofMessage"]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_45 in Exclude<keyof I["deletedUsernameProofMessage"], keyof Message>]: never; }) | undefined;
    } & { [K_46 in Exclude<keyof I, keyof MergeUserNameProofBody>]: never; }>(base?: I | undefined): MergeUserNameProofBody;
    fromPartial<I_1 extends {
        usernameProof?: {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } | undefined;
        deletedUsernameProof?: {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } | undefined;
        usernameProofMessage?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } | undefined;
        deletedUsernameProofMessage?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } | undefined;
    } & {
        usernameProof?: ({
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & { [K_47 in Exclude<keyof I_1["usernameProof"], keyof UserNameProof>]: never; }) | undefined;
        deletedUsernameProof?: ({
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & { [K_48 in Exclude<keyof I_1["deletedUsernameProof"], keyof UserNameProof>]: never; }) | undefined;
        usernameProofMessage?: ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K_49 in Exclude<keyof I_1["usernameProofMessage"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_50 in Exclude<keyof I_1["usernameProofMessage"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_51 in Exclude<keyof I_1["usernameProofMessage"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_52 in Exclude<keyof I_1["usernameProofMessage"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_53 in Exclude<keyof I_1["usernameProofMessage"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_54 in Exclude<keyof I_1["usernameProofMessage"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_55 in Exclude<keyof I_1["usernameProofMessage"]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_56 in Exclude<keyof I_1["usernameProofMessage"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_57 in Exclude<keyof I_1["usernameProofMessage"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_58 in Exclude<keyof I_1["usernameProofMessage"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_59 in Exclude<keyof I_1["usernameProofMessage"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_60 in Exclude<keyof I_1["usernameProofMessage"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_61 in Exclude<keyof I_1["usernameProofMessage"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_62 in Exclude<keyof I_1["usernameProofMessage"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_63 in Exclude<keyof I_1["usernameProofMessage"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_64 in Exclude<keyof I_1["usernameProofMessage"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_65 in Exclude<keyof I_1["usernameProofMessage"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_66 in Exclude<keyof I_1["usernameProofMessage"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_67 in Exclude<keyof I_1["usernameProofMessage"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_68 in Exclude<keyof I_1["usernameProofMessage"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_69 in Exclude<keyof I_1["usernameProofMessage"]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_70 in Exclude<keyof I_1["usernameProofMessage"], keyof Message>]: never; }) | undefined;
        deletedUsernameProofMessage?: ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K_71 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_72 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_73 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_74 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_75 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_76 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_77 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_78 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_79 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_80 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_81 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_82 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_83 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_84 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_85 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_86 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_87 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_88 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_89 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_90 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_91 in Exclude<keyof I_1["deletedUsernameProofMessage"]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_92 in Exclude<keyof I_1["deletedUsernameProofMessage"], keyof Message>]: never; }) | undefined;
    } & { [K_93 in Exclude<keyof I_1, keyof MergeUserNameProofBody>]: never; }>(object: I_1): MergeUserNameProofBody;
};
interface HubEvent {
    type: HubEventType;
    id: number;
    mergeMessageBody?: MergeMessageBody | undefined;
    pruneMessageBody?: PruneMessageBody | undefined;
    revokeMessageBody?: RevokeMessageBody | undefined;
    /**
     * Deprecated
     *    MergeIdRegistryEventBody merge_id_registry_event_body = 6;
     *    MergeNameRegistryEventBody merge_name_registry_event_body = 7;
     */
    mergeUsernameProofBody?: MergeUserNameProofBody | undefined;
    /**
     * Deprecated
     *    MergeRentRegistryEventBody merge_rent_registry_event_body = 9;
     *    MergeStorageAdminRegistryEventBody merge_storage_admin_registry_event_body = 10;
     */
    mergeOnChainEventBody?: MergeOnChainEventBody | undefined;
}
declare const HubEvent: {
    encode(message: HubEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): HubEvent;
    fromJSON(object: any): HubEvent;
    toJSON(message: HubEvent): unknown;
    create<I extends {
        type?: HubEventType;
        id?: number;
        mergeMessageBody?: {
            message?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
            deletedMessages?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            }[];
        } | undefined;
        pruneMessageBody?: {
            message?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
        } | undefined;
        revokeMessageBody?: {
            message?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
        } | undefined;
        mergeUsernameProofBody?: {
            usernameProof?: {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } | undefined;
            deletedUsernameProof?: {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } | undefined;
            usernameProofMessage?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
            deletedUsernameProofMessage?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
        } | undefined;
        mergeOnChainEventBody?: {
            onChainEvent?: {
                type?: OnChainEventType;
                chainId?: number;
                blockNumber?: number;
                blockHash?: Uint8Array;
                blockTimestamp?: number;
                transactionHash?: Uint8Array;
                logIndex?: number;
                fid?: number;
                signerEventBody?: {
                    key?: Uint8Array;
                    keyType?: number;
                    eventType?: SignerEventType;
                    metadata?: Uint8Array;
                    metadataType?: number;
                } | undefined;
                signerMigratedEventBody?: {
                    migratedAt?: number;
                } | undefined;
                idRegisterEventBody?: {
                    to?: Uint8Array;
                    eventType?: IdRegisterEventType;
                    from?: Uint8Array;
                    recoveryAddress?: Uint8Array;
                } | undefined;
                storageRentEventBody?: {
                    payer?: Uint8Array;
                    units?: number;
                    expiry?: number;
                } | undefined;
                txIndex?: number;
                version?: number;
            } | undefined;
        } | undefined;
    } & {
        type?: HubEventType;
        id?: number;
        mergeMessageBody?: ({
            message?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
            deletedMessages?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            }[];
        } & {
            message?: ({
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & {
                data?: ({
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } & {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: ({
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } & {
                        embedsDeprecated?: string[] & string[] & { [K in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                        mentions?: number[] & number[] & { [K_1 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                        parentCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_2 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[] & number[] & { [K_3 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[] & ({
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        } & {
                            url?: string | undefined;
                            castId?: ({
                                fid?: number;
                                hash?: Uint8Array;
                            } & {
                                fid?: number;
                                hash?: Uint8Array;
                            } & { [K_4 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                        } & { [K_5 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_6 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["castAddBody"]["embeds"], keyof {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[]>]: never; };
                    } & { [K_7 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                    castRemoveBody?: ({
                        targetHash?: Uint8Array;
                    } & {
                        targetHash?: Uint8Array;
                    } & { [K_8 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                    reactionBody?: ({
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } & {
                        type?: ReactionType;
                        targetCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_9 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                        targetUrl?: string | undefined;
                    } & { [K_10 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                    verificationAddAddressBody?: ({
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & { [K_11 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                    verificationRemoveBody?: ({
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & { [K_12 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                    userDataBody?: ({
                        type?: UserDataType;
                        value?: string;
                    } & {
                        type?: UserDataType;
                        value?: string;
                    } & { [K_13 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                    linkBody?: ({
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & { [K_14 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                    usernameProofBody?: ({
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & { [K_15 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                    frameActionBody?: ({
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_16 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & { [K_17 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                    linkCompactStateBody?: ({
                        type?: string;
                        targetFids?: number[];
                    } & {
                        type?: string;
                        targetFids?: number[] & number[] & { [K_18 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                    } & { [K_19 in Exclude<keyof I["mergeMessageBody"]["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
                } & { [K_20 in Exclude<keyof I["mergeMessageBody"]["message"]["data"], keyof MessageData>]: never; }) | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & { [K_21 in Exclude<keyof I["mergeMessageBody"]["message"], keyof Message>]: never; }) | undefined;
            deletedMessages?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            }[] & ({
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & {
                data?: ({
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } & {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: ({
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } & {
                        embedsDeprecated?: string[] & string[] & { [K_22 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                        mentions?: number[] & number[] & { [K_23 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                        parentCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_24 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[] & number[] & { [K_25 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[] & ({
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        } & {
                            url?: string | undefined;
                            castId?: ({
                                fid?: number;
                                hash?: Uint8Array;
                            } & {
                                fid?: number;
                                hash?: Uint8Array;
                            } & { [K_26 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                        } & { [K_27 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_28 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["embeds"], keyof {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[]>]: never; };
                    } & { [K_29 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                    castRemoveBody?: ({
                        targetHash?: Uint8Array;
                    } & {
                        targetHash?: Uint8Array;
                    } & { [K_30 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                    reactionBody?: ({
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } & {
                        type?: ReactionType;
                        targetCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_31 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                        targetUrl?: string | undefined;
                    } & { [K_32 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                    verificationAddAddressBody?: ({
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & { [K_33 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                    verificationRemoveBody?: ({
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & { [K_34 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                    userDataBody?: ({
                        type?: UserDataType;
                        value?: string;
                    } & {
                        type?: UserDataType;
                        value?: string;
                    } & { [K_35 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                    linkBody?: ({
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & { [K_36 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                    usernameProofBody?: ({
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & { [K_37 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                    frameActionBody?: ({
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_38 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & { [K_39 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                    linkCompactStateBody?: ({
                        type?: string;
                        targetFids?: number[];
                    } & {
                        type?: string;
                        targetFids?: number[] & number[] & { [K_40 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                    } & { [K_41 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
                } & { [K_42 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number]["data"], keyof MessageData>]: never; }) | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & { [K_43 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"][number], keyof Message>]: never; })[] & { [K_44 in Exclude<keyof I["mergeMessageBody"]["deletedMessages"], keyof {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            }[]>]: never; };
        } & { [K_45 in Exclude<keyof I["mergeMessageBody"], keyof MergeMessageBody>]: never; }) | undefined;
        pruneMessageBody?: ({
            message?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
        } & {
            message?: ({
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & {
                data?: ({
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } & {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: ({
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } & {
                        embedsDeprecated?: string[] & string[] & { [K_46 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                        mentions?: number[] & number[] & { [K_47 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                        parentCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_48 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[] & number[] & { [K_49 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[] & ({
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        } & {
                            url?: string | undefined;
                            castId?: ({
                                fid?: number;
                                hash?: Uint8Array;
                            } & {
                                fid?: number;
                                hash?: Uint8Array;
                            } & { [K_50 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                        } & { [K_51 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_52 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["castAddBody"]["embeds"], keyof {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[]>]: never; };
                    } & { [K_53 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                    castRemoveBody?: ({
                        targetHash?: Uint8Array;
                    } & {
                        targetHash?: Uint8Array;
                    } & { [K_54 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                    reactionBody?: ({
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } & {
                        type?: ReactionType;
                        targetCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_55 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                        targetUrl?: string | undefined;
                    } & { [K_56 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                    verificationAddAddressBody?: ({
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & { [K_57 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                    verificationRemoveBody?: ({
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & { [K_58 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                    userDataBody?: ({
                        type?: UserDataType;
                        value?: string;
                    } & {
                        type?: UserDataType;
                        value?: string;
                    } & { [K_59 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                    linkBody?: ({
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & { [K_60 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                    usernameProofBody?: ({
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & { [K_61 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                    frameActionBody?: ({
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_62 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & { [K_63 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                    linkCompactStateBody?: ({
                        type?: string;
                        targetFids?: number[];
                    } & {
                        type?: string;
                        targetFids?: number[] & number[] & { [K_64 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                    } & { [K_65 in Exclude<keyof I["pruneMessageBody"]["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
                } & { [K_66 in Exclude<keyof I["pruneMessageBody"]["message"]["data"], keyof MessageData>]: never; }) | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & { [K_67 in Exclude<keyof I["pruneMessageBody"]["message"], keyof Message>]: never; }) | undefined;
        } & { [K_68 in Exclude<keyof I["pruneMessageBody"], "message">]: never; }) | undefined;
        revokeMessageBody?: ({
            message?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
        } & {
            message?: ({
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & {
                data?: ({
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } & {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: ({
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } & {
                        embedsDeprecated?: string[] & string[] & { [K_69 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                        mentions?: number[] & number[] & { [K_70 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                        parentCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_71 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[] & number[] & { [K_72 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[] & ({
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        } & {
                            url?: string | undefined;
                            castId?: ({
                                fid?: number;
                                hash?: Uint8Array;
                            } & {
                                fid?: number;
                                hash?: Uint8Array;
                            } & { [K_73 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                        } & { [K_74 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_75 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["castAddBody"]["embeds"], keyof {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[]>]: never; };
                    } & { [K_76 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                    castRemoveBody?: ({
                        targetHash?: Uint8Array;
                    } & {
                        targetHash?: Uint8Array;
                    } & { [K_77 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                    reactionBody?: ({
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } & {
                        type?: ReactionType;
                        targetCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_78 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                        targetUrl?: string | undefined;
                    } & { [K_79 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                    verificationAddAddressBody?: ({
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & { [K_80 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                    verificationRemoveBody?: ({
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & { [K_81 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                    userDataBody?: ({
                        type?: UserDataType;
                        value?: string;
                    } & {
                        type?: UserDataType;
                        value?: string;
                    } & { [K_82 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                    linkBody?: ({
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & { [K_83 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                    usernameProofBody?: ({
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & { [K_84 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                    frameActionBody?: ({
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_85 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & { [K_86 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                    linkCompactStateBody?: ({
                        type?: string;
                        targetFids?: number[];
                    } & {
                        type?: string;
                        targetFids?: number[] & number[] & { [K_87 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                    } & { [K_88 in Exclude<keyof I["revokeMessageBody"]["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
                } & { [K_89 in Exclude<keyof I["revokeMessageBody"]["message"]["data"], keyof MessageData>]: never; }) | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & { [K_90 in Exclude<keyof I["revokeMessageBody"]["message"], keyof Message>]: never; }) | undefined;
        } & { [K_91 in Exclude<keyof I["revokeMessageBody"], "message">]: never; }) | undefined;
        mergeUsernameProofBody?: ({
            usernameProof?: {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } | undefined;
            deletedUsernameProof?: {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } | undefined;
            usernameProofMessage?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
            deletedUsernameProofMessage?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
        } & {
            usernameProof?: ({
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } & {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } & { [K_92 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProof"], keyof UserNameProof>]: never; }) | undefined;
            deletedUsernameProof?: ({
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } & {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } & { [K_93 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProof"], keyof UserNameProof>]: never; }) | undefined;
            usernameProofMessage?: ({
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & {
                data?: ({
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } & {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: ({
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } & {
                        embedsDeprecated?: string[] & string[] & { [K_94 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                        mentions?: number[] & number[] & { [K_95 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                        parentCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_96 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[] & number[] & { [K_97 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[] & ({
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        } & {
                            url?: string | undefined;
                            castId?: ({
                                fid?: number;
                                hash?: Uint8Array;
                            } & {
                                fid?: number;
                                hash?: Uint8Array;
                            } & { [K_98 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                        } & { [K_99 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_100 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["embeds"], keyof {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[]>]: never; };
                    } & { [K_101 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                    castRemoveBody?: ({
                        targetHash?: Uint8Array;
                    } & {
                        targetHash?: Uint8Array;
                    } & { [K_102 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                    reactionBody?: ({
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } & {
                        type?: ReactionType;
                        targetCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_103 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                        targetUrl?: string | undefined;
                    } & { [K_104 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                    verificationAddAddressBody?: ({
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & { [K_105 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                    verificationRemoveBody?: ({
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & { [K_106 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                    userDataBody?: ({
                        type?: UserDataType;
                        value?: string;
                    } & {
                        type?: UserDataType;
                        value?: string;
                    } & { [K_107 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                    linkBody?: ({
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & { [K_108 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                    usernameProofBody?: ({
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & { [K_109 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                    frameActionBody?: ({
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_110 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & { [K_111 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                    linkCompactStateBody?: ({
                        type?: string;
                        targetFids?: number[];
                    } & {
                        type?: string;
                        targetFids?: number[] & number[] & { [K_112 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                    } & { [K_113 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
                } & { [K_114 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"]["data"], keyof MessageData>]: never; }) | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & { [K_115 in Exclude<keyof I["mergeUsernameProofBody"]["usernameProofMessage"], keyof Message>]: never; }) | undefined;
            deletedUsernameProofMessage?: ({
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & {
                data?: ({
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } & {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: ({
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } & {
                        embedsDeprecated?: string[] & string[] & { [K_116 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                        mentions?: number[] & number[] & { [K_117 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                        parentCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_118 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[] & number[] & { [K_119 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[] & ({
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        } & {
                            url?: string | undefined;
                            castId?: ({
                                fid?: number;
                                hash?: Uint8Array;
                            } & {
                                fid?: number;
                                hash?: Uint8Array;
                            } & { [K_120 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                        } & { [K_121 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_122 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["embeds"], keyof {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[]>]: never; };
                    } & { [K_123 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                    castRemoveBody?: ({
                        targetHash?: Uint8Array;
                    } & {
                        targetHash?: Uint8Array;
                    } & { [K_124 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                    reactionBody?: ({
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } & {
                        type?: ReactionType;
                        targetCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_125 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                        targetUrl?: string | undefined;
                    } & { [K_126 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                    verificationAddAddressBody?: ({
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & { [K_127 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                    verificationRemoveBody?: ({
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & { [K_128 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                    userDataBody?: ({
                        type?: UserDataType;
                        value?: string;
                    } & {
                        type?: UserDataType;
                        value?: string;
                    } & { [K_129 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                    linkBody?: ({
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & { [K_130 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                    usernameProofBody?: ({
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & { [K_131 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                    frameActionBody?: ({
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_132 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & { [K_133 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                    linkCompactStateBody?: ({
                        type?: string;
                        targetFids?: number[];
                    } & {
                        type?: string;
                        targetFids?: number[] & number[] & { [K_134 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                    } & { [K_135 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
                } & { [K_136 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"], keyof MessageData>]: never; }) | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & { [K_137 in Exclude<keyof I["mergeUsernameProofBody"]["deletedUsernameProofMessage"], keyof Message>]: never; }) | undefined;
        } & { [K_138 in Exclude<keyof I["mergeUsernameProofBody"], keyof MergeUserNameProofBody>]: never; }) | undefined;
        mergeOnChainEventBody?: ({
            onChainEvent?: {
                type?: OnChainEventType;
                chainId?: number;
                blockNumber?: number;
                blockHash?: Uint8Array;
                blockTimestamp?: number;
                transactionHash?: Uint8Array;
                logIndex?: number;
                fid?: number;
                signerEventBody?: {
                    key?: Uint8Array;
                    keyType?: number;
                    eventType?: SignerEventType;
                    metadata?: Uint8Array;
                    metadataType?: number;
                } | undefined;
                signerMigratedEventBody?: {
                    migratedAt?: number;
                } | undefined;
                idRegisterEventBody?: {
                    to?: Uint8Array;
                    eventType?: IdRegisterEventType;
                    from?: Uint8Array;
                    recoveryAddress?: Uint8Array;
                } | undefined;
                storageRentEventBody?: {
                    payer?: Uint8Array;
                    units?: number;
                    expiry?: number;
                } | undefined;
                txIndex?: number;
                version?: number;
            } | undefined;
        } & {
            onChainEvent?: ({
                type?: OnChainEventType;
                chainId?: number;
                blockNumber?: number;
                blockHash?: Uint8Array;
                blockTimestamp?: number;
                transactionHash?: Uint8Array;
                logIndex?: number;
                fid?: number;
                signerEventBody?: {
                    key?: Uint8Array;
                    keyType?: number;
                    eventType?: SignerEventType;
                    metadata?: Uint8Array;
                    metadataType?: number;
                } | undefined;
                signerMigratedEventBody?: {
                    migratedAt?: number;
                } | undefined;
                idRegisterEventBody?: {
                    to?: Uint8Array;
                    eventType?: IdRegisterEventType;
                    from?: Uint8Array;
                    recoveryAddress?: Uint8Array;
                } | undefined;
                storageRentEventBody?: {
                    payer?: Uint8Array;
                    units?: number;
                    expiry?: number;
                } | undefined;
                txIndex?: number;
                version?: number;
            } & {
                type?: OnChainEventType;
                chainId?: number;
                blockNumber?: number;
                blockHash?: Uint8Array;
                blockTimestamp?: number;
                transactionHash?: Uint8Array;
                logIndex?: number;
                fid?: number;
                signerEventBody?: ({
                    key?: Uint8Array;
                    keyType?: number;
                    eventType?: SignerEventType;
                    metadata?: Uint8Array;
                    metadataType?: number;
                } & {
                    key?: Uint8Array;
                    keyType?: number;
                    eventType?: SignerEventType;
                    metadata?: Uint8Array;
                    metadataType?: number;
                } & { [K_139 in Exclude<keyof I["mergeOnChainEventBody"]["onChainEvent"]["signerEventBody"], keyof SignerEventBody>]: never; }) | undefined;
                signerMigratedEventBody?: ({
                    migratedAt?: number;
                } & {
                    migratedAt?: number;
                } & { [K_140 in Exclude<keyof I["mergeOnChainEventBody"]["onChainEvent"]["signerMigratedEventBody"], "migratedAt">]: never; }) | undefined;
                idRegisterEventBody?: ({
                    to?: Uint8Array;
                    eventType?: IdRegisterEventType;
                    from?: Uint8Array;
                    recoveryAddress?: Uint8Array;
                } & {
                    to?: Uint8Array;
                    eventType?: IdRegisterEventType;
                    from?: Uint8Array;
                    recoveryAddress?: Uint8Array;
                } & { [K_141 in Exclude<keyof I["mergeOnChainEventBody"]["onChainEvent"]["idRegisterEventBody"], keyof IdRegisterEventBody>]: never; }) | undefined;
                storageRentEventBody?: ({
                    payer?: Uint8Array;
                    units?: number;
                    expiry?: number;
                } & {
                    payer?: Uint8Array;
                    units?: number;
                    expiry?: number;
                } & { [K_142 in Exclude<keyof I["mergeOnChainEventBody"]["onChainEvent"]["storageRentEventBody"], keyof StorageRentEventBody>]: never; }) | undefined;
                txIndex?: number;
                version?: number;
            } & { [K_143 in Exclude<keyof I["mergeOnChainEventBody"]["onChainEvent"], keyof OnChainEvent>]: never; }) | undefined;
        } & { [K_144 in Exclude<keyof I["mergeOnChainEventBody"], "onChainEvent">]: never; }) | undefined;
    } & { [K_145 in Exclude<keyof I, keyof HubEvent>]: never; }>(base?: I | undefined): HubEvent;
    fromPartial<I_1 extends {
        type?: HubEventType;
        id?: number;
        mergeMessageBody?: {
            message?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
            deletedMessages?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            }[];
        } | undefined;
        pruneMessageBody?: {
            message?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
        } | undefined;
        revokeMessageBody?: {
            message?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
        } | undefined;
        mergeUsernameProofBody?: {
            usernameProof?: {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } | undefined;
            deletedUsernameProof?: {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } | undefined;
            usernameProofMessage?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
            deletedUsernameProofMessage?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
        } | undefined;
        mergeOnChainEventBody?: {
            onChainEvent?: {
                type?: OnChainEventType;
                chainId?: number;
                blockNumber?: number;
                blockHash?: Uint8Array;
                blockTimestamp?: number;
                transactionHash?: Uint8Array;
                logIndex?: number;
                fid?: number;
                signerEventBody?: {
                    key?: Uint8Array;
                    keyType?: number;
                    eventType?: SignerEventType;
                    metadata?: Uint8Array;
                    metadataType?: number;
                } | undefined;
                signerMigratedEventBody?: {
                    migratedAt?: number;
                } | undefined;
                idRegisterEventBody?: {
                    to?: Uint8Array;
                    eventType?: IdRegisterEventType;
                    from?: Uint8Array;
                    recoveryAddress?: Uint8Array;
                } | undefined;
                storageRentEventBody?: {
                    payer?: Uint8Array;
                    units?: number;
                    expiry?: number;
                } | undefined;
                txIndex?: number;
                version?: number;
            } | undefined;
        } | undefined;
    } & {
        type?: HubEventType;
        id?: number;
        mergeMessageBody?: ({
            message?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
            deletedMessages?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            }[];
        } & {
            message?: ({
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & {
                data?: ({
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } & {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: ({
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } & {
                        embedsDeprecated?: string[] & string[] & { [K_146 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                        mentions?: number[] & number[] & { [K_147 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                        parentCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_148 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[] & number[] & { [K_149 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[] & ({
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        } & {
                            url?: string | undefined;
                            castId?: ({
                                fid?: number;
                                hash?: Uint8Array;
                            } & {
                                fid?: number;
                                hash?: Uint8Array;
                            } & { [K_150 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                        } & { [K_151 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_152 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["castAddBody"]["embeds"], keyof {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[]>]: never; };
                    } & { [K_153 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                    castRemoveBody?: ({
                        targetHash?: Uint8Array;
                    } & {
                        targetHash?: Uint8Array;
                    } & { [K_154 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                    reactionBody?: ({
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } & {
                        type?: ReactionType;
                        targetCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_155 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                        targetUrl?: string | undefined;
                    } & { [K_156 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                    verificationAddAddressBody?: ({
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & { [K_157 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                    verificationRemoveBody?: ({
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & { [K_158 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                    userDataBody?: ({
                        type?: UserDataType;
                        value?: string;
                    } & {
                        type?: UserDataType;
                        value?: string;
                    } & { [K_159 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                    linkBody?: ({
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & { [K_160 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                    usernameProofBody?: ({
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & { [K_161 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                    frameActionBody?: ({
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_162 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & { [K_163 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                    linkCompactStateBody?: ({
                        type?: string;
                        targetFids?: number[];
                    } & {
                        type?: string;
                        targetFids?: number[] & number[] & { [K_164 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                    } & { [K_165 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
                } & { [K_166 in Exclude<keyof I_1["mergeMessageBody"]["message"]["data"], keyof MessageData>]: never; }) | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & { [K_167 in Exclude<keyof I_1["mergeMessageBody"]["message"], keyof Message>]: never; }) | undefined;
            deletedMessages?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            }[] & ({
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & {
                data?: ({
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } & {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: ({
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } & {
                        embedsDeprecated?: string[] & string[] & { [K_168 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                        mentions?: number[] & number[] & { [K_169 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                        parentCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_170 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[] & number[] & { [K_171 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[] & ({
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        } & {
                            url?: string | undefined;
                            castId?: ({
                                fid?: number;
                                hash?: Uint8Array;
                            } & {
                                fid?: number;
                                hash?: Uint8Array;
                            } & { [K_172 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                        } & { [K_173 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_174 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"]["embeds"], keyof {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[]>]: never; };
                    } & { [K_175 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                    castRemoveBody?: ({
                        targetHash?: Uint8Array;
                    } & {
                        targetHash?: Uint8Array;
                    } & { [K_176 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                    reactionBody?: ({
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } & {
                        type?: ReactionType;
                        targetCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_177 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                        targetUrl?: string | undefined;
                    } & { [K_178 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                    verificationAddAddressBody?: ({
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & { [K_179 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                    verificationRemoveBody?: ({
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & { [K_180 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                    userDataBody?: ({
                        type?: UserDataType;
                        value?: string;
                    } & {
                        type?: UserDataType;
                        value?: string;
                    } & { [K_181 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                    linkBody?: ({
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & { [K_182 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                    usernameProofBody?: ({
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & { [K_183 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                    frameActionBody?: ({
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_184 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & { [K_185 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                    linkCompactStateBody?: ({
                        type?: string;
                        targetFids?: number[];
                    } & {
                        type?: string;
                        targetFids?: number[] & number[] & { [K_186 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                    } & { [K_187 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
                } & { [K_188 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number]["data"], keyof MessageData>]: never; }) | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & { [K_189 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"][number], keyof Message>]: never; })[] & { [K_190 in Exclude<keyof I_1["mergeMessageBody"]["deletedMessages"], keyof {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            }[]>]: never; };
        } & { [K_191 in Exclude<keyof I_1["mergeMessageBody"], keyof MergeMessageBody>]: never; }) | undefined;
        pruneMessageBody?: ({
            message?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
        } & {
            message?: ({
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & {
                data?: ({
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } & {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: ({
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } & {
                        embedsDeprecated?: string[] & string[] & { [K_192 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                        mentions?: number[] & number[] & { [K_193 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                        parentCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_194 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[] & number[] & { [K_195 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[] & ({
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        } & {
                            url?: string | undefined;
                            castId?: ({
                                fid?: number;
                                hash?: Uint8Array;
                            } & {
                                fid?: number;
                                hash?: Uint8Array;
                            } & { [K_196 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                        } & { [K_197 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_198 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["castAddBody"]["embeds"], keyof {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[]>]: never; };
                    } & { [K_199 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                    castRemoveBody?: ({
                        targetHash?: Uint8Array;
                    } & {
                        targetHash?: Uint8Array;
                    } & { [K_200 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                    reactionBody?: ({
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } & {
                        type?: ReactionType;
                        targetCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_201 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                        targetUrl?: string | undefined;
                    } & { [K_202 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                    verificationAddAddressBody?: ({
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & { [K_203 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                    verificationRemoveBody?: ({
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & { [K_204 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                    userDataBody?: ({
                        type?: UserDataType;
                        value?: string;
                    } & {
                        type?: UserDataType;
                        value?: string;
                    } & { [K_205 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                    linkBody?: ({
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & { [K_206 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                    usernameProofBody?: ({
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & { [K_207 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                    frameActionBody?: ({
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_208 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & { [K_209 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                    linkCompactStateBody?: ({
                        type?: string;
                        targetFids?: number[];
                    } & {
                        type?: string;
                        targetFids?: number[] & number[] & { [K_210 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                    } & { [K_211 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
                } & { [K_212 in Exclude<keyof I_1["pruneMessageBody"]["message"]["data"], keyof MessageData>]: never; }) | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & { [K_213 in Exclude<keyof I_1["pruneMessageBody"]["message"], keyof Message>]: never; }) | undefined;
        } & { [K_214 in Exclude<keyof I_1["pruneMessageBody"], "message">]: never; }) | undefined;
        revokeMessageBody?: ({
            message?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
        } & {
            message?: ({
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & {
                data?: ({
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } & {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: ({
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } & {
                        embedsDeprecated?: string[] & string[] & { [K_215 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                        mentions?: number[] & number[] & { [K_216 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                        parentCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_217 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[] & number[] & { [K_218 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[] & ({
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        } & {
                            url?: string | undefined;
                            castId?: ({
                                fid?: number;
                                hash?: Uint8Array;
                            } & {
                                fid?: number;
                                hash?: Uint8Array;
                            } & { [K_219 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                        } & { [K_220 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_221 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["castAddBody"]["embeds"], keyof {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[]>]: never; };
                    } & { [K_222 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                    castRemoveBody?: ({
                        targetHash?: Uint8Array;
                    } & {
                        targetHash?: Uint8Array;
                    } & { [K_223 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                    reactionBody?: ({
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } & {
                        type?: ReactionType;
                        targetCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_224 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                        targetUrl?: string | undefined;
                    } & { [K_225 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                    verificationAddAddressBody?: ({
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & { [K_226 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                    verificationRemoveBody?: ({
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & { [K_227 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                    userDataBody?: ({
                        type?: UserDataType;
                        value?: string;
                    } & {
                        type?: UserDataType;
                        value?: string;
                    } & { [K_228 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                    linkBody?: ({
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & { [K_229 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                    usernameProofBody?: ({
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & { [K_230 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                    frameActionBody?: ({
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_231 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & { [K_232 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                    linkCompactStateBody?: ({
                        type?: string;
                        targetFids?: number[];
                    } & {
                        type?: string;
                        targetFids?: number[] & number[] & { [K_233 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                    } & { [K_234 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
                } & { [K_235 in Exclude<keyof I_1["revokeMessageBody"]["message"]["data"], keyof MessageData>]: never; }) | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & { [K_236 in Exclude<keyof I_1["revokeMessageBody"]["message"], keyof Message>]: never; }) | undefined;
        } & { [K_237 in Exclude<keyof I_1["revokeMessageBody"], "message">]: never; }) | undefined;
        mergeUsernameProofBody?: ({
            usernameProof?: {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } | undefined;
            deletedUsernameProof?: {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } | undefined;
            usernameProofMessage?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
            deletedUsernameProofMessage?: {
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } | undefined;
        } & {
            usernameProof?: ({
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } & {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } & { [K_238 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProof"], keyof UserNameProof>]: never; }) | undefined;
            deletedUsernameProof?: ({
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } & {
                timestamp?: number;
                name?: Uint8Array;
                owner?: Uint8Array;
                signature?: Uint8Array;
                fid?: number;
                type?: UserNameType;
            } & { [K_239 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProof"], keyof UserNameProof>]: never; }) | undefined;
            usernameProofMessage?: ({
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & {
                data?: ({
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } & {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: ({
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } & {
                        embedsDeprecated?: string[] & string[] & { [K_240 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                        mentions?: number[] & number[] & { [K_241 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                        parentCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_242 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[] & number[] & { [K_243 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[] & ({
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        } & {
                            url?: string | undefined;
                            castId?: ({
                                fid?: number;
                                hash?: Uint8Array;
                            } & {
                                fid?: number;
                                hash?: Uint8Array;
                            } & { [K_244 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                        } & { [K_245 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_246 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"]["embeds"], keyof {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[]>]: never; };
                    } & { [K_247 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                    castRemoveBody?: ({
                        targetHash?: Uint8Array;
                    } & {
                        targetHash?: Uint8Array;
                    } & { [K_248 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                    reactionBody?: ({
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } & {
                        type?: ReactionType;
                        targetCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_249 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                        targetUrl?: string | undefined;
                    } & { [K_250 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                    verificationAddAddressBody?: ({
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & { [K_251 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                    verificationRemoveBody?: ({
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & { [K_252 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                    userDataBody?: ({
                        type?: UserDataType;
                        value?: string;
                    } & {
                        type?: UserDataType;
                        value?: string;
                    } & { [K_253 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                    linkBody?: ({
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & { [K_254 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                    usernameProofBody?: ({
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & { [K_255 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                    frameActionBody?: ({
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_256 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & { [K_257 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                    linkCompactStateBody?: ({
                        type?: string;
                        targetFids?: number[];
                    } & {
                        type?: string;
                        targetFids?: number[] & number[] & { [K_258 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                    } & { [K_259 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
                } & { [K_260 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"]["data"], keyof MessageData>]: never; }) | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & { [K_261 in Exclude<keyof I_1["mergeUsernameProofBody"]["usernameProofMessage"], keyof Message>]: never; }) | undefined;
            deletedUsernameProofMessage?: ({
                data?: {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & {
                data?: ({
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: {
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } | undefined;
                    castRemoveBody?: {
                        targetHash?: Uint8Array;
                    } | undefined;
                    reactionBody?: {
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } | undefined;
                    verificationAddAddressBody?: {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } | undefined;
                    verificationRemoveBody?: {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } | undefined;
                    userDataBody?: {
                        type?: UserDataType;
                        value?: string;
                    } | undefined;
                    linkBody?: {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } | undefined;
                    usernameProofBody?: {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } | undefined;
                    frameActionBody?: {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } | undefined;
                    linkCompactStateBody?: {
                        type?: string;
                        targetFids?: number[];
                    } | undefined;
                } & {
                    type?: MessageType;
                    fid?: number;
                    timestamp?: number;
                    network?: FarcasterNetwork;
                    castAddBody?: ({
                        embedsDeprecated?: string[];
                        mentions?: number[];
                        parentCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[];
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[];
                    } & {
                        embedsDeprecated?: string[] & string[] & { [K_262 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                        mentions?: number[] & number[] & { [K_263 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                        parentCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_264 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                        parentUrl?: string | undefined;
                        text?: string;
                        mentionsPositions?: number[] & number[] & { [K_265 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                        embeds?: {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[] & ({
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        } & {
                            url?: string | undefined;
                            castId?: ({
                                fid?: number;
                                hash?: Uint8Array;
                            } & {
                                fid?: number;
                                hash?: Uint8Array;
                            } & { [K_266 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                        } & { [K_267 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_268 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"]["embeds"], keyof {
                            url?: string | undefined;
                            castId?: {
                                fid?: number;
                                hash?: Uint8Array;
                            } | undefined;
                        }[]>]: never; };
                    } & { [K_269 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                    castRemoveBody?: ({
                        targetHash?: Uint8Array;
                    } & {
                        targetHash?: Uint8Array;
                    } & { [K_270 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                    reactionBody?: ({
                        type?: ReactionType;
                        targetCastId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        targetUrl?: string | undefined;
                    } & {
                        type?: ReactionType;
                        targetCastId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_271 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                        targetUrl?: string | undefined;
                    } & { [K_272 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                    verificationAddAddressBody?: ({
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        claimSignature?: Uint8Array;
                        blockHash?: Uint8Array;
                        verificationType?: number;
                        chainId?: number;
                        protocol?: Protocol;
                    } & { [K_273 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                    verificationRemoveBody?: ({
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & {
                        address?: Uint8Array;
                        protocol?: Protocol;
                    } & { [K_274 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                    userDataBody?: ({
                        type?: UserDataType;
                        value?: string;
                    } & {
                        type?: UserDataType;
                        value?: string;
                    } & { [K_275 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                    linkBody?: ({
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & {
                        type?: string;
                        displayTimestamp?: number | undefined;
                        targetFid?: number | undefined;
                    } & { [K_276 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                    usernameProofBody?: ({
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & {
                        timestamp?: number;
                        name?: Uint8Array;
                        owner?: Uint8Array;
                        signature?: Uint8Array;
                        fid?: number;
                        type?: UserNameType;
                    } & { [K_277 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                    frameActionBody?: ({
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & {
                        url?: Uint8Array;
                        buttonIndex?: number;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_278 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                        inputText?: Uint8Array;
                        state?: Uint8Array;
                        transactionId?: Uint8Array;
                        address?: Uint8Array;
                    } & { [K_279 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                    linkCompactStateBody?: ({
                        type?: string;
                        targetFids?: number[];
                    } & {
                        type?: string;
                        targetFids?: number[] & number[] & { [K_280 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                    } & { [K_281 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
                } & { [K_282 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"]["data"], keyof MessageData>]: never; }) | undefined;
                hash?: Uint8Array;
                hashScheme?: HashScheme;
                signature?: Uint8Array;
                signatureScheme?: SignatureScheme;
                signer?: Uint8Array;
                dataBytes?: Uint8Array | undefined;
            } & { [K_283 in Exclude<keyof I_1["mergeUsernameProofBody"]["deletedUsernameProofMessage"], keyof Message>]: never; }) | undefined;
        } & { [K_284 in Exclude<keyof I_1["mergeUsernameProofBody"], keyof MergeUserNameProofBody>]: never; }) | undefined;
        mergeOnChainEventBody?: ({
            onChainEvent?: {
                type?: OnChainEventType;
                chainId?: number;
                blockNumber?: number;
                blockHash?: Uint8Array;
                blockTimestamp?: number;
                transactionHash?: Uint8Array;
                logIndex?: number;
                fid?: number;
                signerEventBody?: {
                    key?: Uint8Array;
                    keyType?: number;
                    eventType?: SignerEventType;
                    metadata?: Uint8Array;
                    metadataType?: number;
                } | undefined;
                signerMigratedEventBody?: {
                    migratedAt?: number;
                } | undefined;
                idRegisterEventBody?: {
                    to?: Uint8Array;
                    eventType?: IdRegisterEventType;
                    from?: Uint8Array;
                    recoveryAddress?: Uint8Array;
                } | undefined;
                storageRentEventBody?: {
                    payer?: Uint8Array;
                    units?: number;
                    expiry?: number;
                } | undefined;
                txIndex?: number;
                version?: number;
            } | undefined;
        } & {
            onChainEvent?: ({
                type?: OnChainEventType;
                chainId?: number;
                blockNumber?: number;
                blockHash?: Uint8Array;
                blockTimestamp?: number;
                transactionHash?: Uint8Array;
                logIndex?: number;
                fid?: number;
                signerEventBody?: {
                    key?: Uint8Array;
                    keyType?: number;
                    eventType?: SignerEventType;
                    metadata?: Uint8Array;
                    metadataType?: number;
                } | undefined;
                signerMigratedEventBody?: {
                    migratedAt?: number;
                } | undefined;
                idRegisterEventBody?: {
                    to?: Uint8Array;
                    eventType?: IdRegisterEventType;
                    from?: Uint8Array;
                    recoveryAddress?: Uint8Array;
                } | undefined;
                storageRentEventBody?: {
                    payer?: Uint8Array;
                    units?: number;
                    expiry?: number;
                } | undefined;
                txIndex?: number;
                version?: number;
            } & {
                type?: OnChainEventType;
                chainId?: number;
                blockNumber?: number;
                blockHash?: Uint8Array;
                blockTimestamp?: number;
                transactionHash?: Uint8Array;
                logIndex?: number;
                fid?: number;
                signerEventBody?: ({
                    key?: Uint8Array;
                    keyType?: number;
                    eventType?: SignerEventType;
                    metadata?: Uint8Array;
                    metadataType?: number;
                } & {
                    key?: Uint8Array;
                    keyType?: number;
                    eventType?: SignerEventType;
                    metadata?: Uint8Array;
                    metadataType?: number;
                } & { [K_285 in Exclude<keyof I_1["mergeOnChainEventBody"]["onChainEvent"]["signerEventBody"], keyof SignerEventBody>]: never; }) | undefined;
                signerMigratedEventBody?: ({
                    migratedAt?: number;
                } & {
                    migratedAt?: number;
                } & { [K_286 in Exclude<keyof I_1["mergeOnChainEventBody"]["onChainEvent"]["signerMigratedEventBody"], "migratedAt">]: never; }) | undefined;
                idRegisterEventBody?: ({
                    to?: Uint8Array;
                    eventType?: IdRegisterEventType;
                    from?: Uint8Array;
                    recoveryAddress?: Uint8Array;
                } & {
                    to?: Uint8Array;
                    eventType?: IdRegisterEventType;
                    from?: Uint8Array;
                    recoveryAddress?: Uint8Array;
                } & { [K_287 in Exclude<keyof I_1["mergeOnChainEventBody"]["onChainEvent"]["idRegisterEventBody"], keyof IdRegisterEventBody>]: never; }) | undefined;
                storageRentEventBody?: ({
                    payer?: Uint8Array;
                    units?: number;
                    expiry?: number;
                } & {
                    payer?: Uint8Array;
                    units?: number;
                    expiry?: number;
                } & { [K_288 in Exclude<keyof I_1["mergeOnChainEventBody"]["onChainEvent"]["storageRentEventBody"], keyof StorageRentEventBody>]: never; }) | undefined;
                txIndex?: number;
                version?: number;
            } & { [K_289 in Exclude<keyof I_1["mergeOnChainEventBody"]["onChainEvent"], keyof OnChainEvent>]: never; }) | undefined;
        } & { [K_290 in Exclude<keyof I_1["mergeOnChainEventBody"], "onChainEvent">]: never; }) | undefined;
    } & { [K_291 in Exclude<keyof I_1, keyof HubEvent>]: never; }>(object: I_1): HubEvent;
};

interface GossipAddressInfo {
    address: string;
    family: number;
    port: number;
    dnsName: string;
}
declare const GossipAddressInfo: {
    encode(message: GossipAddressInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GossipAddressInfo;
    fromJSON(object: any): GossipAddressInfo;
    toJSON(message: GossipAddressInfo): unknown;
    create<I extends {
        address?: string;
        family?: number;
        port?: number;
        dnsName?: string;
    } & {
        address?: string;
        family?: number;
        port?: number;
        dnsName?: string;
    } & { [K in Exclude<keyof I, keyof GossipAddressInfo>]: never; }>(base?: I | undefined): GossipAddressInfo;
    fromPartial<I_1 extends {
        address?: string;
        family?: number;
        port?: number;
        dnsName?: string;
    } & {
        address?: string;
        family?: number;
        port?: number;
        dnsName?: string;
    } & { [K_1 in Exclude<keyof I_1, keyof GossipAddressInfo>]: never; }>(object: I_1): GossipAddressInfo;
};
interface ContactInfoContentBody {
    gossipAddress: GossipAddressInfo | undefined;
    rpcAddress: GossipAddressInfo | undefined;
    excludedHashes: string[];
    count: number;
    hubVersion: string;
    network: FarcasterNetwork;
    appVersion: string;
    timestamp: number;
}
declare const ContactInfoContentBody: {
    encode(message: ContactInfoContentBody, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ContactInfoContentBody;
    fromJSON(object: any): ContactInfoContentBody;
    toJSON(message: ContactInfoContentBody): unknown;
    create<I extends {
        gossipAddress?: {
            address?: string;
            family?: number;
            port?: number;
            dnsName?: string;
        } | undefined;
        rpcAddress?: {
            address?: string;
            family?: number;
            port?: number;
            dnsName?: string;
        } | undefined;
        excludedHashes?: string[];
        count?: number;
        hubVersion?: string;
        network?: FarcasterNetwork;
        appVersion?: string;
        timestamp?: number;
    } & {
        gossipAddress?: ({
            address?: string;
            family?: number;
            port?: number;
            dnsName?: string;
        } & {
            address?: string;
            family?: number;
            port?: number;
            dnsName?: string;
        } & { [K in Exclude<keyof I["gossipAddress"], keyof GossipAddressInfo>]: never; }) | undefined;
        rpcAddress?: ({
            address?: string;
            family?: number;
            port?: number;
            dnsName?: string;
        } & {
            address?: string;
            family?: number;
            port?: number;
            dnsName?: string;
        } & { [K_1 in Exclude<keyof I["rpcAddress"], keyof GossipAddressInfo>]: never; }) | undefined;
        excludedHashes?: string[] & string[] & { [K_2 in Exclude<keyof I["excludedHashes"], keyof string[]>]: never; };
        count?: number;
        hubVersion?: string;
        network?: FarcasterNetwork;
        appVersion?: string;
        timestamp?: number;
    } & { [K_3 in Exclude<keyof I, keyof ContactInfoContentBody>]: never; }>(base?: I | undefined): ContactInfoContentBody;
    fromPartial<I_1 extends {
        gossipAddress?: {
            address?: string;
            family?: number;
            port?: number;
            dnsName?: string;
        } | undefined;
        rpcAddress?: {
            address?: string;
            family?: number;
            port?: number;
            dnsName?: string;
        } | undefined;
        excludedHashes?: string[];
        count?: number;
        hubVersion?: string;
        network?: FarcasterNetwork;
        appVersion?: string;
        timestamp?: number;
    } & {
        gossipAddress?: ({
            address?: string;
            family?: number;
            port?: number;
            dnsName?: string;
        } & {
            address?: string;
            family?: number;
            port?: number;
            dnsName?: string;
        } & { [K_4 in Exclude<keyof I_1["gossipAddress"], keyof GossipAddressInfo>]: never; }) | undefined;
        rpcAddress?: ({
            address?: string;
            family?: number;
            port?: number;
            dnsName?: string;
        } & {
            address?: string;
            family?: number;
            port?: number;
            dnsName?: string;
        } & { [K_5 in Exclude<keyof I_1["rpcAddress"], keyof GossipAddressInfo>]: never; }) | undefined;
        excludedHashes?: string[] & string[] & { [K_6 in Exclude<keyof I_1["excludedHashes"], keyof string[]>]: never; };
        count?: number;
        hubVersion?: string;
        network?: FarcasterNetwork;
        appVersion?: string;
        timestamp?: number;
    } & { [K_7 in Exclude<keyof I_1, keyof ContactInfoContentBody>]: never; }>(object: I_1): ContactInfoContentBody;
};

declare enum StoreType {
    NONE = 0,
    CASTS = 1,
    LINKS = 2,
    REACTIONS = 3,
    USER_DATA = 4,
    VERIFICATIONS = 5,
    USERNAME_PROOFS = 6
}
interface Empty {
}
declare const Empty: {
    encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Empty;
    fromJSON(_: any): Empty;
    toJSON(_: Empty): unknown;
    create<I extends {} & {} & { [K in Exclude<keyof I, never>]: never; }>(base?: I | undefined): Empty;
    fromPartial<I_1 extends {} & {} & { [K_1 in Exclude<keyof I_1, never>]: never; }>(_: I_1): Empty;
};
interface SubscribeRequest {
    eventTypes: HubEventType[];
    fromId?: number | undefined;
    totalShards?: number | undefined;
    shardIndex?: number | undefined;
}
declare const SubscribeRequest: {
    encode(message: SubscribeRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SubscribeRequest;
    fromJSON(object: any): SubscribeRequest;
    toJSON(message: SubscribeRequest): unknown;
    create<I extends {
        eventTypes?: HubEventType[];
        fromId?: number | undefined;
        totalShards?: number | undefined;
        shardIndex?: number | undefined;
    } & {
        eventTypes?: HubEventType[] & HubEventType[] & { [K in Exclude<keyof I["eventTypes"], keyof HubEventType[]>]: never; };
        fromId?: number | undefined;
        totalShards?: number | undefined;
        shardIndex?: number | undefined;
    } & { [K_1 in Exclude<keyof I, keyof SubscribeRequest>]: never; }>(base?: I | undefined): SubscribeRequest;
    fromPartial<I_1 extends {
        eventTypes?: HubEventType[];
        fromId?: number | undefined;
        totalShards?: number | undefined;
        shardIndex?: number | undefined;
    } & {
        eventTypes?: HubEventType[] & HubEventType[] & { [K_2 in Exclude<keyof I_1["eventTypes"], keyof HubEventType[]>]: never; };
        fromId?: number | undefined;
        totalShards?: number | undefined;
        shardIndex?: number | undefined;
    } & { [K_3 in Exclude<keyof I_1, keyof SubscribeRequest>]: never; }>(object: I_1): SubscribeRequest;
};
interface EventRequest {
    id: number;
}
declare const EventRequest: {
    encode(message: EventRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventRequest;
    fromJSON(object: any): EventRequest;
    toJSON(message: EventRequest): unknown;
    create<I extends {
        id?: number;
    } & {
        id?: number;
    } & { [K in Exclude<keyof I, "id">]: never; }>(base?: I | undefined): EventRequest;
    fromPartial<I_1 extends {
        id?: number;
    } & {
        id?: number;
    } & { [K_1 in Exclude<keyof I_1, "id">]: never; }>(object: I_1): EventRequest;
};
interface HubInfoRequest {
    dbStats: boolean;
}
declare const HubInfoRequest: {
    encode(message: HubInfoRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): HubInfoRequest;
    fromJSON(object: any): HubInfoRequest;
    toJSON(message: HubInfoRequest): unknown;
    create<I extends {
        dbStats?: boolean;
    } & {
        dbStats?: boolean;
    } & { [K in Exclude<keyof I, "dbStats">]: never; }>(base?: I | undefined): HubInfoRequest;
    fromPartial<I_1 extends {
        dbStats?: boolean;
    } & {
        dbStats?: boolean;
    } & { [K_1 in Exclude<keyof I_1, "dbStats">]: never; }>(object: I_1): HubInfoRequest;
};
/** Response Types for the Sync RPC Methods */
interface HubInfoResponse {
    version: string;
    isSyncing: boolean;
    nickname: string;
    rootHash: string;
    dbStats: DbStats | undefined;
    peerId: string;
    hubOperatorFid: number;
}
declare const HubInfoResponse: {
    encode(message: HubInfoResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): HubInfoResponse;
    fromJSON(object: any): HubInfoResponse;
    toJSON(message: HubInfoResponse): unknown;
    create<I extends {
        version?: string;
        isSyncing?: boolean;
        nickname?: string;
        rootHash?: string;
        dbStats?: {
            numMessages?: number;
            numFidEvents?: number;
            numFnameEvents?: number;
            approxSize?: number;
        } | undefined;
        peerId?: string;
        hubOperatorFid?: number;
    } & {
        version?: string;
        isSyncing?: boolean;
        nickname?: string;
        rootHash?: string;
        dbStats?: ({
            numMessages?: number;
            numFidEvents?: number;
            numFnameEvents?: number;
            approxSize?: number;
        } & {
            numMessages?: number;
            numFidEvents?: number;
            numFnameEvents?: number;
            approxSize?: number;
        } & { [K in Exclude<keyof I["dbStats"], keyof DbStats>]: never; }) | undefined;
        peerId?: string;
        hubOperatorFid?: number;
    } & { [K_1 in Exclude<keyof I, keyof HubInfoResponse>]: never; }>(base?: I | undefined): HubInfoResponse;
    fromPartial<I_1 extends {
        version?: string;
        isSyncing?: boolean;
        nickname?: string;
        rootHash?: string;
        dbStats?: {
            numMessages?: number;
            numFidEvents?: number;
            numFnameEvents?: number;
            approxSize?: number;
        } | undefined;
        peerId?: string;
        hubOperatorFid?: number;
    } & {
        version?: string;
        isSyncing?: boolean;
        nickname?: string;
        rootHash?: string;
        dbStats?: ({
            numMessages?: number;
            numFidEvents?: number;
            numFnameEvents?: number;
            approxSize?: number;
        } & {
            numMessages?: number;
            numFidEvents?: number;
            numFnameEvents?: number;
            approxSize?: number;
        } & { [K_2 in Exclude<keyof I_1["dbStats"], keyof DbStats>]: never; }) | undefined;
        peerId?: string;
        hubOperatorFid?: number;
    } & { [K_3 in Exclude<keyof I_1, keyof HubInfoResponse>]: never; }>(object: I_1): HubInfoResponse;
};
interface DbStats {
    numMessages: number;
    numFidEvents: number;
    numFnameEvents: number;
    approxSize: number;
}
declare const DbStats: {
    encode(message: DbStats, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DbStats;
    fromJSON(object: any): DbStats;
    toJSON(message: DbStats): unknown;
    create<I extends {
        numMessages?: number;
        numFidEvents?: number;
        numFnameEvents?: number;
        approxSize?: number;
    } & {
        numMessages?: number;
        numFidEvents?: number;
        numFnameEvents?: number;
        approxSize?: number;
    } & { [K in Exclude<keyof I, keyof DbStats>]: never; }>(base?: I | undefined): DbStats;
    fromPartial<I_1 extends {
        numMessages?: number;
        numFidEvents?: number;
        numFnameEvents?: number;
        approxSize?: number;
    } & {
        numMessages?: number;
        numFidEvents?: number;
        numFnameEvents?: number;
        approxSize?: number;
    } & { [K_1 in Exclude<keyof I_1, keyof DbStats>]: never; }>(object: I_1): DbStats;
};
interface SyncStatusRequest {
    peerId?: string | undefined;
}
declare const SyncStatusRequest: {
    encode(message: SyncStatusRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SyncStatusRequest;
    fromJSON(object: any): SyncStatusRequest;
    toJSON(message: SyncStatusRequest): unknown;
    create<I extends {
        peerId?: string | undefined;
    } & {
        peerId?: string | undefined;
    } & { [K in Exclude<keyof I, "peerId">]: never; }>(base?: I | undefined): SyncStatusRequest;
    fromPartial<I_1 extends {
        peerId?: string | undefined;
    } & {
        peerId?: string | undefined;
    } & { [K_1 in Exclude<keyof I_1, "peerId">]: never; }>(object: I_1): SyncStatusRequest;
};
interface SyncStatusResponse {
    isSyncing: boolean;
    syncStatus: SyncStatus[];
    engineStarted: boolean;
}
declare const SyncStatusResponse: {
    encode(message: SyncStatusResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SyncStatusResponse;
    fromJSON(object: any): SyncStatusResponse;
    toJSON(message: SyncStatusResponse): unknown;
    create<I extends {
        isSyncing?: boolean;
        syncStatus?: {
            peerId?: string;
            inSync?: string;
            shouldSync?: boolean;
            divergencePrefix?: string;
            divergenceSecondsAgo?: number;
            theirMessages?: number;
            ourMessages?: number;
            lastBadSync?: number;
            score?: number;
        }[];
        engineStarted?: boolean;
    } & {
        isSyncing?: boolean;
        syncStatus?: {
            peerId?: string;
            inSync?: string;
            shouldSync?: boolean;
            divergencePrefix?: string;
            divergenceSecondsAgo?: number;
            theirMessages?: number;
            ourMessages?: number;
            lastBadSync?: number;
            score?: number;
        }[] & ({
            peerId?: string;
            inSync?: string;
            shouldSync?: boolean;
            divergencePrefix?: string;
            divergenceSecondsAgo?: number;
            theirMessages?: number;
            ourMessages?: number;
            lastBadSync?: number;
            score?: number;
        } & {
            peerId?: string;
            inSync?: string;
            shouldSync?: boolean;
            divergencePrefix?: string;
            divergenceSecondsAgo?: number;
            theirMessages?: number;
            ourMessages?: number;
            lastBadSync?: number;
            score?: number;
        } & { [K in Exclude<keyof I["syncStatus"][number], keyof SyncStatus>]: never; })[] & { [K_1 in Exclude<keyof I["syncStatus"], keyof {
            peerId?: string;
            inSync?: string;
            shouldSync?: boolean;
            divergencePrefix?: string;
            divergenceSecondsAgo?: number;
            theirMessages?: number;
            ourMessages?: number;
            lastBadSync?: number;
            score?: number;
        }[]>]: never; };
        engineStarted?: boolean;
    } & { [K_2 in Exclude<keyof I, keyof SyncStatusResponse>]: never; }>(base?: I | undefined): SyncStatusResponse;
    fromPartial<I_1 extends {
        isSyncing?: boolean;
        syncStatus?: {
            peerId?: string;
            inSync?: string;
            shouldSync?: boolean;
            divergencePrefix?: string;
            divergenceSecondsAgo?: number;
            theirMessages?: number;
            ourMessages?: number;
            lastBadSync?: number;
            score?: number;
        }[];
        engineStarted?: boolean;
    } & {
        isSyncing?: boolean;
        syncStatus?: {
            peerId?: string;
            inSync?: string;
            shouldSync?: boolean;
            divergencePrefix?: string;
            divergenceSecondsAgo?: number;
            theirMessages?: number;
            ourMessages?: number;
            lastBadSync?: number;
            score?: number;
        }[] & ({
            peerId?: string;
            inSync?: string;
            shouldSync?: boolean;
            divergencePrefix?: string;
            divergenceSecondsAgo?: number;
            theirMessages?: number;
            ourMessages?: number;
            lastBadSync?: number;
            score?: number;
        } & {
            peerId?: string;
            inSync?: string;
            shouldSync?: boolean;
            divergencePrefix?: string;
            divergenceSecondsAgo?: number;
            theirMessages?: number;
            ourMessages?: number;
            lastBadSync?: number;
            score?: number;
        } & { [K_3 in Exclude<keyof I_1["syncStatus"][number], keyof SyncStatus>]: never; })[] & { [K_4 in Exclude<keyof I_1["syncStatus"], keyof {
            peerId?: string;
            inSync?: string;
            shouldSync?: boolean;
            divergencePrefix?: string;
            divergenceSecondsAgo?: number;
            theirMessages?: number;
            ourMessages?: number;
            lastBadSync?: number;
            score?: number;
        }[]>]: never; };
        engineStarted?: boolean;
    } & { [K_5 in Exclude<keyof I_1, keyof SyncStatusResponse>]: never; }>(object: I_1): SyncStatusResponse;
};
interface SyncStatus {
    peerId: string;
    inSync: string;
    shouldSync: boolean;
    divergencePrefix: string;
    divergenceSecondsAgo: number;
    theirMessages: number;
    ourMessages: number;
    lastBadSync: number;
    score: number;
}
declare const SyncStatus: {
    encode(message: SyncStatus, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SyncStatus;
    fromJSON(object: any): SyncStatus;
    toJSON(message: SyncStatus): unknown;
    create<I extends {
        peerId?: string;
        inSync?: string;
        shouldSync?: boolean;
        divergencePrefix?: string;
        divergenceSecondsAgo?: number;
        theirMessages?: number;
        ourMessages?: number;
        lastBadSync?: number;
        score?: number;
    } & {
        peerId?: string;
        inSync?: string;
        shouldSync?: boolean;
        divergencePrefix?: string;
        divergenceSecondsAgo?: number;
        theirMessages?: number;
        ourMessages?: number;
        lastBadSync?: number;
        score?: number;
    } & { [K in Exclude<keyof I, keyof SyncStatus>]: never; }>(base?: I | undefined): SyncStatus;
    fromPartial<I_1 extends {
        peerId?: string;
        inSync?: string;
        shouldSync?: boolean;
        divergencePrefix?: string;
        divergenceSecondsAgo?: number;
        theirMessages?: number;
        ourMessages?: number;
        lastBadSync?: number;
        score?: number;
    } & {
        peerId?: string;
        inSync?: string;
        shouldSync?: boolean;
        divergencePrefix?: string;
        divergenceSecondsAgo?: number;
        theirMessages?: number;
        ourMessages?: number;
        lastBadSync?: number;
        score?: number;
    } & { [K_1 in Exclude<keyof I_1, keyof SyncStatus>]: never; }>(object: I_1): SyncStatus;
};
interface TrieNodeMetadataResponse {
    prefix: Uint8Array;
    numMessages: number;
    hash: string;
    children: TrieNodeMetadataResponse[];
}
declare const TrieNodeMetadataResponse: {
    encode(message: TrieNodeMetadataResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TrieNodeMetadataResponse;
    fromJSON(object: any): TrieNodeMetadataResponse;
    toJSON(message: TrieNodeMetadataResponse): unknown;
    create<I extends {
        prefix?: Uint8Array;
        numMessages?: number;
        hash?: string;
        children?: any[];
    } & {
        prefix?: Uint8Array;
        numMessages?: number;
        hash?: string;
        children?: any[] & ({
            prefix?: Uint8Array;
            numMessages?: number;
            hash?: string;
            children?: any[];
        } & {
            prefix?: Uint8Array;
            numMessages?: number;
            hash?: string;
            children?: any[] & ({
                prefix?: Uint8Array;
                numMessages?: number;
                hash?: string;
                children?: any[];
            } & {
                prefix?: Uint8Array;
                numMessages?: number;
                hash?: string;
                children?: any[] & ({
                    prefix?: Uint8Array;
                    numMessages?: number;
                    hash?: string;
                    children?: any[];
                } & {
                    prefix?: Uint8Array;
                    numMessages?: number;
                    hash?: string;
                    children?: any[] & ({
                        prefix?: Uint8Array;
                        numMessages?: number;
                        hash?: string;
                        children?: any[];
                    } & {
                        prefix?: Uint8Array;
                        numMessages?: number;
                        hash?: string;
                        children?: any[] & ({
                            prefix?: Uint8Array;
                            numMessages?: number;
                            hash?: string;
                            children?: any[];
                        } & {
                            prefix?: Uint8Array;
                            numMessages?: number;
                            hash?: string;
                            children?: any[] & ({
                                prefix?: Uint8Array;
                                numMessages?: number;
                                hash?: string;
                                children?: any[];
                            } & {
                                prefix?: Uint8Array;
                                numMessages?: number;
                                hash?: string;
                                children?: any[] & ({
                                    prefix?: Uint8Array;
                                    numMessages?: number;
                                    hash?: string;
                                    children?: any[];
                                } & {
                                    prefix?: Uint8Array;
                                    numMessages?: number;
                                    hash?: string;
                                    children?: any[] & ({
                                        prefix?: Uint8Array;
                                        numMessages?: number;
                                        hash?: string;
                                        children?: any[];
                                    } & {
                                        prefix?: Uint8Array;
                                        numMessages?: number;
                                        hash?: string;
                                        children?: any[] & ({
                                            prefix?: Uint8Array;
                                            numMessages?: number;
                                            hash?: string;
                                            children?: any[];
                                        } & {
                                            prefix?: Uint8Array;
                                            numMessages?: number;
                                            hash?: string;
                                            children?: any[] & ({
                                                prefix?: Uint8Array;
                                                numMessages?: number;
                                                hash?: string;
                                                children?: any[];
                                            } & {
                                                prefix?: Uint8Array;
                                                numMessages?: number;
                                                hash?: string;
                                                children?: any[] & ({
                                                    prefix?: Uint8Array;
                                                    numMessages?: number;
                                                    hash?: string;
                                                    children?: any[];
                                                } & any & { [K in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_1 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                                            } & { [K_2 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_3 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                                        } & { [K_4 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_5 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                                    } & { [K_6 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_7 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                                } & { [K_8 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_9 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                            } & { [K_10 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_11 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                        } & { [K_12 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_13 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                    } & { [K_14 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_15 in Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                } & { [K_16 in Exclude<keyof I["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_17 in Exclude<keyof I["children"][number]["children"][number]["children"], keyof any[]>]: never; };
            } & { [K_18 in Exclude<keyof I["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_19 in Exclude<keyof I["children"][number]["children"], keyof any[]>]: never; };
        } & { [K_20 in Exclude<keyof I["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_21 in Exclude<keyof I["children"], keyof any[]>]: never; };
    } & { [K_22 in Exclude<keyof I, keyof TrieNodeMetadataResponse>]: never; }>(base?: I | undefined): TrieNodeMetadataResponse;
    fromPartial<I_1 extends {
        prefix?: Uint8Array;
        numMessages?: number;
        hash?: string;
        children?: any[];
    } & {
        prefix?: Uint8Array;
        numMessages?: number;
        hash?: string;
        children?: any[] & ({
            prefix?: Uint8Array;
            numMessages?: number;
            hash?: string;
            children?: any[];
        } & {
            prefix?: Uint8Array;
            numMessages?: number;
            hash?: string;
            children?: any[] & ({
                prefix?: Uint8Array;
                numMessages?: number;
                hash?: string;
                children?: any[];
            } & {
                prefix?: Uint8Array;
                numMessages?: number;
                hash?: string;
                children?: any[] & ({
                    prefix?: Uint8Array;
                    numMessages?: number;
                    hash?: string;
                    children?: any[];
                } & {
                    prefix?: Uint8Array;
                    numMessages?: number;
                    hash?: string;
                    children?: any[] & ({
                        prefix?: Uint8Array;
                        numMessages?: number;
                        hash?: string;
                        children?: any[];
                    } & {
                        prefix?: Uint8Array;
                        numMessages?: number;
                        hash?: string;
                        children?: any[] & ({
                            prefix?: Uint8Array;
                            numMessages?: number;
                            hash?: string;
                            children?: any[];
                        } & {
                            prefix?: Uint8Array;
                            numMessages?: number;
                            hash?: string;
                            children?: any[] & ({
                                prefix?: Uint8Array;
                                numMessages?: number;
                                hash?: string;
                                children?: any[];
                            } & {
                                prefix?: Uint8Array;
                                numMessages?: number;
                                hash?: string;
                                children?: any[] & ({
                                    prefix?: Uint8Array;
                                    numMessages?: number;
                                    hash?: string;
                                    children?: any[];
                                } & {
                                    prefix?: Uint8Array;
                                    numMessages?: number;
                                    hash?: string;
                                    children?: any[] & ({
                                        prefix?: Uint8Array;
                                        numMessages?: number;
                                        hash?: string;
                                        children?: any[];
                                    } & {
                                        prefix?: Uint8Array;
                                        numMessages?: number;
                                        hash?: string;
                                        children?: any[] & ({
                                            prefix?: Uint8Array;
                                            numMessages?: number;
                                            hash?: string;
                                            children?: any[];
                                        } & {
                                            prefix?: Uint8Array;
                                            numMessages?: number;
                                            hash?: string;
                                            children?: any[] & ({
                                                prefix?: Uint8Array;
                                                numMessages?: number;
                                                hash?: string;
                                                children?: any[];
                                            } & {
                                                prefix?: Uint8Array;
                                                numMessages?: number;
                                                hash?: string;
                                                children?: any[] & ({
                                                    prefix?: Uint8Array;
                                                    numMessages?: number;
                                                    hash?: string;
                                                    children?: any[];
                                                } & any & { [K_23 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_24 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                                            } & { [K_25 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_26 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                                        } & { [K_27 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_28 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                                    } & { [K_29 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_30 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                                } & { [K_31 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_32 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                            } & { [K_33 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_34 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                        } & { [K_35 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_36 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                    } & { [K_37 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_38 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number]["children"], keyof any[]>]: never; };
                } & { [K_39 in Exclude<keyof I_1["children"][number]["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_40 in Exclude<keyof I_1["children"][number]["children"][number]["children"], keyof any[]>]: never; };
            } & { [K_41 in Exclude<keyof I_1["children"][number]["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_42 in Exclude<keyof I_1["children"][number]["children"], keyof any[]>]: never; };
        } & { [K_43 in Exclude<keyof I_1["children"][number], keyof TrieNodeMetadataResponse>]: never; })[] & { [K_44 in Exclude<keyof I_1["children"], keyof any[]>]: never; };
    } & { [K_45 in Exclude<keyof I_1, keyof TrieNodeMetadataResponse>]: never; }>(object: I_1): TrieNodeMetadataResponse;
};
interface TrieNodeSnapshotResponse {
    prefix: Uint8Array;
    excludedHashes: string[];
    numMessages: number;
    rootHash: string;
}
declare const TrieNodeSnapshotResponse: {
    encode(message: TrieNodeSnapshotResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TrieNodeSnapshotResponse;
    fromJSON(object: any): TrieNodeSnapshotResponse;
    toJSON(message: TrieNodeSnapshotResponse): unknown;
    create<I extends {
        prefix?: Uint8Array;
        excludedHashes?: string[];
        numMessages?: number;
        rootHash?: string;
    } & {
        prefix?: Uint8Array;
        excludedHashes?: string[] & string[] & { [K in Exclude<keyof I["excludedHashes"], keyof string[]>]: never; };
        numMessages?: number;
        rootHash?: string;
    } & { [K_1 in Exclude<keyof I, keyof TrieNodeSnapshotResponse>]: never; }>(base?: I | undefined): TrieNodeSnapshotResponse;
    fromPartial<I_1 extends {
        prefix?: Uint8Array;
        excludedHashes?: string[];
        numMessages?: number;
        rootHash?: string;
    } & {
        prefix?: Uint8Array;
        excludedHashes?: string[] & string[] & { [K_2 in Exclude<keyof I_1["excludedHashes"], keyof string[]>]: never; };
        numMessages?: number;
        rootHash?: string;
    } & { [K_3 in Exclude<keyof I_1, keyof TrieNodeSnapshotResponse>]: never; }>(object: I_1): TrieNodeSnapshotResponse;
};
interface TrieNodePrefix {
    prefix: Uint8Array;
}
declare const TrieNodePrefix: {
    encode(message: TrieNodePrefix, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TrieNodePrefix;
    fromJSON(object: any): TrieNodePrefix;
    toJSON(message: TrieNodePrefix): unknown;
    create<I extends {
        prefix?: Uint8Array;
    } & {
        prefix?: Uint8Array;
    } & { [K in Exclude<keyof I, "prefix">]: never; }>(base?: I | undefined): TrieNodePrefix;
    fromPartial<I_1 extends {
        prefix?: Uint8Array;
    } & {
        prefix?: Uint8Array;
    } & { [K_1 in Exclude<keyof I_1, "prefix">]: never; }>(object: I_1): TrieNodePrefix;
};
interface SyncIds {
    syncIds: Uint8Array[];
}
declare const SyncIds: {
    encode(message: SyncIds, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SyncIds;
    fromJSON(object: any): SyncIds;
    toJSON(message: SyncIds): unknown;
    create<I extends {
        syncIds?: Uint8Array[];
    } & {
        syncIds?: Uint8Array[] & Uint8Array[] & { [K in Exclude<keyof I["syncIds"], keyof Uint8Array[]>]: never; };
    } & { [K_1 in Exclude<keyof I, "syncIds">]: never; }>(base?: I | undefined): SyncIds;
    fromPartial<I_1 extends {
        syncIds?: Uint8Array[];
    } & {
        syncIds?: Uint8Array[] & Uint8Array[] & { [K_2 in Exclude<keyof I_1["syncIds"], keyof Uint8Array[]>]: never; };
    } & { [K_3 in Exclude<keyof I_1, "syncIds">]: never; }>(object: I_1): SyncIds;
};
interface FidRequest {
    fid: number;
    pageSize?: number | undefined;
    pageToken?: Uint8Array | undefined;
    reverse?: boolean | undefined;
}
declare const FidRequest: {
    encode(message: FidRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FidRequest;
    fromJSON(object: any): FidRequest;
    toJSON(message: FidRequest): unknown;
    create<I extends {
        fid?: number;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        fid?: number;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K in Exclude<keyof I, keyof FidRequest>]: never; }>(base?: I | undefined): FidRequest;
    fromPartial<I_1 extends {
        fid?: number;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        fid?: number;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof FidRequest>]: never; }>(object: I_1): FidRequest;
};
interface FidsRequest {
    pageSize?: number | undefined;
    pageToken?: Uint8Array | undefined;
    reverse?: boolean | undefined;
}
declare const FidsRequest: {
    encode(message: FidsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FidsRequest;
    fromJSON(object: any): FidsRequest;
    toJSON(message: FidsRequest): unknown;
    create<I extends {
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K in Exclude<keyof I, keyof FidsRequest>]: never; }>(base?: I | undefined): FidsRequest;
    fromPartial<I_1 extends {
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof FidsRequest>]: never; }>(object: I_1): FidsRequest;
};
interface FidsResponse {
    fids: number[];
    nextPageToken?: Uint8Array | undefined;
}
declare const FidsResponse: {
    encode(message: FidsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): FidsResponse;
    fromJSON(object: any): FidsResponse;
    toJSON(message: FidsResponse): unknown;
    create<I extends {
        fids?: number[];
        nextPageToken?: Uint8Array | undefined;
    } & {
        fids?: number[] & number[] & { [K in Exclude<keyof I["fids"], keyof number[]>]: never; };
        nextPageToken?: Uint8Array | undefined;
    } & { [K_1 in Exclude<keyof I, keyof FidsResponse>]: never; }>(base?: I | undefined): FidsResponse;
    fromPartial<I_1 extends {
        fids?: number[];
        nextPageToken?: Uint8Array | undefined;
    } & {
        fids?: number[] & number[] & { [K_2 in Exclude<keyof I_1["fids"], keyof number[]>]: never; };
        nextPageToken?: Uint8Array | undefined;
    } & { [K_3 in Exclude<keyof I_1, keyof FidsResponse>]: never; }>(object: I_1): FidsResponse;
};
interface MessagesResponse {
    messages: Message[];
    nextPageToken?: Uint8Array | undefined;
}
declare const MessagesResponse: {
    encode(message: MessagesResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MessagesResponse;
    fromJSON(object: any): MessagesResponse;
    toJSON(message: MessagesResponse): unknown;
    create<I extends {
        messages?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        }[];
        nextPageToken?: Uint8Array | undefined;
    } & {
        messages?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        }[] & ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K in Exclude<keyof I["messages"][number]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_1 in Exclude<keyof I["messages"][number]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_2 in Exclude<keyof I["messages"][number]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_3 in Exclude<keyof I["messages"][number]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_4 in Exclude<keyof I["messages"][number]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_5 in Exclude<keyof I["messages"][number]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_6 in Exclude<keyof I["messages"][number]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_7 in Exclude<keyof I["messages"][number]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_8 in Exclude<keyof I["messages"][number]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_9 in Exclude<keyof I["messages"][number]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_10 in Exclude<keyof I["messages"][number]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_11 in Exclude<keyof I["messages"][number]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_12 in Exclude<keyof I["messages"][number]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_13 in Exclude<keyof I["messages"][number]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_14 in Exclude<keyof I["messages"][number]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_15 in Exclude<keyof I["messages"][number]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_16 in Exclude<keyof I["messages"][number]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_17 in Exclude<keyof I["messages"][number]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_18 in Exclude<keyof I["messages"][number]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_19 in Exclude<keyof I["messages"][number]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_20 in Exclude<keyof I["messages"][number]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_21 in Exclude<keyof I["messages"][number], keyof Message>]: never; })[] & { [K_22 in Exclude<keyof I["messages"], keyof {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        }[]>]: never; };
        nextPageToken?: Uint8Array | undefined;
    } & { [K_23 in Exclude<keyof I, keyof MessagesResponse>]: never; }>(base?: I | undefined): MessagesResponse;
    fromPartial<I_1 extends {
        messages?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        }[];
        nextPageToken?: Uint8Array | undefined;
    } & {
        messages?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        }[] & ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K_24 in Exclude<keyof I_1["messages"][number]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_25 in Exclude<keyof I_1["messages"][number]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_26 in Exclude<keyof I_1["messages"][number]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_27 in Exclude<keyof I_1["messages"][number]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_28 in Exclude<keyof I_1["messages"][number]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_29 in Exclude<keyof I_1["messages"][number]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_30 in Exclude<keyof I_1["messages"][number]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_31 in Exclude<keyof I_1["messages"][number]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_32 in Exclude<keyof I_1["messages"][number]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_33 in Exclude<keyof I_1["messages"][number]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_34 in Exclude<keyof I_1["messages"][number]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_35 in Exclude<keyof I_1["messages"][number]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_36 in Exclude<keyof I_1["messages"][number]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_37 in Exclude<keyof I_1["messages"][number]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_38 in Exclude<keyof I_1["messages"][number]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_39 in Exclude<keyof I_1["messages"][number]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_40 in Exclude<keyof I_1["messages"][number]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_41 in Exclude<keyof I_1["messages"][number]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_42 in Exclude<keyof I_1["messages"][number]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_43 in Exclude<keyof I_1["messages"][number]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_44 in Exclude<keyof I_1["messages"][number]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_45 in Exclude<keyof I_1["messages"][number], keyof Message>]: never; })[] & { [K_46 in Exclude<keyof I_1["messages"], keyof {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        }[]>]: never; };
        nextPageToken?: Uint8Array | undefined;
    } & { [K_47 in Exclude<keyof I_1, keyof MessagesResponse>]: never; }>(object: I_1): MessagesResponse;
};
interface CastsByParentRequest {
    parentCastId?: CastId | undefined;
    parentUrl?: string | undefined;
    pageSize?: number | undefined;
    pageToken?: Uint8Array | undefined;
    reverse?: boolean | undefined;
}
declare const CastsByParentRequest: {
    encode(message: CastsByParentRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CastsByParentRequest;
    fromJSON(object: any): CastsByParentRequest;
    toJSON(message: CastsByParentRequest): unknown;
    create<I extends {
        parentCastId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
        parentUrl?: string | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        parentCastId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K in Exclude<keyof I["parentCastId"], keyof CastId>]: never; }) | undefined;
        parentUrl?: string | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K_1 in Exclude<keyof I, keyof CastsByParentRequest>]: never; }>(base?: I | undefined): CastsByParentRequest;
    fromPartial<I_1 extends {
        parentCastId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
        parentUrl?: string | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        parentCastId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K_2 in Exclude<keyof I_1["parentCastId"], keyof CastId>]: never; }) | undefined;
        parentUrl?: string | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K_3 in Exclude<keyof I_1, keyof CastsByParentRequest>]: never; }>(object: I_1): CastsByParentRequest;
};
interface ReactionRequest {
    fid: number;
    reactionType: ReactionType;
    targetCastId?: CastId | undefined;
    targetUrl?: string | undefined;
}
declare const ReactionRequest: {
    encode(message: ReactionRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ReactionRequest;
    fromJSON(object: any): ReactionRequest;
    toJSON(message: ReactionRequest): unknown;
    create<I extends {
        fid?: number;
        reactionType?: ReactionType;
        targetCastId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
        targetUrl?: string | undefined;
    } & {
        fid?: number;
        reactionType?: ReactionType;
        targetCastId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K in Exclude<keyof I["targetCastId"], keyof CastId>]: never; }) | undefined;
        targetUrl?: string | undefined;
    } & { [K_1 in Exclude<keyof I, keyof ReactionRequest>]: never; }>(base?: I | undefined): ReactionRequest;
    fromPartial<I_1 extends {
        fid?: number;
        reactionType?: ReactionType;
        targetCastId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
        targetUrl?: string | undefined;
    } & {
        fid?: number;
        reactionType?: ReactionType;
        targetCastId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K_2 in Exclude<keyof I_1["targetCastId"], keyof CastId>]: never; }) | undefined;
        targetUrl?: string | undefined;
    } & { [K_3 in Exclude<keyof I_1, keyof ReactionRequest>]: never; }>(object: I_1): ReactionRequest;
};
interface ReactionsByFidRequest {
    fid: number;
    reactionType?: ReactionType | undefined;
    pageSize?: number | undefined;
    pageToken?: Uint8Array | undefined;
    reverse?: boolean | undefined;
}
declare const ReactionsByFidRequest: {
    encode(message: ReactionsByFidRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ReactionsByFidRequest;
    fromJSON(object: any): ReactionsByFidRequest;
    toJSON(message: ReactionsByFidRequest): unknown;
    create<I extends {
        fid?: number;
        reactionType?: ReactionType | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        fid?: number;
        reactionType?: ReactionType | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K in Exclude<keyof I, keyof ReactionsByFidRequest>]: never; }>(base?: I | undefined): ReactionsByFidRequest;
    fromPartial<I_1 extends {
        fid?: number;
        reactionType?: ReactionType | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        fid?: number;
        reactionType?: ReactionType | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof ReactionsByFidRequest>]: never; }>(object: I_1): ReactionsByFidRequest;
};
interface ReactionsByTargetRequest {
    targetCastId?: CastId | undefined;
    targetUrl?: string | undefined;
    reactionType?: ReactionType | undefined;
    pageSize?: number | undefined;
    pageToken?: Uint8Array | undefined;
    reverse?: boolean | undefined;
}
declare const ReactionsByTargetRequest: {
    encode(message: ReactionsByTargetRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ReactionsByTargetRequest;
    fromJSON(object: any): ReactionsByTargetRequest;
    toJSON(message: ReactionsByTargetRequest): unknown;
    create<I extends {
        targetCastId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
        targetUrl?: string | undefined;
        reactionType?: ReactionType | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        targetCastId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K in Exclude<keyof I["targetCastId"], keyof CastId>]: never; }) | undefined;
        targetUrl?: string | undefined;
        reactionType?: ReactionType | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K_1 in Exclude<keyof I, keyof ReactionsByTargetRequest>]: never; }>(base?: I | undefined): ReactionsByTargetRequest;
    fromPartial<I_1 extends {
        targetCastId?: {
            fid?: number;
            hash?: Uint8Array;
        } | undefined;
        targetUrl?: string | undefined;
        reactionType?: ReactionType | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        targetCastId?: ({
            fid?: number;
            hash?: Uint8Array;
        } & {
            fid?: number;
            hash?: Uint8Array;
        } & { [K_2 in Exclude<keyof I_1["targetCastId"], keyof CastId>]: never; }) | undefined;
        targetUrl?: string | undefined;
        reactionType?: ReactionType | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K_3 in Exclude<keyof I_1, keyof ReactionsByTargetRequest>]: never; }>(object: I_1): ReactionsByTargetRequest;
};
interface UserDataRequest {
    fid: number;
    userDataType: UserDataType;
}
declare const UserDataRequest: {
    encode(message: UserDataRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UserDataRequest;
    fromJSON(object: any): UserDataRequest;
    toJSON(message: UserDataRequest): unknown;
    create<I extends {
        fid?: number;
        userDataType?: UserDataType;
    } & {
        fid?: number;
        userDataType?: UserDataType;
    } & { [K in Exclude<keyof I, keyof UserDataRequest>]: never; }>(base?: I | undefined): UserDataRequest;
    fromPartial<I_1 extends {
        fid?: number;
        userDataType?: UserDataType;
    } & {
        fid?: number;
        userDataType?: UserDataType;
    } & { [K_1 in Exclude<keyof I_1, keyof UserDataRequest>]: never; }>(object: I_1): UserDataRequest;
};
interface OnChainEventRequest {
    fid: number;
    eventType: OnChainEventType;
    pageSize?: number | undefined;
    pageToken?: Uint8Array | undefined;
    reverse?: boolean | undefined;
}
declare const OnChainEventRequest: {
    encode(message: OnChainEventRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): OnChainEventRequest;
    fromJSON(object: any): OnChainEventRequest;
    toJSON(message: OnChainEventRequest): unknown;
    create<I extends {
        fid?: number;
        eventType?: OnChainEventType;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        fid?: number;
        eventType?: OnChainEventType;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K in Exclude<keyof I, keyof OnChainEventRequest>]: never; }>(base?: I | undefined): OnChainEventRequest;
    fromPartial<I_1 extends {
        fid?: number;
        eventType?: OnChainEventType;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        fid?: number;
        eventType?: OnChainEventType;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof OnChainEventRequest>]: never; }>(object: I_1): OnChainEventRequest;
};
interface OnChainEventResponse {
    events: OnChainEvent[];
    nextPageToken?: Uint8Array | undefined;
}
declare const OnChainEventResponse: {
    encode(message: OnChainEventResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): OnChainEventResponse;
    fromJSON(object: any): OnChainEventResponse;
    toJSON(message: OnChainEventResponse): unknown;
    create<I extends {
        events?: {
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } | undefined;
            signerMigratedEventBody?: {
                migratedAt?: number;
            } | undefined;
            idRegisterEventBody?: {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } | undefined;
            storageRentEventBody?: {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } | undefined;
            txIndex?: number;
            version?: number;
        }[];
        nextPageToken?: Uint8Array | undefined;
    } & {
        events?: {
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } | undefined;
            signerMigratedEventBody?: {
                migratedAt?: number;
            } | undefined;
            idRegisterEventBody?: {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } | undefined;
            storageRentEventBody?: {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } | undefined;
            txIndex?: number;
            version?: number;
        }[] & ({
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } | undefined;
            signerMigratedEventBody?: {
                migratedAt?: number;
            } | undefined;
            idRegisterEventBody?: {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } | undefined;
            storageRentEventBody?: {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } | undefined;
            txIndex?: number;
            version?: number;
        } & {
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: ({
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } & {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } & { [K in Exclude<keyof I["events"][number]["signerEventBody"], keyof SignerEventBody>]: never; }) | undefined;
            signerMigratedEventBody?: ({
                migratedAt?: number;
            } & {
                migratedAt?: number;
            } & { [K_1 in Exclude<keyof I["events"][number]["signerMigratedEventBody"], "migratedAt">]: never; }) | undefined;
            idRegisterEventBody?: ({
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } & {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } & { [K_2 in Exclude<keyof I["events"][number]["idRegisterEventBody"], keyof IdRegisterEventBody>]: never; }) | undefined;
            storageRentEventBody?: ({
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } & {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } & { [K_3 in Exclude<keyof I["events"][number]["storageRentEventBody"], keyof StorageRentEventBody>]: never; }) | undefined;
            txIndex?: number;
            version?: number;
        } & { [K_4 in Exclude<keyof I["events"][number], keyof OnChainEvent>]: never; })[] & { [K_5 in Exclude<keyof I["events"], keyof {
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } | undefined;
            signerMigratedEventBody?: {
                migratedAt?: number;
            } | undefined;
            idRegisterEventBody?: {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } | undefined;
            storageRentEventBody?: {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } | undefined;
            txIndex?: number;
            version?: number;
        }[]>]: never; };
        nextPageToken?: Uint8Array | undefined;
    } & { [K_6 in Exclude<keyof I, keyof OnChainEventResponse>]: never; }>(base?: I | undefined): OnChainEventResponse;
    fromPartial<I_1 extends {
        events?: {
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } | undefined;
            signerMigratedEventBody?: {
                migratedAt?: number;
            } | undefined;
            idRegisterEventBody?: {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } | undefined;
            storageRentEventBody?: {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } | undefined;
            txIndex?: number;
            version?: number;
        }[];
        nextPageToken?: Uint8Array | undefined;
    } & {
        events?: {
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } | undefined;
            signerMigratedEventBody?: {
                migratedAt?: number;
            } | undefined;
            idRegisterEventBody?: {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } | undefined;
            storageRentEventBody?: {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } | undefined;
            txIndex?: number;
            version?: number;
        }[] & ({
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } | undefined;
            signerMigratedEventBody?: {
                migratedAt?: number;
            } | undefined;
            idRegisterEventBody?: {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } | undefined;
            storageRentEventBody?: {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } | undefined;
            txIndex?: number;
            version?: number;
        } & {
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: ({
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } & {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } & { [K_7 in Exclude<keyof I_1["events"][number]["signerEventBody"], keyof SignerEventBody>]: never; }) | undefined;
            signerMigratedEventBody?: ({
                migratedAt?: number;
            } & {
                migratedAt?: number;
            } & { [K_8 in Exclude<keyof I_1["events"][number]["signerMigratedEventBody"], "migratedAt">]: never; }) | undefined;
            idRegisterEventBody?: ({
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } & {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } & { [K_9 in Exclude<keyof I_1["events"][number]["idRegisterEventBody"], keyof IdRegisterEventBody>]: never; }) | undefined;
            storageRentEventBody?: ({
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } & {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } & { [K_10 in Exclude<keyof I_1["events"][number]["storageRentEventBody"], keyof StorageRentEventBody>]: never; }) | undefined;
            txIndex?: number;
            version?: number;
        } & { [K_11 in Exclude<keyof I_1["events"][number], keyof OnChainEvent>]: never; })[] & { [K_12 in Exclude<keyof I_1["events"], keyof {
            type?: OnChainEventType;
            chainId?: number;
            blockNumber?: number;
            blockHash?: Uint8Array;
            blockTimestamp?: number;
            transactionHash?: Uint8Array;
            logIndex?: number;
            fid?: number;
            signerEventBody?: {
                key?: Uint8Array;
                keyType?: number;
                eventType?: SignerEventType;
                metadata?: Uint8Array;
                metadataType?: number;
            } | undefined;
            signerMigratedEventBody?: {
                migratedAt?: number;
            } | undefined;
            idRegisterEventBody?: {
                to?: Uint8Array;
                eventType?: IdRegisterEventType;
                from?: Uint8Array;
                recoveryAddress?: Uint8Array;
            } | undefined;
            storageRentEventBody?: {
                payer?: Uint8Array;
                units?: number;
                expiry?: number;
            } | undefined;
            txIndex?: number;
            version?: number;
        }[]>]: never; };
        nextPageToken?: Uint8Array | undefined;
    } & { [K_13 in Exclude<keyof I_1, keyof OnChainEventResponse>]: never; }>(object: I_1): OnChainEventResponse;
};
interface StorageLimitsResponse {
    limits: StorageLimit[];
    units: number;
}
declare const StorageLimitsResponse: {
    encode(message: StorageLimitsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): StorageLimitsResponse;
    fromJSON(object: any): StorageLimitsResponse;
    toJSON(message: StorageLimitsResponse): unknown;
    create<I extends {
        limits?: {
            storeType?: StoreType;
            name?: string;
            limit?: number;
            used?: number;
            earliestTimestamp?: number;
            earliestHash?: Uint8Array;
        }[];
        units?: number;
    } & {
        limits?: {
            storeType?: StoreType;
            name?: string;
            limit?: number;
            used?: number;
            earliestTimestamp?: number;
            earliestHash?: Uint8Array;
        }[] & ({
            storeType?: StoreType;
            name?: string;
            limit?: number;
            used?: number;
            earliestTimestamp?: number;
            earliestHash?: Uint8Array;
        } & {
            storeType?: StoreType;
            name?: string;
            limit?: number;
            used?: number;
            earliestTimestamp?: number;
            earliestHash?: Uint8Array;
        } & { [K in Exclude<keyof I["limits"][number], keyof StorageLimit>]: never; })[] & { [K_1 in Exclude<keyof I["limits"], keyof {
            storeType?: StoreType;
            name?: string;
            limit?: number;
            used?: number;
            earliestTimestamp?: number;
            earliestHash?: Uint8Array;
        }[]>]: never; };
        units?: number;
    } & { [K_2 in Exclude<keyof I, keyof StorageLimitsResponse>]: never; }>(base?: I | undefined): StorageLimitsResponse;
    fromPartial<I_1 extends {
        limits?: {
            storeType?: StoreType;
            name?: string;
            limit?: number;
            used?: number;
            earliestTimestamp?: number;
            earliestHash?: Uint8Array;
        }[];
        units?: number;
    } & {
        limits?: {
            storeType?: StoreType;
            name?: string;
            limit?: number;
            used?: number;
            earliestTimestamp?: number;
            earliestHash?: Uint8Array;
        }[] & ({
            storeType?: StoreType;
            name?: string;
            limit?: number;
            used?: number;
            earliestTimestamp?: number;
            earliestHash?: Uint8Array;
        } & {
            storeType?: StoreType;
            name?: string;
            limit?: number;
            used?: number;
            earliestTimestamp?: number;
            earliestHash?: Uint8Array;
        } & { [K_3 in Exclude<keyof I_1["limits"][number], keyof StorageLimit>]: never; })[] & { [K_4 in Exclude<keyof I_1["limits"], keyof {
            storeType?: StoreType;
            name?: string;
            limit?: number;
            used?: number;
            earliestTimestamp?: number;
            earliestHash?: Uint8Array;
        }[]>]: never; };
        units?: number;
    } & { [K_5 in Exclude<keyof I_1, keyof StorageLimitsResponse>]: never; }>(object: I_1): StorageLimitsResponse;
};
interface StorageLimit {
    storeType: StoreType;
    name: string;
    limit: number;
    used: number;
    earliestTimestamp: number;
    earliestHash: Uint8Array;
}
declare const StorageLimit: {
    encode(message: StorageLimit, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): StorageLimit;
    fromJSON(object: any): StorageLimit;
    toJSON(message: StorageLimit): unknown;
    create<I extends {
        storeType?: StoreType;
        name?: string;
        limit?: number;
        used?: number;
        earliestTimestamp?: number;
        earliestHash?: Uint8Array;
    } & {
        storeType?: StoreType;
        name?: string;
        limit?: number;
        used?: number;
        earliestTimestamp?: number;
        earliestHash?: Uint8Array;
    } & { [K in Exclude<keyof I, keyof StorageLimit>]: never; }>(base?: I | undefined): StorageLimit;
    fromPartial<I_1 extends {
        storeType?: StoreType;
        name?: string;
        limit?: number;
        used?: number;
        earliestTimestamp?: number;
        earliestHash?: Uint8Array;
    } & {
        storeType?: StoreType;
        name?: string;
        limit?: number;
        used?: number;
        earliestTimestamp?: number;
        earliestHash?: Uint8Array;
    } & { [K_1 in Exclude<keyof I_1, keyof StorageLimit>]: never; }>(object: I_1): StorageLimit;
};
interface UsernameProofRequest {
    name: Uint8Array;
}
declare const UsernameProofRequest: {
    encode(message: UsernameProofRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UsernameProofRequest;
    fromJSON(object: any): UsernameProofRequest;
    toJSON(message: UsernameProofRequest): unknown;
    create<I extends {
        name?: Uint8Array;
    } & {
        name?: Uint8Array;
    } & { [K in Exclude<keyof I, "name">]: never; }>(base?: I | undefined): UsernameProofRequest;
    fromPartial<I_1 extends {
        name?: Uint8Array;
    } & {
        name?: Uint8Array;
    } & { [K_1 in Exclude<keyof I_1, "name">]: never; }>(object: I_1): UsernameProofRequest;
};
interface UsernameProofsResponse {
    proofs: UserNameProof[];
}
declare const UsernameProofsResponse: {
    encode(message: UsernameProofsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): UsernameProofsResponse;
    fromJSON(object: any): UsernameProofsResponse;
    toJSON(message: UsernameProofsResponse): unknown;
    create<I extends {
        proofs?: {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        }[];
    } & {
        proofs?: {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        }[] & ({
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & { [K in Exclude<keyof I["proofs"][number], keyof UserNameProof>]: never; })[] & { [K_1 in Exclude<keyof I["proofs"], keyof {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        }[]>]: never; };
    } & { [K_2 in Exclude<keyof I, "proofs">]: never; }>(base?: I | undefined): UsernameProofsResponse;
    fromPartial<I_1 extends {
        proofs?: {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        }[];
    } & {
        proofs?: {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        }[] & ({
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        } & { [K_3 in Exclude<keyof I_1["proofs"][number], keyof UserNameProof>]: never; })[] & { [K_4 in Exclude<keyof I_1["proofs"], keyof {
            timestamp?: number;
            name?: Uint8Array;
            owner?: Uint8Array;
            signature?: Uint8Array;
            fid?: number;
            type?: UserNameType;
        }[]>]: never; };
    } & { [K_5 in Exclude<keyof I_1, "proofs">]: never; }>(object: I_1): UsernameProofsResponse;
};
interface VerificationRequest {
    fid: number;
    address: Uint8Array;
}
declare const VerificationRequest: {
    encode(message: VerificationRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): VerificationRequest;
    fromJSON(object: any): VerificationRequest;
    toJSON(message: VerificationRequest): unknown;
    create<I extends {
        fid?: number;
        address?: Uint8Array;
    } & {
        fid?: number;
        address?: Uint8Array;
    } & { [K in Exclude<keyof I, keyof VerificationRequest>]: never; }>(base?: I | undefined): VerificationRequest;
    fromPartial<I_1 extends {
        fid?: number;
        address?: Uint8Array;
    } & {
        fid?: number;
        address?: Uint8Array;
    } & { [K_1 in Exclude<keyof I_1, keyof VerificationRequest>]: never; }>(object: I_1): VerificationRequest;
};
interface SignerRequest {
    fid: number;
    signer: Uint8Array;
}
declare const SignerRequest: {
    encode(message: SignerRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SignerRequest;
    fromJSON(object: any): SignerRequest;
    toJSON(message: SignerRequest): unknown;
    create<I extends {
        fid?: number;
        signer?: Uint8Array;
    } & {
        fid?: number;
        signer?: Uint8Array;
    } & { [K in Exclude<keyof I, keyof SignerRequest>]: never; }>(base?: I | undefined): SignerRequest;
    fromPartial<I_1 extends {
        fid?: number;
        signer?: Uint8Array;
    } & {
        fid?: number;
        signer?: Uint8Array;
    } & { [K_1 in Exclude<keyof I_1, keyof SignerRequest>]: never; }>(object: I_1): SignerRequest;
};
interface LinkRequest {
    fid: number;
    linkType: string;
    targetFid?: number | undefined;
}
declare const LinkRequest: {
    encode(message: LinkRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): LinkRequest;
    fromJSON(object: any): LinkRequest;
    toJSON(message: LinkRequest): unknown;
    create<I extends {
        fid?: number;
        linkType?: string;
        targetFid?: number | undefined;
    } & {
        fid?: number;
        linkType?: string;
        targetFid?: number | undefined;
    } & { [K in Exclude<keyof I, keyof LinkRequest>]: never; }>(base?: I | undefined): LinkRequest;
    fromPartial<I_1 extends {
        fid?: number;
        linkType?: string;
        targetFid?: number | undefined;
    } & {
        fid?: number;
        linkType?: string;
        targetFid?: number | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof LinkRequest>]: never; }>(object: I_1): LinkRequest;
};
interface LinksByFidRequest {
    fid: number;
    linkType?: string | undefined;
    pageSize?: number | undefined;
    pageToken?: Uint8Array | undefined;
    reverse?: boolean | undefined;
}
declare const LinksByFidRequest: {
    encode(message: LinksByFidRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): LinksByFidRequest;
    fromJSON(object: any): LinksByFidRequest;
    toJSON(message: LinksByFidRequest): unknown;
    create<I extends {
        fid?: number;
        linkType?: string | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        fid?: number;
        linkType?: string | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K in Exclude<keyof I, keyof LinksByFidRequest>]: never; }>(base?: I | undefined): LinksByFidRequest;
    fromPartial<I_1 extends {
        fid?: number;
        linkType?: string | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        fid?: number;
        linkType?: string | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof LinksByFidRequest>]: never; }>(object: I_1): LinksByFidRequest;
};
interface LinksByTargetRequest {
    targetFid?: number | undefined;
    linkType?: string | undefined;
    pageSize?: number | undefined;
    pageToken?: Uint8Array | undefined;
    reverse?: boolean | undefined;
}
declare const LinksByTargetRequest: {
    encode(message: LinksByTargetRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): LinksByTargetRequest;
    fromJSON(object: any): LinksByTargetRequest;
    toJSON(message: LinksByTargetRequest): unknown;
    create<I extends {
        targetFid?: number | undefined;
        linkType?: string | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        targetFid?: number | undefined;
        linkType?: string | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K in Exclude<keyof I, keyof LinksByTargetRequest>]: never; }>(base?: I | undefined): LinksByTargetRequest;
    fromPartial<I_1 extends {
        targetFid?: number | undefined;
        linkType?: string | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & {
        targetFid?: number | undefined;
        linkType?: string | undefined;
        pageSize?: number | undefined;
        pageToken?: Uint8Array | undefined;
        reverse?: boolean | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof LinksByTargetRequest>]: never; }>(object: I_1): LinksByTargetRequest;
};
interface IdRegistryEventByAddressRequest {
    address: Uint8Array;
}
declare const IdRegistryEventByAddressRequest: {
    encode(message: IdRegistryEventByAddressRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): IdRegistryEventByAddressRequest;
    fromJSON(object: any): IdRegistryEventByAddressRequest;
    toJSON(message: IdRegistryEventByAddressRequest): unknown;
    create<I extends {
        address?: Uint8Array;
    } & {
        address?: Uint8Array;
    } & { [K in Exclude<keyof I, "address">]: never; }>(base?: I | undefined): IdRegistryEventByAddressRequest;
    fromPartial<I_1 extends {
        address?: Uint8Array;
    } & {
        address?: Uint8Array;
    } & { [K_1 in Exclude<keyof I_1, "address">]: never; }>(object: I_1): IdRegistryEventByAddressRequest;
};
interface ContactInfoResponse {
    contacts: ContactInfoContentBody[];
}
declare const ContactInfoResponse: {
    encode(message: ContactInfoResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ContactInfoResponse;
    fromJSON(object: any): ContactInfoResponse;
    toJSON(message: ContactInfoResponse): unknown;
    create<I extends {
        contacts?: {
            gossipAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            rpcAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            excludedHashes?: string[];
            count?: number;
            hubVersion?: string;
            network?: FarcasterNetwork;
            appVersion?: string;
            timestamp?: number;
        }[];
    } & {
        contacts?: {
            gossipAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            rpcAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            excludedHashes?: string[];
            count?: number;
            hubVersion?: string;
            network?: FarcasterNetwork;
            appVersion?: string;
            timestamp?: number;
        }[] & ({
            gossipAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            rpcAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            excludedHashes?: string[];
            count?: number;
            hubVersion?: string;
            network?: FarcasterNetwork;
            appVersion?: string;
            timestamp?: number;
        } & {
            gossipAddress?: ({
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } & {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } & { [K in Exclude<keyof I["contacts"][number]["gossipAddress"], keyof GossipAddressInfo>]: never; }) | undefined;
            rpcAddress?: ({
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } & {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } & { [K_1 in Exclude<keyof I["contacts"][number]["rpcAddress"], keyof GossipAddressInfo>]: never; }) | undefined;
            excludedHashes?: string[] & string[] & { [K_2 in Exclude<keyof I["contacts"][number]["excludedHashes"], keyof string[]>]: never; };
            count?: number;
            hubVersion?: string;
            network?: FarcasterNetwork;
            appVersion?: string;
            timestamp?: number;
        } & { [K_3 in Exclude<keyof I["contacts"][number], keyof ContactInfoContentBody>]: never; })[] & { [K_4 in Exclude<keyof I["contacts"], keyof {
            gossipAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            rpcAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            excludedHashes?: string[];
            count?: number;
            hubVersion?: string;
            network?: FarcasterNetwork;
            appVersion?: string;
            timestamp?: number;
        }[]>]: never; };
    } & { [K_5 in Exclude<keyof I, "contacts">]: never; }>(base?: I | undefined): ContactInfoResponse;
    fromPartial<I_1 extends {
        contacts?: {
            gossipAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            rpcAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            excludedHashes?: string[];
            count?: number;
            hubVersion?: string;
            network?: FarcasterNetwork;
            appVersion?: string;
            timestamp?: number;
        }[];
    } & {
        contacts?: {
            gossipAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            rpcAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            excludedHashes?: string[];
            count?: number;
            hubVersion?: string;
            network?: FarcasterNetwork;
            appVersion?: string;
            timestamp?: number;
        }[] & ({
            gossipAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            rpcAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            excludedHashes?: string[];
            count?: number;
            hubVersion?: string;
            network?: FarcasterNetwork;
            appVersion?: string;
            timestamp?: number;
        } & {
            gossipAddress?: ({
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } & {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } & { [K_6 in Exclude<keyof I_1["contacts"][number]["gossipAddress"], keyof GossipAddressInfo>]: never; }) | undefined;
            rpcAddress?: ({
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } & {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } & { [K_7 in Exclude<keyof I_1["contacts"][number]["rpcAddress"], keyof GossipAddressInfo>]: never; }) | undefined;
            excludedHashes?: string[] & string[] & { [K_8 in Exclude<keyof I_1["contacts"][number]["excludedHashes"], keyof string[]>]: never; };
            count?: number;
            hubVersion?: string;
            network?: FarcasterNetwork;
            appVersion?: string;
            timestamp?: number;
        } & { [K_9 in Exclude<keyof I_1["contacts"][number], keyof ContactInfoContentBody>]: never; })[] & { [K_10 in Exclude<keyof I_1["contacts"], keyof {
            gossipAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            rpcAddress?: {
                address?: string;
                family?: number;
                port?: number;
                dnsName?: string;
            } | undefined;
            excludedHashes?: string[];
            count?: number;
            hubVersion?: string;
            network?: FarcasterNetwork;
            appVersion?: string;
            timestamp?: number;
        }[]>]: never; };
    } & { [K_11 in Exclude<keyof I_1, "contacts">]: never; }>(object: I_1): ContactInfoResponse;
};
interface ValidationResponse {
    valid: boolean;
    message: Message | undefined;
}
declare const ValidationResponse: {
    encode(message: ValidationResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ValidationResponse;
    fromJSON(object: any): ValidationResponse;
    toJSON(message: ValidationResponse): unknown;
    create<I extends {
        valid?: boolean;
        message?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } | undefined;
    } & {
        valid?: boolean;
        message?: ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K in Exclude<keyof I["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_1 in Exclude<keyof I["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_2 in Exclude<keyof I["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_3 in Exclude<keyof I["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_4 in Exclude<keyof I["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_5 in Exclude<keyof I["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_6 in Exclude<keyof I["message"]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_7 in Exclude<keyof I["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_8 in Exclude<keyof I["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_9 in Exclude<keyof I["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_10 in Exclude<keyof I["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_11 in Exclude<keyof I["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_12 in Exclude<keyof I["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_13 in Exclude<keyof I["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_14 in Exclude<keyof I["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_15 in Exclude<keyof I["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_16 in Exclude<keyof I["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_17 in Exclude<keyof I["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_18 in Exclude<keyof I["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_19 in Exclude<keyof I["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_20 in Exclude<keyof I["message"]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_21 in Exclude<keyof I["message"], keyof Message>]: never; }) | undefined;
    } & { [K_22 in Exclude<keyof I, keyof ValidationResponse>]: never; }>(base?: I | undefined): ValidationResponse;
    fromPartial<I_1 extends {
        valid?: boolean;
        message?: {
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } | undefined;
    } & {
        valid?: boolean;
        message?: ({
            data?: {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & {
            data?: ({
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: {
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } | undefined;
                castRemoveBody?: {
                    targetHash?: Uint8Array;
                } | undefined;
                reactionBody?: {
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } | undefined;
                verificationAddAddressBody?: {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } | undefined;
                verificationRemoveBody?: {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } | undefined;
                userDataBody?: {
                    type?: UserDataType;
                    value?: string;
                } | undefined;
                linkBody?: {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } | undefined;
                usernameProofBody?: {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } | undefined;
                frameActionBody?: {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } | undefined;
                linkCompactStateBody?: {
                    type?: string;
                    targetFids?: number[];
                } | undefined;
            } & {
                type?: MessageType;
                fid?: number;
                timestamp?: number;
                network?: FarcasterNetwork;
                castAddBody?: ({
                    embedsDeprecated?: string[];
                    mentions?: number[];
                    parentCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[];
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[];
                } & {
                    embedsDeprecated?: string[] & string[] & { [K_23 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embedsDeprecated"], keyof string[]>]: never; };
                    mentions?: number[] & number[] & { [K_24 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["mentions"], keyof number[]>]: never; };
                    parentCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_25 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["parentCastId"], keyof CastId>]: never; }) | undefined;
                    parentUrl?: string | undefined;
                    text?: string;
                    mentionsPositions?: number[] & number[] & { [K_26 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["mentionsPositions"], keyof number[]>]: never; };
                    embeds?: {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[] & ({
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    } & {
                        url?: string | undefined;
                        castId?: ({
                            fid?: number;
                            hash?: Uint8Array;
                        } & {
                            fid?: number;
                            hash?: Uint8Array;
                        } & { [K_27 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embeds"][number]["castId"], keyof CastId>]: never; }) | undefined;
                    } & { [K_28 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embeds"][number], keyof Embed>]: never; })[] & { [K_29 in Exclude<keyof I_1["message"]["data"]["castAddBody"]["embeds"], keyof {
                        url?: string | undefined;
                        castId?: {
                            fid?: number;
                            hash?: Uint8Array;
                        } | undefined;
                    }[]>]: never; };
                } & { [K_30 in Exclude<keyof I_1["message"]["data"]["castAddBody"], keyof CastAddBody>]: never; }) | undefined;
                castRemoveBody?: ({
                    targetHash?: Uint8Array;
                } & {
                    targetHash?: Uint8Array;
                } & { [K_31 in Exclude<keyof I_1["message"]["data"]["castRemoveBody"], "targetHash">]: never; }) | undefined;
                reactionBody?: ({
                    type?: ReactionType;
                    targetCastId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    targetUrl?: string | undefined;
                } & {
                    type?: ReactionType;
                    targetCastId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_32 in Exclude<keyof I_1["message"]["data"]["reactionBody"]["targetCastId"], keyof CastId>]: never; }) | undefined;
                    targetUrl?: string | undefined;
                } & { [K_33 in Exclude<keyof I_1["message"]["data"]["reactionBody"], keyof ReactionBody>]: never; }) | undefined;
                verificationAddAddressBody?: ({
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    claimSignature?: Uint8Array;
                    blockHash?: Uint8Array;
                    verificationType?: number;
                    chainId?: number;
                    protocol?: Protocol;
                } & { [K_34 in Exclude<keyof I_1["message"]["data"]["verificationAddAddressBody"], keyof VerificationAddAddressBody>]: never; }) | undefined;
                verificationRemoveBody?: ({
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & {
                    address?: Uint8Array;
                    protocol?: Protocol;
                } & { [K_35 in Exclude<keyof I_1["message"]["data"]["verificationRemoveBody"], keyof VerificationRemoveBody>]: never; }) | undefined;
                userDataBody?: ({
                    type?: UserDataType;
                    value?: string;
                } & {
                    type?: UserDataType;
                    value?: string;
                } & { [K_36 in Exclude<keyof I_1["message"]["data"]["userDataBody"], keyof UserDataBody>]: never; }) | undefined;
                linkBody?: ({
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & {
                    type?: string;
                    displayTimestamp?: number | undefined;
                    targetFid?: number | undefined;
                } & { [K_37 in Exclude<keyof I_1["message"]["data"]["linkBody"], keyof LinkBody>]: never; }) | undefined;
                usernameProofBody?: ({
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & {
                    timestamp?: number;
                    name?: Uint8Array;
                    owner?: Uint8Array;
                    signature?: Uint8Array;
                    fid?: number;
                    type?: UserNameType;
                } & { [K_38 in Exclude<keyof I_1["message"]["data"]["usernameProofBody"], keyof UserNameProof>]: never; }) | undefined;
                frameActionBody?: ({
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: {
                        fid?: number;
                        hash?: Uint8Array;
                    } | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & {
                    url?: Uint8Array;
                    buttonIndex?: number;
                    castId?: ({
                        fid?: number;
                        hash?: Uint8Array;
                    } & {
                        fid?: number;
                        hash?: Uint8Array;
                    } & { [K_39 in Exclude<keyof I_1["message"]["data"]["frameActionBody"]["castId"], keyof CastId>]: never; }) | undefined;
                    inputText?: Uint8Array;
                    state?: Uint8Array;
                    transactionId?: Uint8Array;
                    address?: Uint8Array;
                } & { [K_40 in Exclude<keyof I_1["message"]["data"]["frameActionBody"], keyof FrameActionBody>]: never; }) | undefined;
                linkCompactStateBody?: ({
                    type?: string;
                    targetFids?: number[];
                } & {
                    type?: string;
                    targetFids?: number[] & number[] & { [K_41 in Exclude<keyof I_1["message"]["data"]["linkCompactStateBody"]["targetFids"], keyof number[]>]: never; };
                } & { [K_42 in Exclude<keyof I_1["message"]["data"]["linkCompactStateBody"], keyof LinkCompactStateBody>]: never; }) | undefined;
            } & { [K_43 in Exclude<keyof I_1["message"]["data"], keyof MessageData>]: never; }) | undefined;
            hash?: Uint8Array;
            hashScheme?: HashScheme;
            signature?: Uint8Array;
            signatureScheme?: SignatureScheme;
            signer?: Uint8Array;
            dataBytes?: Uint8Array | undefined;
        } & { [K_44 in Exclude<keyof I_1["message"], keyof Message>]: never; }) | undefined;
    } & { [K_45 in Exclude<keyof I_1, keyof ValidationResponse>]: never; }>(object: I_1): ValidationResponse;
};

type HubServiceService = typeof HubServiceService;
declare const HubServiceService: {
    /** Submit Methods */
    readonly submitMessage: {
        readonly path: "/HubService/SubmitMessage";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: Message) => Buffer;
        readonly requestDeserialize: (value: Buffer) => Message;
        readonly responseSerialize: (value: Message) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Message;
    };
    /** Validation Methods */
    readonly validateMessage: {
        readonly path: "/HubService/ValidateMessage";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: Message) => Buffer;
        readonly requestDeserialize: (value: Buffer) => Message;
        readonly responseSerialize: (value: ValidationResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ValidationResponse;
    };
    /**
     * Event Methods
     * @http-api: none
     */
    readonly subscribe: {
        readonly path: "/HubService/Subscribe";
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestSerialize: (value: SubscribeRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => SubscribeRequest;
        readonly responseSerialize: (value: HubEvent) => Buffer;
        readonly responseDeserialize: (value: Buffer) => HubEvent;
    };
    /** @http-api: events */
    readonly getEvent: {
        readonly path: "/HubService/GetEvent";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: EventRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => EventRequest;
        readonly responseSerialize: (value: HubEvent) => Buffer;
        readonly responseDeserialize: (value: Buffer) => HubEvent;
    };
    /**
     * Casts
     * @http-api: castById
     */
    readonly getCast: {
        readonly path: "/HubService/GetCast";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CastId) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CastId;
        readonly responseSerialize: (value: Message) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Message;
    };
    readonly getCastsByFid: {
        readonly path: "/HubService/GetCastsByFid";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    readonly getCastsByParent: {
        readonly path: "/HubService/GetCastsByParent";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CastsByParentRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CastsByParentRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    readonly getCastsByMention: {
        readonly path: "/HubService/GetCastsByMention";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    /**
     * Reactions
     * @http-api: reactionById
     */
    readonly getReaction: {
        readonly path: "/HubService/GetReaction";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ReactionRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ReactionRequest;
        readonly responseSerialize: (value: Message) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Message;
    };
    readonly getReactionsByFid: {
        readonly path: "/HubService/GetReactionsByFid";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ReactionsByFidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ReactionsByFidRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    /** To be deprecated */
    readonly getReactionsByCast: {
        readonly path: "/HubService/GetReactionsByCast";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ReactionsByTargetRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ReactionsByTargetRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    readonly getReactionsByTarget: {
        readonly path: "/HubService/GetReactionsByTarget";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ReactionsByTargetRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ReactionsByTargetRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    /**
     * User Data
     * @http-api: none
     */
    readonly getUserData: {
        readonly path: "/HubService/GetUserData";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: UserDataRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => UserDataRequest;
        readonly responseSerialize: (value: Message) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Message;
    };
    readonly getUserDataByFid: {
        readonly path: "/HubService/GetUserDataByFid";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    /**
     * Username Proof
     * @http-api: userNameProofByName
     */
    readonly getUsernameProof: {
        readonly path: "/HubService/GetUsernameProof";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: UsernameProofRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => UsernameProofRequest;
        readonly responseSerialize: (value: UserNameProof) => Buffer;
        readonly responseDeserialize: (value: Buffer) => UserNameProof;
    };
    readonly getUserNameProofsByFid: {
        readonly path: "/HubService/GetUserNameProofsByFid";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidRequest;
        readonly responseSerialize: (value: UsernameProofsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => UsernameProofsResponse;
    };
    /**
     * Verifications
     * @http-api: none
     */
    readonly getVerification: {
        readonly path: "/HubService/GetVerification";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: VerificationRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => VerificationRequest;
        readonly responseSerialize: (value: Message) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Message;
    };
    readonly getVerificationsByFid: {
        readonly path: "/HubService/GetVerificationsByFid";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    /**
     * OnChain Events
     * @http-api: none
     */
    readonly getOnChainSigner: {
        readonly path: "/HubService/GetOnChainSigner";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: SignerRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => SignerRequest;
        readonly responseSerialize: (value: OnChainEvent) => Buffer;
        readonly responseDeserialize: (value: Buffer) => OnChainEvent;
    };
    readonly getOnChainSignersByFid: {
        readonly path: "/HubService/GetOnChainSignersByFid";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidRequest;
        readonly responseSerialize: (value: OnChainEventResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => OnChainEventResponse;
    };
    /** @http-api: none */
    readonly getOnChainEvents: {
        readonly path: "/HubService/GetOnChainEvents";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: OnChainEventRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => OnChainEventRequest;
        readonly responseSerialize: (value: OnChainEventResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => OnChainEventResponse;
    };
    /** @http-api: none */
    readonly getIdRegistryOnChainEvent: {
        readonly path: "/HubService/GetIdRegistryOnChainEvent";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidRequest;
        readonly responseSerialize: (value: OnChainEvent) => Buffer;
        readonly responseDeserialize: (value: Buffer) => OnChainEvent;
    };
    /** @http-api: onChainIdRegistryEventByAddress */
    readonly getIdRegistryOnChainEventByAddress: {
        readonly path: "/HubService/GetIdRegistryOnChainEventByAddress";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: IdRegistryEventByAddressRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => IdRegistryEventByAddressRequest;
        readonly responseSerialize: (value: OnChainEvent) => Buffer;
        readonly responseDeserialize: (value: Buffer) => OnChainEvent;
    };
    /** @http-api: storageLimitsByFid */
    readonly getCurrentStorageLimitsByFid: {
        readonly path: "/HubService/GetCurrentStorageLimitsByFid";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidRequest;
        readonly responseSerialize: (value: StorageLimitsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => StorageLimitsResponse;
    };
    readonly getFids: {
        readonly path: "/HubService/GetFids";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidsRequest;
        readonly responseSerialize: (value: FidsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => FidsResponse;
    };
    /**
     * Links
     * @http-api: linkById
     */
    readonly getLink: {
        readonly path: "/HubService/GetLink";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: LinkRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => LinkRequest;
        readonly responseSerialize: (value: Message) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Message;
    };
    readonly getLinksByFid: {
        readonly path: "/HubService/GetLinksByFid";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: LinksByFidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => LinksByFidRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    /** @http-api: linksByTargetFid */
    readonly getLinksByTarget: {
        readonly path: "/HubService/GetLinksByTarget";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: LinksByTargetRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => LinksByTargetRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    /**
     * Bulk Methods
     * The Bulk methods don't have corresponding HTTP API endpoints because the
     * regular endpoints can be used to get all the messages
     * @http-api: none
     */
    readonly getAllCastMessagesByFid: {
        readonly path: "/HubService/GetAllCastMessagesByFid";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    /** @http-api: none */
    readonly getAllReactionMessagesByFid: {
        readonly path: "/HubService/GetAllReactionMessagesByFid";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    /** @http-api: none */
    readonly getAllVerificationMessagesByFid: {
        readonly path: "/HubService/GetAllVerificationMessagesByFid";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    /** @http-api: none */
    readonly getAllUserDataMessagesByFid: {
        readonly path: "/HubService/GetAllUserDataMessagesByFid";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    /** @http-api: none */
    readonly getAllLinkMessagesByFid: {
        readonly path: "/HubService/GetAllLinkMessagesByFid";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: FidRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => FidRequest;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    /** Sync Methods */
    readonly getInfo: {
        readonly path: "/HubService/GetInfo";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: HubInfoRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => HubInfoRequest;
        readonly responseSerialize: (value: HubInfoResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => HubInfoResponse;
    };
    readonly getCurrentPeers: {
        readonly path: "/HubService/GetCurrentPeers";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: Empty) => Buffer;
        readonly requestDeserialize: (value: Buffer) => Empty;
        readonly responseSerialize: (value: ContactInfoResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ContactInfoResponse;
    };
    /** @http-api: none */
    readonly getSyncStatus: {
        readonly path: "/HubService/GetSyncStatus";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: SyncStatusRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => SyncStatusRequest;
        readonly responseSerialize: (value: SyncStatusResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => SyncStatusResponse;
    };
    /** @http-api: none */
    readonly getAllSyncIdsByPrefix: {
        readonly path: "/HubService/GetAllSyncIdsByPrefix";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: TrieNodePrefix) => Buffer;
        readonly requestDeserialize: (value: Buffer) => TrieNodePrefix;
        readonly responseSerialize: (value: SyncIds) => Buffer;
        readonly responseDeserialize: (value: Buffer) => SyncIds;
    };
    /** @http-api: none */
    readonly getAllMessagesBySyncIds: {
        readonly path: "/HubService/GetAllMessagesBySyncIds";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: SyncIds) => Buffer;
        readonly requestDeserialize: (value: Buffer) => SyncIds;
        readonly responseSerialize: (value: MessagesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => MessagesResponse;
    };
    /** @http-api: none */
    readonly getSyncMetadataByPrefix: {
        readonly path: "/HubService/GetSyncMetadataByPrefix";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: TrieNodePrefix) => Buffer;
        readonly requestDeserialize: (value: Buffer) => TrieNodePrefix;
        readonly responseSerialize: (value: TrieNodeMetadataResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => TrieNodeMetadataResponse;
    };
    /** @http-api: none */
    readonly getSyncSnapshotByPrefix: {
        readonly path: "/HubService/GetSyncSnapshotByPrefix";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: TrieNodePrefix) => Buffer;
        readonly requestDeserialize: (value: Buffer) => TrieNodePrefix;
        readonly responseSerialize: (value: TrieNodeSnapshotResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => TrieNodeSnapshotResponse;
    };
};
interface HubServiceServer extends UntypedServiceImplementation {
    /** Submit Methods */
    submitMessage: handleUnaryCall<Message, Message>;
    /** Validation Methods */
    validateMessage: handleUnaryCall<Message, ValidationResponse>;
    /**
     * Event Methods
     * @http-api: none
     */
    subscribe: handleServerStreamingCall<SubscribeRequest, HubEvent>;
    /** @http-api: events */
    getEvent: handleUnaryCall<EventRequest, HubEvent>;
    /**
     * Casts
     * @http-api: castById
     */
    getCast: handleUnaryCall<CastId, Message>;
    getCastsByFid: handleUnaryCall<FidRequest, MessagesResponse>;
    getCastsByParent: handleUnaryCall<CastsByParentRequest, MessagesResponse>;
    getCastsByMention: handleUnaryCall<FidRequest, MessagesResponse>;
    /**
     * Reactions
     * @http-api: reactionById
     */
    getReaction: handleUnaryCall<ReactionRequest, Message>;
    getReactionsByFid: handleUnaryCall<ReactionsByFidRequest, MessagesResponse>;
    /** To be deprecated */
    getReactionsByCast: handleUnaryCall<ReactionsByTargetRequest, MessagesResponse>;
    getReactionsByTarget: handleUnaryCall<ReactionsByTargetRequest, MessagesResponse>;
    /**
     * User Data
     * @http-api: none
     */
    getUserData: handleUnaryCall<UserDataRequest, Message>;
    getUserDataByFid: handleUnaryCall<FidRequest, MessagesResponse>;
    /**
     * Username Proof
     * @http-api: userNameProofByName
     */
    getUsernameProof: handleUnaryCall<UsernameProofRequest, UserNameProof>;
    getUserNameProofsByFid: handleUnaryCall<FidRequest, UsernameProofsResponse>;
    /**
     * Verifications
     * @http-api: none
     */
    getVerification: handleUnaryCall<VerificationRequest, Message>;
    getVerificationsByFid: handleUnaryCall<FidRequest, MessagesResponse>;
    /**
     * OnChain Events
     * @http-api: none
     */
    getOnChainSigner: handleUnaryCall<SignerRequest, OnChainEvent>;
    getOnChainSignersByFid: handleUnaryCall<FidRequest, OnChainEventResponse>;
    /** @http-api: none */
    getOnChainEvents: handleUnaryCall<OnChainEventRequest, OnChainEventResponse>;
    /** @http-api: none */
    getIdRegistryOnChainEvent: handleUnaryCall<FidRequest, OnChainEvent>;
    /** @http-api: onChainIdRegistryEventByAddress */
    getIdRegistryOnChainEventByAddress: handleUnaryCall<IdRegistryEventByAddressRequest, OnChainEvent>;
    /** @http-api: storageLimitsByFid */
    getCurrentStorageLimitsByFid: handleUnaryCall<FidRequest, StorageLimitsResponse>;
    getFids: handleUnaryCall<FidsRequest, FidsResponse>;
    /**
     * Links
     * @http-api: linkById
     */
    getLink: handleUnaryCall<LinkRequest, Message>;
    getLinksByFid: handleUnaryCall<LinksByFidRequest, MessagesResponse>;
    /** @http-api: linksByTargetFid */
    getLinksByTarget: handleUnaryCall<LinksByTargetRequest, MessagesResponse>;
    /**
     * Bulk Methods
     * The Bulk methods don't have corresponding HTTP API endpoints because the
     * regular endpoints can be used to get all the messages
     * @http-api: none
     */
    getAllCastMessagesByFid: handleUnaryCall<FidRequest, MessagesResponse>;
    /** @http-api: none */
    getAllReactionMessagesByFid: handleUnaryCall<FidRequest, MessagesResponse>;
    /** @http-api: none */
    getAllVerificationMessagesByFid: handleUnaryCall<FidRequest, MessagesResponse>;
    /** @http-api: none */
    getAllUserDataMessagesByFid: handleUnaryCall<FidRequest, MessagesResponse>;
    /** @http-api: none */
    getAllLinkMessagesByFid: handleUnaryCall<FidRequest, MessagesResponse>;
    /** Sync Methods */
    getInfo: handleUnaryCall<HubInfoRequest, HubInfoResponse>;
    getCurrentPeers: handleUnaryCall<Empty, ContactInfoResponse>;
    /** @http-api: none */
    getSyncStatus: handleUnaryCall<SyncStatusRequest, SyncStatusResponse>;
    /** @http-api: none */
    getAllSyncIdsByPrefix: handleUnaryCall<TrieNodePrefix, SyncIds>;
    /** @http-api: none */
    getAllMessagesBySyncIds: handleUnaryCall<SyncIds, MessagesResponse>;
    /** @http-api: none */
    getSyncMetadataByPrefix: handleUnaryCall<TrieNodePrefix, TrieNodeMetadataResponse>;
    /** @http-api: none */
    getSyncSnapshotByPrefix: handleUnaryCall<TrieNodePrefix, TrieNodeSnapshotResponse>;
}
interface HubServiceClient extends Client {
    /** Submit Methods */
    submitMessage(request: Message, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    submitMessage(request: Message, metadata: Metadata, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    submitMessage(request: Message, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    /** Validation Methods */
    validateMessage(request: Message, callback: (error: ServiceError | null, response: ValidationResponse) => void): ClientUnaryCall;
    validateMessage(request: Message, metadata: Metadata, callback: (error: ServiceError | null, response: ValidationResponse) => void): ClientUnaryCall;
    validateMessage(request: Message, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ValidationResponse) => void): ClientUnaryCall;
    /**
     * Event Methods
     * @http-api: none
     */
    subscribe(request: SubscribeRequest, options?: Partial<CallOptions>): ClientReadableStream<HubEvent>;
    subscribe(request: SubscribeRequest, metadata?: Metadata, options?: Partial<CallOptions>): ClientReadableStream<HubEvent>;
    /** @http-api: events */
    getEvent(request: EventRequest, callback: (error: ServiceError | null, response: HubEvent) => void): ClientUnaryCall;
    getEvent(request: EventRequest, metadata: Metadata, callback: (error: ServiceError | null, response: HubEvent) => void): ClientUnaryCall;
    getEvent(request: EventRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: HubEvent) => void): ClientUnaryCall;
    /**
     * Casts
     * @http-api: castById
     */
    getCast(request: CastId, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getCast(request: CastId, metadata: Metadata, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getCast(request: CastId, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getCastsByFid(request: FidRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getCastsByFid(request: FidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getCastsByFid(request: FidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getCastsByParent(request: CastsByParentRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getCastsByParent(request: CastsByParentRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getCastsByParent(request: CastsByParentRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getCastsByMention(request: FidRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getCastsByMention(request: FidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getCastsByMention(request: FidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    /**
     * Reactions
     * @http-api: reactionById
     */
    getReaction(request: ReactionRequest, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getReaction(request: ReactionRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getReaction(request: ReactionRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getReactionsByFid(request: ReactionsByFidRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getReactionsByFid(request: ReactionsByFidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getReactionsByFid(request: ReactionsByFidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    /** To be deprecated */
    getReactionsByCast(request: ReactionsByTargetRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getReactionsByCast(request: ReactionsByTargetRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getReactionsByCast(request: ReactionsByTargetRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getReactionsByTarget(request: ReactionsByTargetRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getReactionsByTarget(request: ReactionsByTargetRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getReactionsByTarget(request: ReactionsByTargetRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    /**
     * User Data
     * @http-api: none
     */
    getUserData(request: UserDataRequest, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getUserData(request: UserDataRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getUserData(request: UserDataRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getUserDataByFid(request: FidRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getUserDataByFid(request: FidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getUserDataByFid(request: FidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    /**
     * Username Proof
     * @http-api: userNameProofByName
     */
    getUsernameProof(request: UsernameProofRequest, callback: (error: ServiceError | null, response: UserNameProof) => void): ClientUnaryCall;
    getUsernameProof(request: UsernameProofRequest, metadata: Metadata, callback: (error: ServiceError | null, response: UserNameProof) => void): ClientUnaryCall;
    getUsernameProof(request: UsernameProofRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: UserNameProof) => void): ClientUnaryCall;
    getUserNameProofsByFid(request: FidRequest, callback: (error: ServiceError | null, response: UsernameProofsResponse) => void): ClientUnaryCall;
    getUserNameProofsByFid(request: FidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: UsernameProofsResponse) => void): ClientUnaryCall;
    getUserNameProofsByFid(request: FidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: UsernameProofsResponse) => void): ClientUnaryCall;
    /**
     * Verifications
     * @http-api: none
     */
    getVerification(request: VerificationRequest, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getVerification(request: VerificationRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getVerification(request: VerificationRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getVerificationsByFid(request: FidRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getVerificationsByFid(request: FidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getVerificationsByFid(request: FidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    /**
     * OnChain Events
     * @http-api: none
     */
    getOnChainSigner(request: SignerRequest, callback: (error: ServiceError | null, response: OnChainEvent) => void): ClientUnaryCall;
    getOnChainSigner(request: SignerRequest, metadata: Metadata, callback: (error: ServiceError | null, response: OnChainEvent) => void): ClientUnaryCall;
    getOnChainSigner(request: SignerRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: OnChainEvent) => void): ClientUnaryCall;
    getOnChainSignersByFid(request: FidRequest, callback: (error: ServiceError | null, response: OnChainEventResponse) => void): ClientUnaryCall;
    getOnChainSignersByFid(request: FidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: OnChainEventResponse) => void): ClientUnaryCall;
    getOnChainSignersByFid(request: FidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: OnChainEventResponse) => void): ClientUnaryCall;
    /** @http-api: none */
    getOnChainEvents(request: OnChainEventRequest, callback: (error: ServiceError | null, response: OnChainEventResponse) => void): ClientUnaryCall;
    getOnChainEvents(request: OnChainEventRequest, metadata: Metadata, callback: (error: ServiceError | null, response: OnChainEventResponse) => void): ClientUnaryCall;
    getOnChainEvents(request: OnChainEventRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: OnChainEventResponse) => void): ClientUnaryCall;
    /** @http-api: none */
    getIdRegistryOnChainEvent(request: FidRequest, callback: (error: ServiceError | null, response: OnChainEvent) => void): ClientUnaryCall;
    getIdRegistryOnChainEvent(request: FidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: OnChainEvent) => void): ClientUnaryCall;
    getIdRegistryOnChainEvent(request: FidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: OnChainEvent) => void): ClientUnaryCall;
    /** @http-api: onChainIdRegistryEventByAddress */
    getIdRegistryOnChainEventByAddress(request: IdRegistryEventByAddressRequest, callback: (error: ServiceError | null, response: OnChainEvent) => void): ClientUnaryCall;
    getIdRegistryOnChainEventByAddress(request: IdRegistryEventByAddressRequest, metadata: Metadata, callback: (error: ServiceError | null, response: OnChainEvent) => void): ClientUnaryCall;
    getIdRegistryOnChainEventByAddress(request: IdRegistryEventByAddressRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: OnChainEvent) => void): ClientUnaryCall;
    /** @http-api: storageLimitsByFid */
    getCurrentStorageLimitsByFid(request: FidRequest, callback: (error: ServiceError | null, response: StorageLimitsResponse) => void): ClientUnaryCall;
    getCurrentStorageLimitsByFid(request: FidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: StorageLimitsResponse) => void): ClientUnaryCall;
    getCurrentStorageLimitsByFid(request: FidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: StorageLimitsResponse) => void): ClientUnaryCall;
    getFids(request: FidsRequest, callback: (error: ServiceError | null, response: FidsResponse) => void): ClientUnaryCall;
    getFids(request: FidsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: FidsResponse) => void): ClientUnaryCall;
    getFids(request: FidsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: FidsResponse) => void): ClientUnaryCall;
    /**
     * Links
     * @http-api: linkById
     */
    getLink(request: LinkRequest, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getLink(request: LinkRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getLink(request: LinkRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Message) => void): ClientUnaryCall;
    getLinksByFid(request: LinksByFidRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getLinksByFid(request: LinksByFidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getLinksByFid(request: LinksByFidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    /** @http-api: linksByTargetFid */
    getLinksByTarget(request: LinksByTargetRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getLinksByTarget(request: LinksByTargetRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getLinksByTarget(request: LinksByTargetRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    /**
     * Bulk Methods
     * The Bulk methods don't have corresponding HTTP API endpoints because the
     * regular endpoints can be used to get all the messages
     * @http-api: none
     */
    getAllCastMessagesByFid(request: FidRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getAllCastMessagesByFid(request: FidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getAllCastMessagesByFid(request: FidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    /** @http-api: none */
    getAllReactionMessagesByFid(request: FidRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getAllReactionMessagesByFid(request: FidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getAllReactionMessagesByFid(request: FidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    /** @http-api: none */
    getAllVerificationMessagesByFid(request: FidRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getAllVerificationMessagesByFid(request: FidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getAllVerificationMessagesByFid(request: FidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    /** @http-api: none */
    getAllUserDataMessagesByFid(request: FidRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getAllUserDataMessagesByFid(request: FidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getAllUserDataMessagesByFid(request: FidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    /** @http-api: none */
    getAllLinkMessagesByFid(request: FidRequest, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getAllLinkMessagesByFid(request: FidRequest, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getAllLinkMessagesByFid(request: FidRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    /** Sync Methods */
    getInfo(request: HubInfoRequest, callback: (error: ServiceError | null, response: HubInfoResponse) => void): ClientUnaryCall;
    getInfo(request: HubInfoRequest, metadata: Metadata, callback: (error: ServiceError | null, response: HubInfoResponse) => void): ClientUnaryCall;
    getInfo(request: HubInfoRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: HubInfoResponse) => void): ClientUnaryCall;
    getCurrentPeers(request: Empty, callback: (error: ServiceError | null, response: ContactInfoResponse) => void): ClientUnaryCall;
    getCurrentPeers(request: Empty, metadata: Metadata, callback: (error: ServiceError | null, response: ContactInfoResponse) => void): ClientUnaryCall;
    getCurrentPeers(request: Empty, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ContactInfoResponse) => void): ClientUnaryCall;
    /** @http-api: none */
    getSyncStatus(request: SyncStatusRequest, callback: (error: ServiceError | null, response: SyncStatusResponse) => void): ClientUnaryCall;
    getSyncStatus(request: SyncStatusRequest, metadata: Metadata, callback: (error: ServiceError | null, response: SyncStatusResponse) => void): ClientUnaryCall;
    getSyncStatus(request: SyncStatusRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: SyncStatusResponse) => void): ClientUnaryCall;
    /** @http-api: none */
    getAllSyncIdsByPrefix(request: TrieNodePrefix, callback: (error: ServiceError | null, response: SyncIds) => void): ClientUnaryCall;
    getAllSyncIdsByPrefix(request: TrieNodePrefix, metadata: Metadata, callback: (error: ServiceError | null, response: SyncIds) => void): ClientUnaryCall;
    getAllSyncIdsByPrefix(request: TrieNodePrefix, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: SyncIds) => void): ClientUnaryCall;
    /** @http-api: none */
    getAllMessagesBySyncIds(request: SyncIds, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getAllMessagesBySyncIds(request: SyncIds, metadata: Metadata, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    getAllMessagesBySyncIds(request: SyncIds, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: MessagesResponse) => void): ClientUnaryCall;
    /** @http-api: none */
    getSyncMetadataByPrefix(request: TrieNodePrefix, callback: (error: ServiceError | null, response: TrieNodeMetadataResponse) => void): ClientUnaryCall;
    getSyncMetadataByPrefix(request: TrieNodePrefix, metadata: Metadata, callback: (error: ServiceError | null, response: TrieNodeMetadataResponse) => void): ClientUnaryCall;
    getSyncMetadataByPrefix(request: TrieNodePrefix, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: TrieNodeMetadataResponse) => void): ClientUnaryCall;
    /** @http-api: none */
    getSyncSnapshotByPrefix(request: TrieNodePrefix, callback: (error: ServiceError | null, response: TrieNodeSnapshotResponse) => void): ClientUnaryCall;
    getSyncSnapshotByPrefix(request: TrieNodePrefix, metadata: Metadata, callback: (error: ServiceError | null, response: TrieNodeSnapshotResponse) => void): ClientUnaryCall;
    getSyncSnapshotByPrefix(request: TrieNodePrefix, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: TrieNodeSnapshotResponse) => void): ClientUnaryCall;
}
declare const HubServiceClient: {
    new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): HubServiceClient;
    service: typeof HubServiceService;
};
type AdminServiceService = typeof AdminServiceService;
declare const AdminServiceService: {
    readonly rebuildSyncTrie: {
        readonly path: "/AdminService/RebuildSyncTrie";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: Empty) => Buffer;
        readonly requestDeserialize: (value: Buffer) => Empty;
        readonly responseSerialize: (value: Empty) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Empty;
    };
    readonly deleteAllMessagesFromDb: {
        readonly path: "/AdminService/DeleteAllMessagesFromDb";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: Empty) => Buffer;
        readonly requestDeserialize: (value: Buffer) => Empty;
        readonly responseSerialize: (value: Empty) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Empty;
    };
    readonly submitOnChainEvent: {
        readonly path: "/AdminService/SubmitOnChainEvent";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: OnChainEvent) => Buffer;
        readonly requestDeserialize: (value: Buffer) => OnChainEvent;
        readonly responseSerialize: (value: OnChainEvent) => Buffer;
        readonly responseDeserialize: (value: Buffer) => OnChainEvent;
    };
};
interface AdminServiceServer extends UntypedServiceImplementation {
    rebuildSyncTrie: handleUnaryCall<Empty, Empty>;
    deleteAllMessagesFromDb: handleUnaryCall<Empty, Empty>;
    submitOnChainEvent: handleUnaryCall<OnChainEvent, OnChainEvent>;
}
interface AdminServiceClient extends Client {
    rebuildSyncTrie(request: Empty, callback: (error: ServiceError | null, response: Empty) => void): ClientUnaryCall;
    rebuildSyncTrie(request: Empty, metadata: Metadata, callback: (error: ServiceError | null, response: Empty) => void): ClientUnaryCall;
    rebuildSyncTrie(request: Empty, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Empty) => void): ClientUnaryCall;
    deleteAllMessagesFromDb(request: Empty, callback: (error: ServiceError | null, response: Empty) => void): ClientUnaryCall;
    deleteAllMessagesFromDb(request: Empty, metadata: Metadata, callback: (error: ServiceError | null, response: Empty) => void): ClientUnaryCall;
    deleteAllMessagesFromDb(request: Empty, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Empty) => void): ClientUnaryCall;
    submitOnChainEvent(request: OnChainEvent, callback: (error: ServiceError | null, response: OnChainEvent) => void): ClientUnaryCall;
    submitOnChainEvent(request: OnChainEvent, metadata: Metadata, callback: (error: ServiceError | null, response: OnChainEvent) => void): ClientUnaryCall;
    submitOnChainEvent(request: OnChainEvent, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: OnChainEvent) => void): ClientUnaryCall;
}
declare const AdminServiceClient: {
    new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): AdminServiceClient;
    service: typeof AdminServiceService;
};

type OriginalUnaryCall<T, U> = (request: T, metadata: Metadata, options: Partial<CallOptions>, callback: (err: ServiceError | null, res?: U) => void) => ClientUnaryCall;
type OriginalStream<T, U> = (request: T, metadata?: Metadata, options?: Partial<CallOptions>) => ClientReadableStream<U>;
type PromisifiedUnaryCall<T, U> = (request: T, metadata?: Metadata, options?: Partial<CallOptions>) => Promise<HubResult<U>>;
type PromisifiedStream<T, U> = (request: T, metadata?: Metadata, options?: Partial<CallOptions>) => Promise<HubResult<ClientReadableStream<U>>>;
type PromisifiedClient<C> = {
    $: C;
    close: () => void;
} & {
    [prop in Exclude<keyof C, keyof Client>]: C[prop] extends OriginalStream<infer T, infer U> ? PromisifiedStream<T, U> : C[prop] extends OriginalUnaryCall<infer T, infer U> ? PromisifiedUnaryCall<T, U> : never;
};
type HubRpcClient = PromisifiedClient<HubServiceClient>;
declare const getSSLHubRpcClient: (address: string, options?: Partial<grpc.ClientOptions>) => HubRpcClient;
declare const getInsecureHubRpcClient: (address: string, options?: Partial<grpc.ClientOptions>) => HubRpcClient;
type AdminRpcClient = PromisifiedClient<AdminServiceClient>;
declare const getAdminRpcClient: (address: string) => Promise<AdminRpcClient>;
declare const getAuthMetadata: (username: string, password: string) => Metadata;
declare const getServer: () => grpc.Server;
declare const getSSLClient: (address: string, options?: Partial<grpc.ClientOptions>) => HubServiceClient;
declare const getInsecureClient: (address: string, options?: Partial<grpc.ClientOptions>) => HubServiceClient;
declare const getAdminClient: (address: string, options?: Partial<grpc.ClientOptions>) => AdminServiceClient;

export { AdminRpcClient, AdminServiceClient, AdminServiceServer, AdminServiceService, HubRpcClient, HubServiceClient, HubServiceServer, HubServiceService, getAdminClient, getAdminRpcClient, getAuthMetadata, getInsecureClient, getInsecureHubRpcClient, getSSLClient, getSSLHubRpcClient, getServer };
